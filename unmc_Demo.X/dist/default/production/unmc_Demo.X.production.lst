

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Oct 25 18:50:04 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30  0000                     
    31                           	psect	idataCOMRAM
    32  00174C                     __pidataCOMRAM:
    33                           	opt stack 0
    34                           
    35                           ;initializer for _anio
    36  00174C  000F               	dw	15
    37                           
    38                           ;initializer for _dia
    39  00174E  0008               	dw	8
    40                           
    41                           ;initializer for _diasem
    42  001750  0003               	dw	3
    43                           
    44                           ;initializer for _hora
    45  001752  0012               	dw	18
    46                           
    47                           ;initializer for _mes
    48  001754  0009               	dw	9
    49                           
    50                           ;initializer for _minuto
    51  001756  001E               	dw	30
    52                           
    53                           ;initializer for _key
    54  001758  12                 	db	18
    55                           
    56                           ;initializer for _state_alarm
    57  001759  01                 	db	1
    58                           
    59                           	psect	smallconst
    60  000F00                     __psmallconst:
    61                           	opt stack 0
    62  000F00  00                 	db	0
    63  000F01                     _dpowers:
    64                           	opt stack 0
    65  000F01  0001               	dw	1
    66  000F03  000A               	dw	10
    67  000F05  0064               	dw	100
    68  000F07  03E8               	dw	1000
    69  000F09  2710               	dw	10000
    70  000F0B                     __end_of_dpowers:
    71                           	opt stack 0
    72  000F0B                     _LCD_INIT_STRING:
    73                           	opt stack 0
    74  000F0B  28                 	db	40
    75  000F0C  0C                 	db	12
    76  000F0D  01                 	db	1
    77  000F0E  06                 	db	6
    78  000F0F                     __end_of_LCD_INIT_STRING:
    79                           	opt stack 0
    80  0000                     _ANCON0	set	3912
    81  0000                     _ANCON1	set	3913
    82  0000                     _RTCCFGbits	set	3903
    83  0000                     _LATAbits	set	3977
    84  0000                     _LATBbits	set	3978
    85  0000                     _OSCCONbits	set	4051
    86  0000                     _OSCTUNEbits	set	3995
    87  0000                     _PORTAbits	set	3968
    88  0000                     _PORTCbits	set	3970
    89  0000                     _T1CONbits	set	4045
    90  0000                     _TRISA	set	3986
    91  0000                     _TRISB	set	3987
    92  0000                     _TRISBbits	set	3987
    93  0000                     _TRISC	set	3988
    94  000F0F                     STR_1:
    95                           
    96                           ; BSR set to: 15
    97  000F0F  25                 	db	37
    98  000F10  30                 	db	48	;'0'
    99  000F11  31                 	db	49	;'1'
   100  000F12  75                 	db	117	;'u'
   101  000F13  00                 	db	0
   102  0000                     
   103                           ; #config settings
   104  000F14  00                 	db	0	; dummy byte at the end
   105  0000                     
   106                           	psect	cinit
   107  0015E8                     __pcinit:
   108                           	opt stack 0
   109  0015E8                     start_initialization:
   110                           	opt stack 0
   111  0015E8                     __initialization:
   112                           	opt stack 0
   113                           
   114                           ; Clear objects allocated to BANK0 (44 bytes)
   115  0015E8  EE00  F060         	lfsr	0,__pbssBANK0
   116  0015EC  0E2C               	movlw	44
   117  0015EE                     clear_0:
   118  0015EE  6AEE               	clrf	postinc0,c
   119  0015F0  06E8               	decf	wreg,f,c
   120  0015F2  E1FD               	bnz	clear_0
   121                           
   122                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   123  0015F4  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   124                           
   125                           ; Clear objects allocated to COMRAM (48 bytes)
   126  0015F6  EE00  F001         	lfsr	0,__pbssCOMRAM
   127  0015FA  0E30               	movlw	48
   128  0015FC                     clear_1:
   129  0015FC  6AEE               	clrf	postinc0,c
   130  0015FE  06E8               	decf	wreg,f,c
   131  001600  E1FD               	bnz	clear_1
   132                           
   133                           ; Initialize objects allocated to COMRAM (14 bytes)
   134                           ; load TBLPTR registers with __pidataCOMRAM
   135  001602  0E4C               	movlw	low __pidataCOMRAM
   136  001604  6EF6               	movwf	tblptrl,c
   137  001606  0E17               	movlw	high __pidataCOMRAM
   138  001608  6EF7               	movwf	tblptrh,c
   139  00160A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   140  00160C  6EF8               	movwf	tblptru,c
   141  00160E  EE00  F050         	lfsr	0,__pdataCOMRAM
   142  001612  EE10 F00E          	lfsr	1,14
   143  001616                     copy_data0:
   144  001616  0009               	tblrd		*+
   145  001618  CFF5 FFEE          	movff	tablat,postinc0
   146  00161C  50E5               	movf	postdec1,w,c
   147  00161E  50E1               	movf	fsr1l,w,c
   148  001620  E1FA               	bnz	copy_data0
   149  001622                     end_of_initialization:
   150                           	opt stack 0
   151  001622                     __end_of__initialization:
   152                           	opt stack 0
   153  001622  0E00               	movlw	low (__Lmediumconst shr (0+16))
   154  001624  6EF8               	movwf	tblptru,c
   155  001626  0100               	movlb	0
   156  001628  EF93  F00B         	goto	_main	;jump to C main() function
   157                           tblptru	equ	0xFF8
   158                           tblptrh	equ	0xFF7
   159                           tblptrl	equ	0xFF6
   160                           tablat	equ	0xFF5
   161                           postinc0	equ	0xFEE
   162                           wreg	equ	0xFE8
   163                           postdec1	equ	0xFE5
   164                           fsr1l	equ	0xFE1
   165                           
   166                           	psect	bitbssCOMRAM
   167  0002F0                     __pbitbssCOMRAM:
   168                           	opt stack 0
   169  0002F0                     _flag:
   170                           	opt stack 0
   171  0002F0                     	ds	1
   172                           tblptru	equ	0xFF8
   173                           tblptrh	equ	0xFF7
   174                           tblptrl	equ	0xFF6
   175                           tablat	equ	0xFF5
   176                           postinc0	equ	0xFEE
   177                           wreg	equ	0xFE8
   178                           postdec1	equ	0xFE5
   179                           fsr1l	equ	0xFE1
   180                           
   181                           	psect	bssCOMRAM
   182  000001                     __pbssCOMRAM:
   183                           	opt stack 0
   184  000001                     _RtccDate:
   185                           	opt stack 0
   186  000001                     	ds	4
   187  000005                     _RtccTime:
   188                           	opt stack 0
   189  000005                     	ds	4
   190  000009                     _RtccTimeVal:
   191                           	opt stack 0
   192  000009                     	ds	4
   193  00000D                     _a:
   194                           	opt stack 0
   195  00000D                     	ds	2
   196  00000F                     _b:
   197                           	opt stack 0
   198  00000F                     	ds	2
   199  000011                     _c:
   200                           	opt stack 0
   201  000011                     	ds	2
   202  000013                     _diaDisparo:
   203                           	opt stack 0
   204  000013                     	ds	2
   205  000015                     _horaDisparo:
   206                           	opt stack 0
   207  000015                     	ds	2
   208  000017                     _i:
   209                           	opt stack 0
   210  000017                     	ds	2
   211  000019                     _j:
   212                           	opt stack 0
   213  000019                     	ds	2
   214  00001B                     _k:
   215                           	opt stack 0
   216  00001B                     	ds	2
   217  00001D                     _mesDisparo:
   218                           	opt stack 0
   219  00001D                     	ds	2
   220  00001F                     _minDisparo:
   221                           	opt stack 0
   222  00001F                     	ds	2
   223  000021                     _segundo:
   224                           	opt stack 0
   225  000021                     	ds	2
   226  000023                     _anio_d:
   227                           	opt stack 0
   228  000023                     	ds	1
   229  000024                     _anio_u:
   230                           	opt stack 0
   231  000024                     	ds	1
   232  000025                     _dia_semana:
   233                           	opt stack 0
   234  000025                     	ds	1
   235  000026                     _fecha_d:
   236                           	opt stack 0
   237  000026                     	ds	1
   238  000027                     _fecha_u:
   239                           	opt stack 0
   240  000027                     	ds	1
   241  000028                     _hora_d:
   242                           	opt stack 0
   243  000028                     	ds	1
   244  000029                     _hora_u:
   245                           	opt stack 0
   246  000029                     	ds	1
   247  00002A                     _mes_d:
   248                           	opt stack 0
   249  00002A                     	ds	1
   250  00002B                     _mes_u:
   251                           	opt stack 0
   252  00002B                     	ds	1
   253  00002C                     _minuto_d:
   254                           	opt stack 0
   255  00002C                     	ds	1
   256  00002D                     _minuto_u:
   257                           	opt stack 0
   258  00002D                     	ds	1
   259  00002E                     _segundo_d:
   260                           	opt stack 0
   261  00002E                     	ds	1
   262  00002F                     _segundo_u:
   263                           	opt stack 0
   264  00002F                     	ds	1
   265  000030                     _sensorDisparado:
   266                           	opt stack 0
   267  000030                     	ds	1
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           postdec1	equ	0xFE5
   275                           fsr1l	equ	0xFE1
   276                           
   277                           	psect	dataCOMRAM
   278  000050                     __pdataCOMRAM:
   279                           	opt stack 0
   280  000050                     _anio:
   281                           	opt stack 0
   282  000050                     	ds	2
   283  000052                     _dia:
   284                           	opt stack 0
   285  000052                     	ds	2
   286  000054                     _diasem:
   287                           	opt stack 0
   288  000054                     	ds	2
   289  000056                     _hora:
   290                           	opt stack 0
   291  000056                     	ds	2
   292  000058                     _mes:
   293                           	opt stack 0
   294  000058                     	ds	2
   295  00005A                     _minuto:
   296                           	opt stack 0
   297  00005A                     	ds	2
   298  00005C                     _key:
   299                           	opt stack 0
   300  00005C                     	ds	1
   301  00005D                     _state_alarm:
   302                           	opt stack 0
   303  00005D                     	ds	1
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           postdec1	equ	0xFE5
   311                           fsr1l	equ	0xFE1
   312                           
   313                           	psect	bssBANK0
   314  000060                     __pbssBANK0:
   315                           	opt stack 0
   316  000060                     _RtccAlrmTimeDate:
   317                           	opt stack 0
   318  000060                     	ds	8
   319  000068                     _RtccTimeDate:
   320                           	opt stack 0
   321  000068                     	ds	8
   322  000070                     _Rtcc_read_TimeDate:
   323                           	opt stack 0
   324  000070                     	ds	8
   325  000078                     _buffer2:
   326                           	opt stack 0
   327  000078                     	ds	20
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           postdec1	equ	0xFE5
   335                           fsr1l	equ	0xFE1
   336                           
   337                           	psect	cstackCOMRAM
   338  000031                     __pcstackCOMRAM:
   339                           	opt stack 0
   340  000031                     ??_isdigit:
   341  000031                     ??_on_led:
   342  000031                     ??_lcd_send_nibble:
   343  000031                     ?___wmul:
   344                           	opt stack 0
   345  000031                     ?___lwdiv:
   346                           	opt stack 0
   347  000031                     Delay100TCYx@unit:
   348                           	opt stack 0
   349  000031                     ___wmul@multiplier:
   350                           	opt stack 0
   351  000031                     ___lwdiv@dividend:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x0
   355  000031                     	ds	1
   356  000032                     lcd_send_nibble@nibble:
   357                           	opt stack 0
   358  000032                     _isdigit$1296:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x1
   362  000032                     	ds	1
   363  000033                     on_led@key:
   364                           	opt stack 0
   365  000033                     lcd_send_byte@n:
   366                           	opt stack 0
   367  000033                     isdigit@c:
   368                           	opt stack 0
   369  000033                     ___wmul@multiplicand:
   370                           	opt stack 0
   371  000033                     ___lwdiv@divisor:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x2
   375  000033                     	ds	1
   376  000034                     lcd_send_byte@address:
   377                           	opt stack 0
   378  000034                     on_led@intensity:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x3
   382  000034                     	ds	1
   383  000035                     lcd_gotoxy@y:
   384                           	opt stack 0
   385  000035                     ___wmul@product:
   386                           	opt stack 0
   387  000035                     ___lwdiv@quotient:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x4
   391  000035                     	ds	1
   392  000036                     lcd_gotoxy@x:
   393                           	opt stack 0
   394  000036                     on_led@i:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x5
   398  000036                     	ds	1
   399  000037                     lcd_gotoxy@address:
   400                           	opt stack 0
   401  000037                     ___lwdiv@counter:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x6
   405  000037                     	ds	1
   406  000038                     ?___lwmod:
   407                           	opt stack 0
   408  000038                     lcd_putc@c:
   409                           	opt stack 0
   410  000038                     ___lwmod@dividend:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x7
   414  000038                     	ds	1
   415  000039                     lcd_putrs@ptr:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x8
   419  000039                     	ds	1
   420  00003A                     ___lwmod@divisor:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x9
   424  00003A                     	ds	1
   425  00003B                     
   426                           ; 0 bytes @ 0xA
   427  00003B                     	ds	1
   428  00003C                     ___lwmod@counter:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0xB
   432  00003C                     	ds	1
   433  00003D                     ?_sprintf:
   434                           	opt stack 0
   435  00003D                     sprintf@sp:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0xC
   439  00003D                     	ds	2
   440  00003F                     sprintf@f:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0xE
   444  00003F                     	ds	4
   445  000043                     ??_sprintf:
   446                           
   447                           ; 0 bytes @ 0x12
   448  000043                     	ds	4
   449  000047                     sprintf@ap:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x16
   453  000047                     	ds	2
   454  000049                     sprintf@flag:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x18
   458  000049                     	ds	1
   459  00004A                     sprintf@val:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x19
   463  00004A                     	ds	2
   464  00004C                     sprintf@prec:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x1B
   468  00004C                     	ds	1
   469  00004D                     sprintf@width:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x1C
   473  00004D                     	ds	2
   474  00004F                     sprintf@c:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0x1E
   478  00004F                     	ds	1
   479  000050                     tblptru	equ	0xFF8
   480                           tblptrh	equ	0xFF7
   481                           tblptrl	equ	0xFF6
   482                           tablat	equ	0xFF5
   483                           postinc0	equ	0xFEE
   484                           wreg	equ	0xFE8
   485                           postdec1	equ	0xFE5
   486                           fsr1l	equ	0xFE1
   487                           
   488                           ; 0 bytes @ 0x1F
   489 ;;
   490 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   491 ;;
   492 ;; *************** function _main *****************
   493 ;; Defined at:
   494 ;;		line 87 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  2  119[None  ] int 
   501 ;; Registers used:
   502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   512 ;;Total ram usage:        0 bytes
   513 ;; Hardware stack levels required when called:    6
   514 ;; This function calls:
   515 ;;		_Setup
   516 ;;		_on_led
   517 ;;		_read_keyboard
   518 ;; This function is called by:
   519 ;;		Startup code after reset
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text0
   524  001726                     __ptext0:
   525                           	opt stack 0
   526  001726                     _main:
   527                           	opt stack 25
   528                           
   529                           ;main.c: 88: Setup();
   530                           
   531                           ; BSR set to: 15
   532                           ;incstack = 0
   533  001726  EC16  F00B         	call	_Setup	;wreg free
   534  00172A  D000               	goto	l1679
   535  00172C                     l1679:
   536                           
   537                           ;main.c: 93: on_led(read_keyboard());
   538  00172C  EC8B  F007         	call	_read_keyboard	;wreg free
   539  001730  EC00  F00A         	call	_on_led
   540  001734  D7FB               	goto	l1679
   541                           
   542                           ;main.c: 116: }
   543                           ;main.c: 117: return 0;
   544                           ;	Return value of _main is never used
   545  001736  EF00  F000         	goto	start
   546  00173A                     __end_of_main:
   547                           	opt stack 0
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557 ;; *************** function _read_keyboard *****************
   558 ;; Defined at:
   559 ;;		line 8 in file "keyboard.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      unsigned char 
   566 ;; Registers used:
   567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   577 ;;Total ram usage:        0 bytes
   578 ;; Hardware stack levels used:    1
   579 ;; Hardware stack levels required when called:    5
   580 ;; This function calls:
   581 ;;		_lcd_putrs
   582 ;;		_sprintf
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text1
   589  000F16                     __ptext1:
   590                           	opt stack 0
   591  000F16                     _read_keyboard:
   592                           	opt stack 25
   593                           
   594                           ;keyboard.c: 9: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
   595                           
   596                           ;incstack = 0
   597  000F16  8089               	bsf	3977,0,c	;volatile
   598  000F18  9289               	bcf	3977,1,c	;volatile
   599  000F1A  9489               	bcf	3977,2,c	;volatile
   600  000F1C  9689               	bcf	3977,3,c	;volatile
   601                           
   602                           ;keyboard.c: 10: {
   603                           ;keyboard.c: 11: if (PORTAbits.RA5==1){key=1;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA5==1){};}
   604  000F1E  AA80               	btfss	3968,5,c	;volatile
   605  000F20  D018               	goto	l280
   606  000F22  0E01               	movlw	1
   607  000F24  6E5C               	movwf	_key,c
   608  000F26  0E78               	movlw	low _buffer2
   609  000F28  6E3D               	movwf	sprintf@sp,c
   610  000F2A  0E00               	movlw	high _buffer2
   611  000F2C  6E3E               	movwf	sprintf@sp+1,c
   612  000F2E  0E0F               	movlw	low STR_1
   613  000F30  6E3F               	movwf	sprintf@f,c
   614  000F32  0E0F               	movlw	high STR_1
   615  000F34  6E40               	movwf	sprintf@f+1,c
   616  000F36  C05C  F041         	movff	_key,?_sprintf+4
   617  000F3A  6A42               	clrf	?_sprintf+5,c
   618  000F3C  ECCE  F008         	call	_sprintf	;wreg free
   619  000F40  0E78               	movlw	low _buffer2
   620  000F42  6E39               	movwf	lcd_putrs@ptr,c
   621  000F44  0E00               	movlw	high _buffer2
   622  000F46  6E3A               	movwf	lcd_putrs@ptr+1,c
   623  000F48  EC5D  F00B         	call	_lcd_putrs	;wreg free
   624  000F4C  D000               	goto	l281
   625  000F4E                     l281:
   626  000F4E  BA80               	btfsc	3968,5,c	;volatile
   627  000F50  D7FE               	goto	l281
   628  000F52                     l280:
   629                           
   630                           ;keyboard.c: 12: if (PORTAbits.RA7==1){key=2;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA7==1){};}
   631  000F52  AE80               	btfss	3968,7,c	;volatile
   632  000F54  D018               	goto	l284
   633  000F56  0E02               	movlw	2
   634  000F58  6E5C               	movwf	_key,c
   635  000F5A  0E78               	movlw	low _buffer2
   636  000F5C  6E3D               	movwf	sprintf@sp,c
   637  000F5E  0E00               	movlw	high _buffer2
   638  000F60  6E3E               	movwf	sprintf@sp+1,c
   639  000F62  0E0F               	movlw	low STR_1
   640  000F64  6E3F               	movwf	sprintf@f,c
   641  000F66  0E0F               	movlw	high STR_1
   642  000F68  6E40               	movwf	sprintf@f+1,c
   643  000F6A  C05C  F041         	movff	_key,?_sprintf+4
   644  000F6E  6A42               	clrf	?_sprintf+5,c
   645  000F70  ECCE  F008         	call	_sprintf	;wreg free
   646  000F74  0E78               	movlw	low _buffer2
   647  000F76  6E39               	movwf	lcd_putrs@ptr,c
   648  000F78  0E00               	movlw	high _buffer2
   649  000F7A  6E3A               	movwf	lcd_putrs@ptr+1,c
   650  000F7C  EC5D  F00B         	call	_lcd_putrs	;wreg free
   651  000F80  D000               	goto	l285
   652  000F82                     l285:
   653  000F82  BE80               	btfsc	3968,7,c	;volatile
   654  000F84  D7FE               	goto	l285
   655  000F86                     l284:
   656                           
   657                           ;keyboard.c: 13: if (PORTAbits.RA6==1){key=3;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA6==1){};}
   658  000F86  AC80               	btfss	3968,6,c	;volatile
   659  000F88  D018               	goto	l288
   660  000F8A  0E03               	movlw	3
   661  000F8C  6E5C               	movwf	_key,c
   662  000F8E  0E78               	movlw	low _buffer2
   663  000F90  6E3D               	movwf	sprintf@sp,c
   664  000F92  0E00               	movlw	high _buffer2
   665  000F94  6E3E               	movwf	sprintf@sp+1,c
   666  000F96  0E0F               	movlw	low STR_1
   667  000F98  6E3F               	movwf	sprintf@f,c
   668  000F9A  0E0F               	movlw	high STR_1
   669  000F9C  6E40               	movwf	sprintf@f+1,c
   670  000F9E  C05C  F041         	movff	_key,?_sprintf+4
   671  000FA2  6A42               	clrf	?_sprintf+5,c
   672  000FA4  ECCE  F008         	call	_sprintf	;wreg free
   673  000FA8  0E78               	movlw	low _buffer2
   674  000FAA  6E39               	movwf	lcd_putrs@ptr,c
   675  000FAC  0E00               	movlw	high _buffer2
   676  000FAE  6E3A               	movwf	lcd_putrs@ptr+1,c
   677  000FB0  EC5D  F00B         	call	_lcd_putrs	;wreg free
   678  000FB4  D000               	goto	l289
   679  000FB6                     l289:
   680  000FB6  BC80               	btfsc	3968,6,c	;volatile
   681  000FB8  D7FE               	goto	l289
   682  000FBA                     l288:
   683                           
   684                           ;keyboard.c: 14: if (PORTCbits.RC2==1){key=11; while(PORTCbits.RC2==1){};}
   685  000FBA  A482               	btfss	3970,2,c	;volatile
   686  000FBC  D005               	goto	l292
   687  000FBE  0E0B               	movlw	11
   688  000FC0  6E5C               	movwf	_key,c
   689  000FC2  D000               	goto	l293
   690  000FC4                     l293:
   691  000FC4  B482               	btfsc	3970,2,c	;volatile
   692  000FC6  D7FE               	goto	l293
   693  000FC8                     l292:
   694                           
   695                           ;keyboard.c: 15: }
   696                           ;keyboard.c: 16: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
   697  000FC8  9089               	bcf	3977,0,c	;volatile
   698  000FCA  8289               	bsf	3977,1,c	;volatile
   699  000FCC  9489               	bcf	3977,2,c	;volatile
   700  000FCE  9689               	bcf	3977,3,c	;volatile
   701                           
   702                           ;keyboard.c: 17: {
   703                           ;keyboard.c: 18: if (PORTAbits.RA5==1){key=4;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA5==1){};}
   704  000FD0  AA80               	btfss	3968,5,c	;volatile
   705  000FD2  D018               	goto	l296
   706  000FD4  0E04               	movlw	4
   707  000FD6  6E5C               	movwf	_key,c
   708  000FD8  0E78               	movlw	low _buffer2
   709  000FDA  6E3D               	movwf	sprintf@sp,c
   710  000FDC  0E00               	movlw	high _buffer2
   711  000FDE  6E3E               	movwf	sprintf@sp+1,c
   712  000FE0  0E0F               	movlw	low STR_1
   713  000FE2  6E3F               	movwf	sprintf@f,c
   714  000FE4  0E0F               	movlw	high STR_1
   715  000FE6  6E40               	movwf	sprintf@f+1,c
   716  000FE8  C05C  F041         	movff	_key,?_sprintf+4
   717  000FEC  6A42               	clrf	?_sprintf+5,c
   718  000FEE  ECCE  F008         	call	_sprintf	;wreg free
   719  000FF2  0E78               	movlw	low _buffer2
   720  000FF4  6E39               	movwf	lcd_putrs@ptr,c
   721  000FF6  0E00               	movlw	high _buffer2
   722  000FF8  6E3A               	movwf	lcd_putrs@ptr+1,c
   723  000FFA  EC5D  F00B         	call	_lcd_putrs	;wreg free
   724  000FFE  D000               	goto	l297
   725  001000                     l297:
   726  001000  BA80               	btfsc	3968,5,c	;volatile
   727  001002  D7FE               	goto	l297
   728  001004                     l296:
   729                           
   730                           ;keyboard.c: 19: if (PORTAbits.RA7==1){key=5;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA7==1){};}
   731  001004  AE80               	btfss	3968,7,c	;volatile
   732  001006  D018               	goto	l300
   733  001008  0E05               	movlw	5
   734  00100A  6E5C               	movwf	_key,c
   735  00100C  0E78               	movlw	low _buffer2
   736  00100E  6E3D               	movwf	sprintf@sp,c
   737  001010  0E00               	movlw	high _buffer2
   738  001012  6E3E               	movwf	sprintf@sp+1,c
   739  001014  0E0F               	movlw	low STR_1
   740  001016  6E3F               	movwf	sprintf@f,c
   741  001018  0E0F               	movlw	high STR_1
   742  00101A  6E40               	movwf	sprintf@f+1,c
   743  00101C  C05C  F041         	movff	_key,?_sprintf+4
   744  001020  6A42               	clrf	?_sprintf+5,c
   745  001022  ECCE  F008         	call	_sprintf	;wreg free
   746  001026  0E78               	movlw	low _buffer2
   747  001028  6E39               	movwf	lcd_putrs@ptr,c
   748  00102A  0E00               	movlw	high _buffer2
   749  00102C  6E3A               	movwf	lcd_putrs@ptr+1,c
   750  00102E  EC5D  F00B         	call	_lcd_putrs	;wreg free
   751  001032  D000               	goto	l301
   752  001034                     l301:
   753  001034  BE80               	btfsc	3968,7,c	;volatile
   754  001036  D7FE               	goto	l301
   755  001038                     l300:
   756                           
   757                           ;keyboard.c: 20: if (PORTAbits.RA6==1){key=6;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA6==1){};}
   758  001038  AC80               	btfss	3968,6,c	;volatile
   759  00103A  D018               	goto	l304
   760  00103C  0E06               	movlw	6
   761  00103E  6E5C               	movwf	_key,c
   762  001040  0E78               	movlw	low _buffer2
   763  001042  6E3D               	movwf	sprintf@sp,c
   764  001044  0E00               	movlw	high _buffer2
   765  001046  6E3E               	movwf	sprintf@sp+1,c
   766  001048  0E0F               	movlw	low STR_1
   767  00104A  6E3F               	movwf	sprintf@f,c
   768  00104C  0E0F               	movlw	high STR_1
   769  00104E  6E40               	movwf	sprintf@f+1,c
   770  001050  C05C  F041         	movff	_key,?_sprintf+4
   771  001054  6A42               	clrf	?_sprintf+5,c
   772  001056  ECCE  F008         	call	_sprintf	;wreg free
   773  00105A  0E78               	movlw	low _buffer2
   774  00105C  6E39               	movwf	lcd_putrs@ptr,c
   775  00105E  0E00               	movlw	high _buffer2
   776  001060  6E3A               	movwf	lcd_putrs@ptr+1,c
   777  001062  EC5D  F00B         	call	_lcd_putrs	;wreg free
   778  001066  D000               	goto	l305
   779  001068                     l305:
   780  001068  BC80               	btfsc	3968,6,c	;volatile
   781  00106A  D7FE               	goto	l305
   782  00106C                     l304:
   783                           
   784                           ;keyboard.c: 21: if (PORTCbits.RC2==1){key=12; while(PORTCbits.RC2==1){};}
   785  00106C  A482               	btfss	3970,2,c	;volatile
   786  00106E  D005               	goto	l308
   787  001070  0E0C               	movlw	12
   788  001072  6E5C               	movwf	_key,c
   789  001074  D000               	goto	l309
   790  001076                     l309:
   791  001076  B482               	btfsc	3970,2,c	;volatile
   792  001078  D7FE               	goto	l309
   793  00107A                     l308:
   794                           
   795                           ;keyboard.c: 22: }
   796                           ;keyboard.c: 23: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
   797  00107A  9089               	bcf	3977,0,c	;volatile
   798  00107C  9289               	bcf	3977,1,c	;volatile
   799  00107E  8489               	bsf	3977,2,c	;volatile
   800  001080  9689               	bcf	3977,3,c	;volatile
   801                           
   802                           ;keyboard.c: 24: {
   803                           ;keyboard.c: 25: if (PORTAbits.RA5==1){key=7;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA5==1){};}
   804  001082  AA80               	btfss	3968,5,c	;volatile
   805  001084  D018               	goto	l312
   806  001086  0E07               	movlw	7
   807  001088  6E5C               	movwf	_key,c
   808  00108A  0E78               	movlw	low _buffer2
   809  00108C  6E3D               	movwf	sprintf@sp,c
   810  00108E  0E00               	movlw	high _buffer2
   811  001090  6E3E               	movwf	sprintf@sp+1,c
   812  001092  0E0F               	movlw	low STR_1
   813  001094  6E3F               	movwf	sprintf@f,c
   814  001096  0E0F               	movlw	high STR_1
   815  001098  6E40               	movwf	sprintf@f+1,c
   816  00109A  C05C  F041         	movff	_key,?_sprintf+4
   817  00109E  6A42               	clrf	?_sprintf+5,c
   818  0010A0  ECCE  F008         	call	_sprintf	;wreg free
   819  0010A4  0E78               	movlw	low _buffer2
   820  0010A6  6E39               	movwf	lcd_putrs@ptr,c
   821  0010A8  0E00               	movlw	high _buffer2
   822  0010AA  6E3A               	movwf	lcd_putrs@ptr+1,c
   823  0010AC  EC5D  F00B         	call	_lcd_putrs	;wreg free
   824  0010B0  D000               	goto	l313
   825  0010B2                     l313:
   826  0010B2  BA80               	btfsc	3968,5,c	;volatile
   827  0010B4  D7FE               	goto	l313
   828  0010B6                     l312:
   829                           
   830                           ;keyboard.c: 26: if (PORTAbits.RA7==1){key=8;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA7==1){};}
   831  0010B6  AE80               	btfss	3968,7,c	;volatile
   832  0010B8  D018               	goto	l316
   833  0010BA  0E08               	movlw	8
   834  0010BC  6E5C               	movwf	_key,c
   835  0010BE  0E78               	movlw	low _buffer2
   836  0010C0  6E3D               	movwf	sprintf@sp,c
   837  0010C2  0E00               	movlw	high _buffer2
   838  0010C4  6E3E               	movwf	sprintf@sp+1,c
   839  0010C6  0E0F               	movlw	low STR_1
   840  0010C8  6E3F               	movwf	sprintf@f,c
   841  0010CA  0E0F               	movlw	high STR_1
   842  0010CC  6E40               	movwf	sprintf@f+1,c
   843  0010CE  C05C  F041         	movff	_key,?_sprintf+4
   844  0010D2  6A42               	clrf	?_sprintf+5,c
   845  0010D4  ECCE  F008         	call	_sprintf	;wreg free
   846  0010D8  0E78               	movlw	low _buffer2
   847  0010DA  6E39               	movwf	lcd_putrs@ptr,c
   848  0010DC  0E00               	movlw	high _buffer2
   849  0010DE  6E3A               	movwf	lcd_putrs@ptr+1,c
   850  0010E0  EC5D  F00B         	call	_lcd_putrs	;wreg free
   851  0010E4  D000               	goto	l317
   852  0010E6                     l317:
   853  0010E6  BE80               	btfsc	3968,7,c	;volatile
   854  0010E8  D7FE               	goto	l317
   855  0010EA                     l316:
   856                           
   857                           ;keyboard.c: 27: if (PORTAbits.RA6==1){key=9;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA6==1){};}
   858  0010EA  AC80               	btfss	3968,6,c	;volatile
   859  0010EC  D018               	goto	l320
   860  0010EE  0E09               	movlw	9
   861  0010F0  6E5C               	movwf	_key,c
   862  0010F2  0E78               	movlw	low _buffer2
   863  0010F4  6E3D               	movwf	sprintf@sp,c
   864  0010F6  0E00               	movlw	high _buffer2
   865  0010F8  6E3E               	movwf	sprintf@sp+1,c
   866  0010FA  0E0F               	movlw	low STR_1
   867  0010FC  6E3F               	movwf	sprintf@f,c
   868  0010FE  0E0F               	movlw	high STR_1
   869  001100  6E40               	movwf	sprintf@f+1,c
   870  001102  C05C  F041         	movff	_key,?_sprintf+4
   871  001106  6A42               	clrf	?_sprintf+5,c
   872  001108  ECCE  F008         	call	_sprintf	;wreg free
   873  00110C  0E78               	movlw	low _buffer2
   874  00110E  6E39               	movwf	lcd_putrs@ptr,c
   875  001110  0E00               	movlw	high _buffer2
   876  001112  6E3A               	movwf	lcd_putrs@ptr+1,c
   877  001114  EC5D  F00B         	call	_lcd_putrs	;wreg free
   878  001118  D000               	goto	l321
   879  00111A                     l321:
   880  00111A  BC80               	btfsc	3968,6,c	;volatile
   881  00111C  D7FE               	goto	l321
   882  00111E                     l320:
   883                           
   884                           ;keyboard.c: 28: if (PORTCbits.RC2==1){key=13; while(PORTCbits.RC2==1){};}
   885  00111E  A482               	btfss	3970,2,c	;volatile
   886  001120  D005               	goto	l324
   887  001122  0E0D               	movlw	13
   888  001124  6E5C               	movwf	_key,c
   889  001126  D000               	goto	l325
   890  001128                     l325:
   891  001128  B482               	btfsc	3970,2,c	;volatile
   892  00112A  D7FE               	goto	l325
   893  00112C                     l324:
   894                           
   895                           ;keyboard.c: 29: }
   896                           ;keyboard.c: 30: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
   897  00112C  9089               	bcf	3977,0,c	;volatile
   898  00112E  9289               	bcf	3977,1,c	;volatile
   899  001130  9489               	bcf	3977,2,c	;volatile
   900  001132  8689               	bsf	3977,3,c	;volatile
   901                           
   902                           ;keyboard.c: 31: {
   903                           ;keyboard.c: 32: if (PORTAbits.RA5==1){key=14; while(PORTAbits.RA5==1){};}
   904  001134  AA80               	btfss	3968,5,c	;volatile
   905  001136  D005               	goto	l328
   906  001138  0E0E               	movlw	14
   907  00113A  6E5C               	movwf	_key,c
   908  00113C  D000               	goto	l329
   909  00113E                     l329:
   910  00113E  BA80               	btfsc	3968,5,c	;volatile
   911  001140  D7FE               	goto	l329
   912  001142                     l328:
   913                           
   914                           ;keyboard.c: 33: if (PORTAbits.RA7==1){key=0;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA7==1){};}
   915  001142  AE80               	btfss	3968,7,c	;volatile
   916  001144  D018               	goto	l332
   917  001146  0E00               	movlw	0
   918  001148  6E5C               	movwf	_key,c
   919  00114A  0E78               	movlw	low _buffer2
   920  00114C  6E3D               	movwf	sprintf@sp,c
   921  00114E  0E00               	movlw	high _buffer2
   922  001150  6E3E               	movwf	sprintf@sp+1,c
   923  001152  0E0F               	movlw	low STR_1
   924  001154  6E3F               	movwf	sprintf@f,c
   925  001156  0E0F               	movlw	high STR_1
   926  001158  6E40               	movwf	sprintf@f+1,c
   927  00115A  C05C  F041         	movff	_key,?_sprintf+4
   928  00115E  6A42               	clrf	?_sprintf+5,c
   929  001160  ECCE  F008         	call	_sprintf	;wreg free
   930  001164  0E78               	movlw	low _buffer2
   931  001166  6E39               	movwf	lcd_putrs@ptr,c
   932  001168  0E00               	movlw	high _buffer2
   933  00116A  6E3A               	movwf	lcd_putrs@ptr+1,c
   934  00116C  EC5D  F00B         	call	_lcd_putrs	;wreg free
   935  001170  D000               	goto	l333
   936  001172                     l333:
   937  001172  BE80               	btfsc	3968,7,c	;volatile
   938  001174  D7FE               	goto	l333
   939  001176                     l332:
   940                           
   941                           ;keyboard.c: 34: if (PORTAbits.RA6==1){key=15; while(PORTAbits.RA6==1){};}
   942  001176  AC80               	btfss	3968,6,c	;volatile
   943  001178  D005               	goto	l336
   944  00117A  0E0F               	movlw	15
   945  00117C  6E5C               	movwf	_key,c
   946  00117E  D000               	goto	l337
   947  001180                     l337:
   948  001180  BC80               	btfsc	3968,6,c	;volatile
   949  001182  D7FE               	goto	l337
   950  001184                     l336:
   951                           
   952                           ;keyboard.c: 35: if (PORTCbits.RC2==1){key=16; while(PORTCbits.RC2==1){};}
   953  001184  A482               	btfss	3970,2,c	;volatile
   954  001186  D007               	goto	l1673
   955  001188  0E10               	movlw	16
   956  00118A  6E5C               	movwf	_key,c
   957  00118C  D000               	goto	l341
   958  00118E                     l341:
   959  00118E  A482               	btfss	3970,2,c	;volatile
   960  001190  D002               	goto	l1673
   961  001192  D7FD               	goto	l341
   962  001194  D000               	goto	l1673
   963  001196                     l1673:
   964                           
   965                           ;keyboard.c: 36: }
   966                           ;keyboard.c: 40: return key;
   967  001196  505C               	movf	_key,w,c
   968  001198  0012               	return	
   969  00119A  0012               	return		;funcret
   970  00119C                     __end_of_read_keyboard:
   971                           	opt stack 0
   972                           tblptru	equ	0xFF8
   973                           tblptrh	equ	0xFF7
   974                           tblptrl	equ	0xFF6
   975                           tablat	equ	0xFF5
   976                           postinc0	equ	0xFEE
   977                           wreg	equ	0xFE8
   978                           postdec1	equ	0xFE5
   979                           fsr1l	equ	0xFE1
   980                           
   981 ;; *************** function _sprintf *****************
   982 ;; Defined at:
   983 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\doprnt.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;  sp              2   12[COMRAM] PTR unsigned char 
   986 ;;		 -> buffer2(20), 
   987 ;;  f               2   14[COMRAM] PTR const unsigned char 
   988 ;;		 -> STR_10(5), STR_9(5), STR_8(5), STR_7(5), 
   989 ;;		 -> STR_6(5), STR_5(5), STR_4(5), STR_3(5), 
   990 ;;		 -> STR_2(5), STR_1(5), 
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  tmpval          4    0        struct .
   993 ;;  cp              3    0        PTR const unsigned char 
   994 ;;  width           2   28[COMRAM] int 
   995 ;;  val             2   25[COMRAM] unsigned int 
   996 ;;  ap              2   22[COMRAM] PTR void [1]
   997 ;;		 -> ?_sprintf(2), 
   998 ;;  len             2    0        unsigned int 
   999 ;;  c               1   30[COMRAM] char 
  1000 ;;  prec            1   27[COMRAM] char 
  1001 ;;  flag            1   24[COMRAM] unsigned char 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  2   12[COMRAM] int 
  1004 ;; Registers used:
  1005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1011 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1012 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1013 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1014 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1015 ;;Total ram usage:       19 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    1
  1018 ;; This function calls:
  1019 ;;		___lwdiv
  1020 ;;		___lwmod
  1021 ;;		___wmul
  1022 ;;		_isdigit
  1023 ;; This function is called by:
  1024 ;;		_read_keyboard
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text2
  1029  00119C                     __ptext2:
  1030                           	opt stack 0
  1031  00119C                     _sprintf:
  1032                           	opt stack 28
  1033                           
  1034                           ;doprnt.c: 494: va_list ap;
  1035                           ;doprnt.c: 499: signed char c;
  1036                           ;doprnt.c: 501: int width;
  1037                           ;doprnt.c: 506: signed char prec;
  1038                           ;doprnt.c: 508: unsigned char flag;
  1039                           ;doprnt.c: 523: union {
  1040                           ;doprnt.c: 524: unsigned long vd;
  1041                           ;doprnt.c: 525: double integ;
  1042                           ;doprnt.c: 526: } tmpval;
  1043                           ;doprnt.c: 528: unsigned int val;
  1044                           ;doprnt.c: 529: unsigned len;
  1045                           ;doprnt.c: 530: const char * cp;
  1046                           ;doprnt.c: 533: *ap = __va_start();
  1047                           
  1048                           ;incstack = 0
  1049  00119C  0E41               	movlw	low (?_sprintf+4)
  1050  00119E  6E47               	movwf	sprintf@ap,c
  1051  0011A0  0E00               	movlw	high (?_sprintf+4)
  1052  0011A2  6E48               	movwf	sprintf@ap+1,c
  1053                           
  1054                           ;doprnt.c: 536: while(c = *f++) {
  1055  0011A4  D117               	goto	l1593
  1056  0011A6                     l1511:
  1057                           
  1058                           ;doprnt.c: 538: if(c != '%')
  1059  0011A6  0E25               	movlw	37
  1060  0011A8  184F               	xorwf	sprintf@c,w,c
  1061  0011AA  B4D8               	btfsc	status,2,c
  1062  0011AC  D009               	goto	l1517
  1063                           
  1064                           ;doprnt.c: 540: {
  1065                           ;doprnt.c: 541: ((*sp++ = (c)));
  1066  0011AE  C03D  FFD9         	movff	sprintf@sp,fsr2l
  1067  0011B2  C03E  FFDA         	movff	sprintf@sp+1,fsr2h
  1068  0011B6  C04F  FFDF         	movff	sprintf@c,indf2
  1069  0011BA  4A3D               	infsnz	sprintf@sp,f,c
  1070  0011BC  2A3E               	incf	sprintf@sp+1,f,c
  1071                           
  1072                           ;doprnt.c: 542: continue;
  1073  0011BE  D10A               	goto	l1593
  1074  0011C0                     l1517:
  1075                           
  1076                           ;doprnt.c: 543: }
  1077                           ;doprnt.c: 546: width = 0;
  1078  0011C0  0E00               	movlw	0
  1079  0011C2  6E4E               	movwf	sprintf@width+1,c
  1080  0011C4  0E00               	movlw	0
  1081  0011C6  6E4D               	movwf	sprintf@width,c
  1082                           
  1083                           ;doprnt.c: 548: flag = 0;
  1084  0011C8  0E00               	movlw	0
  1085  0011CA  6E49               	movwf	sprintf@flag,c
  1086                           
  1087                           ;doprnt.c: 551: switch(*f) {
  1088                           
  1089                           ;doprnt.c: 550: for(;;) {
  1090  0011CC  D005               	goto	l1523
  1091  0011CE                     l1519:
  1092                           
  1093                           ;doprnt.c: 580: flag |= 0x04;
  1094  0011CE  8449               	bsf	sprintf@flag,2,c
  1095                           
  1096                           ;doprnt.c: 581: f++;
  1097  0011D0  4A3F               	infsnz	sprintf@f,f,c
  1098  0011D2  2A40               	incf	sprintf@f+1,f,c
  1099                           
  1100                           ;doprnt.c: 582: continue;
  1101  0011D4  D001               	goto	l1523
  1102                           
  1103                           ;doprnt.c: 584: }
  1104  0011D6  D00B               	goto	l1525
  1105  0011D8                     l1523:
  1106  0011D8  C03F  FFF6         	movff	sprintf@f,tblptrl
  1107  0011DC  C040  FFF7         	movff	sprintf@f+1,tblptrh
  1108  0011E0                     	if	0	;tblptru may be non-zero
  1109  0011E0                     	endif
  1110  0011E0                     	if	0	;tblptru may be non-zero
  1111  0011E0                     	endif
  1112  0011E0  0008               	tblrd		*
  1113  0011E2  50F5               	movf	tablat,w,c
  1114                           
  1115                           ; Switch size 1, requested type "space"
  1116                           ; Number of cases is 1, Range of values is 48 to 48
  1117                           ; switch strategies available:
  1118                           ; Name         Instructions Cycles
  1119                           ; simple_byte            4     3 (average)
  1120                           ;	Chosen strategy is simple_byte
  1121  0011E4  0A30               	xorlw	48	; case 48
  1122  0011E6  B4D8               	btfsc	status,2,c
  1123  0011E8  D7F2               	goto	l1519
  1124                           
  1125                           ;doprnt.c: 585: break;
  1126  0011EA  D001               	goto	l1525
  1127                           
  1128                           ;doprnt.c: 586: }
  1129  0011EC  D7F5               	goto	l1523
  1130  0011EE                     l1525:
  1131                           
  1132                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1133  0011EE  C03F  FFF6         	movff	sprintf@f,tblptrl
  1134  0011F2  C040  FFF7         	movff	sprintf@f+1,tblptrh
  1135  0011F6                     	if	0	;tblptru may be non-zero
  1136  0011F6                     	endif
  1137  0011F6                     	if	0	;tblptru may be non-zero
  1138  0011F6                     	endif
  1139  0011F6  0008               	tblrd		*
  1140  0011F8  50F5               	movf	tablat,w,c
  1141  0011FA  EC82  F00B         	call	_isdigit
  1142  0011FE  A0D8               	btfss	status,0,c
  1143  001200  D03A               	goto	l1541
  1144                           
  1145                           ;doprnt.c: 598: width = 0;
  1146  001202  0E00               	movlw	0
  1147  001204  6E4E               	movwf	sprintf@width+1,c
  1148  001206  0E00               	movlw	0
  1149  001208  6E4D               	movwf	sprintf@width,c
  1150  00120A  D000               	goto	l1529
  1151  00120C                     l1529:
  1152                           
  1153                           ;doprnt.c: 600: width *= 10;
  1154  00120C  C04D  F031         	movff	sprintf@width,___wmul@multiplier
  1155  001210  C04E  F032         	movff	sprintf@width+1,___wmul@multiplier+1
  1156  001214  0E00               	movlw	0
  1157  001216  6E34               	movwf	___wmul@multiplicand+1,c
  1158  001218  0E0A               	movlw	10
  1159  00121A  6E33               	movwf	___wmul@multiplicand,c
  1160  00121C  EC49  F00B         	call	___wmul	;wreg free
  1161  001220  C031  F04D         	movff	?___wmul,sprintf@width
  1162  001224  C032  F04E         	movff	?___wmul+1,sprintf@width+1
  1163                           
  1164                           ;doprnt.c: 601: width += *f++ - '0';
  1165  001228  0ED0               	movlw	208
  1166  00122A  6E43               	movwf	??_sprintf& (0+255),c
  1167  00122C  0EFF               	movlw	255
  1168  00122E  6E44               	movwf	(??_sprintf+1)& (0+255),c
  1169  001230  C03F  FFF6         	movff	sprintf@f,tblptrl
  1170  001234  C040  FFF7         	movff	sprintf@f+1,tblptrh
  1171  001238                     	if	0	;tblptru may be non-zero
  1172  001238                     	endif
  1173  001238                     	if	0	;tblptru may be non-zero
  1174  001238                     	endif
  1175  001238  0008               	tblrd		*
  1176  00123A  50F5               	movf	tablat,w,c
  1177  00123C  6E45               	movwf	(??_sprintf+2)& (0+255),c
  1178  00123E  6A46               	clrf	(??_sprintf+3)& (0+255),c
  1179  001240  5043               	movf	??_sprintf,w,c
  1180  001242  2645               	addwf	??_sprintf+2,f,c
  1181  001244  5044               	movf	??_sprintf+1,w,c
  1182  001246  2246               	addwfc	??_sprintf+3,f,c
  1183  001248  5045               	movf	??_sprintf+2,w,c
  1184  00124A  264D               	addwf	sprintf@width,f,c
  1185  00124C  5046               	movf	??_sprintf+3,w,c
  1186  00124E  224E               	addwfc	sprintf@width+1,f,c
  1187  001250  4A3F               	infsnz	sprintf@f,f,c
  1188  001252  2A40               	incf	sprintf@f+1,f,c
  1189                           
  1190                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1191  001254  C03F  FFF6         	movff	sprintf@f,tblptrl
  1192  001258  C040  FFF7         	movff	sprintf@f+1,tblptrh
  1193  00125C                     	if	0	;tblptru may be non-zero
  1194  00125C                     	endif
  1195  00125C                     	if	0	;tblptru may be non-zero
  1196  00125C                     	endif
  1197  00125C  0008               	tblrd		*
  1198  00125E  50F5               	movf	tablat,w,c
  1199  001260  EC82  F00B         	call	_isdigit
  1200  001264  A0D8               	btfss	status,0,c
  1201  001266  D007               	goto	l1541
  1202  001268  D7D1               	goto	l1529
  1203                           
  1204                           ;doprnt.c: 608: }
  1205                           ;doprnt.c: 635: switch(c = *f++) {
  1206  00126A  D005               	goto	l1541
  1207                           
  1208                           ;doprnt.c: 638: goto alldone;
  1209                           
  1210                           ;doprnt.c: 637: case 0:
  1211  00126C  D0C1               	goto	l1595
  1212                           
  1213                           ;doprnt.c: 813: continue;
  1214                           
  1215                           ;doprnt.c: 802: default:
  1216  00126E  D0B2               	goto	l1593
  1217  001270                     l1537:
  1218                           
  1219                           ;doprnt.c: 818: flag |= 0xC0;
  1220  001270  0EC0               	movlw	192
  1221  001272  1249               	iorwf	sprintf@flag,f,c
  1222                           
  1223                           ;doprnt.c: 822: }
  1224                           
  1225                           ;doprnt.c: 819: break;
  1226  001274  D011               	goto	l1543
  1227  001276                     l1541:
  1228  001276  C03F  FFF6         	movff	sprintf@f,tblptrl
  1229  00127A  C040  FFF7         	movff	sprintf@f+1,tblptrh
  1230  00127E  4A3F               	infsnz	sprintf@f,f,c
  1231  001280  2A40               	incf	sprintf@f+1,f,c
  1232  001282                     	if	0	;tblptru may be non-zero
  1233  001282                     	endif
  1234  001282                     	if	0	;tblptru may be non-zero
  1235  001282                     	endif
  1236  001282  0008               	tblrd		*
  1237  001284  CFF5 F04F          	movff	tablat,sprintf@c
  1238  001288  504F               	movf	sprintf@c,w,c
  1239                           
  1240                           ; Switch size 1, requested type "space"
  1241                           ; Number of cases is 2, Range of values is 0 to 117
  1242                           ; switch strategies available:
  1243                           ; Name         Instructions Cycles
  1244                           ; simple_byte            7     4 (average)
  1245                           ;	Chosen strategy is simple_byte
  1246  00128A  0A00               	xorlw	0	; case 0
  1247  00128C  B4D8               	btfsc	status,2,c
  1248  00128E  D0B0               	goto	l1595
  1249  001290  0A75               	xorlw	117	; case 117
  1250  001292  B4D8               	btfsc	status,2,c
  1251  001294  D7ED               	goto	l1537
  1252  001296  D09E               	goto	l1593
  1253  001298                     l1543:
  1254                           
  1255                           ;doprnt.c: 1273: {
  1256                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1257  001298  C047  FFD9         	movff	sprintf@ap,fsr2l
  1258  00129C  C048  FFDA         	movff	sprintf@ap+1,fsr2h
  1259  0012A0  CFDE F04A          	movff	postinc2,sprintf@val
  1260  0012A4  CFDD F04B          	movff	postdec2,sprintf@val+1
  1261  0012A8  0E02               	movlw	2
  1262  0012AA  2647               	addwf	sprintf@ap,f,c
  1263  0012AC  0E00               	movlw	0
  1264  0012AE  2248               	addwfc	sprintf@ap+1,f,c
  1265                           
  1266                           ;doprnt.c: 1287: }
  1267                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1268  0012B0  0E01               	movlw	1
  1269  0012B2  6E4F               	movwf	sprintf@c,c
  1270  0012B4                     l1549:
  1271  0012B4  0E05               	movlw	5
  1272  0012B6  184F               	xorwf	sprintf@c,w,c
  1273  0012B8  B4D8               	btfsc	status,2,c
  1274  0012BA  D016               	goto	l1561
  1275  0012BC  D001               	goto	l1553
  1276  0012BE  D014               	goto	l1561
  1277  0012C0                     l1553:
  1278                           
  1279                           ;doprnt.c: 1306: if(val < dpowers[c])
  1280  0012C0  504F               	movf	sprintf@c,w,c
  1281  0012C2  0D02               	mullw	2
  1282  0012C4  0E01               	movlw	low _dpowers
  1283  0012C6  24F3               	addwf	prodl,w,c
  1284  0012C8  6EF6               	movwf	tblptrl,c
  1285  0012CA  0E0F               	movlw	high _dpowers
  1286  0012CC  20F4               	addwfc	prodh,w,c
  1287  0012CE  6EF7               	movwf	tblptrh,c
  1288  0012D0                     	if	0	;There are less than 3 active tblptr bytes
  1289  0012D0                     	endif
  1290  0012D0  0009               	tblrd		*+
  1291  0012D2  50F5               	movf	tablat,w,c
  1292  0012D4  5C4A               	subwf	sprintf@val,w,c
  1293  0012D6  0009               	tblrd		*+
  1294  0012D8  50F5               	movf	tablat,w,c
  1295  0012DA  584B               	subwfb	sprintf@val+1,w,c
  1296  0012DC  A0D8               	btfss	status,0,c
  1297  0012DE  D004               	goto	l1561
  1298  0012E0  D001               	goto	l1557
  1299                           
  1300                           ;doprnt.c: 1307: break;
  1301  0012E2  D002               	goto	l1561
  1302  0012E4                     l1557:
  1303  0012E4  2A4F               	incf	sprintf@c,f,c
  1304  0012E6  D7E6               	goto	l1549
  1305  0012E8                     l1561:
  1306                           
  1307                           ;doprnt.c: 1381: if(width > c)
  1308  0012E8  0E80               	movlw	128
  1309  0012EA  BE4F               	btfsc	sprintf@c,7,c
  1310  0012EC  0E7F               	movlw	127
  1311  0012EE  6E43               	movwf	??_sprintf& (0+255),c
  1312  0012F0  504D               	movf	sprintf@width,w,c
  1313  0012F2  5C4F               	subwf	sprintf@c,w,c
  1314  0012F4  504E               	movf	sprintf@width+1,w,c
  1315  0012F6  0A80               	xorlw	128
  1316  0012F8  5843               	subwfb	??_sprintf& (0+255),w,c
  1317  0012FA  B0D8               	btfsc	status,0,c
  1318  0012FC  D007               	goto	l1565
  1319                           
  1320                           ;doprnt.c: 1382: width -= c;
  1321  0012FE  504F               	movf	sprintf@c,w,c
  1322  001300  5E4D               	subwf	sprintf@width,f,c
  1323  001302  0E00               	movlw	0
  1324  001304  BE4F               	btfsc	sprintf@c,7,c
  1325  001306  0EFF               	movlw	255
  1326  001308  5A4E               	subwfb	sprintf@width+1,f,c
  1327  00130A  D005               	goto	l1567
  1328  00130C                     l1565:
  1329                           
  1330                           ;doprnt.c: 1383: else
  1331                           ;doprnt.c: 1384: width = 0;
  1332  00130C  0E00               	movlw	0
  1333  00130E  6E4E               	movwf	sprintf@width+1,c
  1334  001310  0E00               	movlw	0
  1335  001312  6E4D               	movwf	sprintf@width,c
  1336  001314  D000               	goto	l1567
  1337  001316                     l1567:
  1338                           
  1339                           ;doprnt.c: 1387: if(flag & 0x04) {
  1340  001316  A449               	btfss	sprintf@flag,2,c
  1341  001318  D015               	goto	l1577
  1342                           
  1343                           ;doprnt.c: 1415: if(width)
  1344  00131A  504D               	movf	sprintf@width,w,c
  1345  00131C  104E               	iorwf	sprintf@width+1,w,c
  1346  00131E  B4D8               	btfsc	status,2,c
  1347  001320  D026               	goto	l382
  1348  001322                     l1571:
  1349                           
  1350                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  1351  001322  C03D  FFD9         	movff	sprintf@sp,fsr2l
  1352  001326  C03E  FFDA         	movff	sprintf@sp+1,fsr2h
  1353  00132A  0E30               	movlw	48
  1354  00132C  6EDF               	movwf	indf2,c
  1355  00132E  4A3D               	infsnz	sprintf@sp,f,c
  1356  001330  2A3E               	incf	sprintf@sp+1,f,c
  1357                           
  1358                           ;doprnt.c: 1418: while(--width);
  1359  001332  064D               	decf	sprintf@width,f,c
  1360  001334  A0D8               	btfss	status,0,c
  1361  001336  064E               	decf	sprintf@width+1,f,c
  1362  001338  504D               	movf	sprintf@width,w,c
  1363  00133A  104E               	iorwf	sprintf@width+1,w,c
  1364  00133C  B4D8               	btfsc	status,2,c
  1365  00133E  D017               	goto	l382
  1366  001340  D7F0               	goto	l1571
  1367                           
  1368                           ;doprnt.c: 1420: } else
  1369  001342  D015               	goto	l382
  1370  001344                     l1577:
  1371                           
  1372                           ;doprnt.c: 1422: {
  1373                           ;doprnt.c: 1424: if(width
  1374                           ;doprnt.c: 1428: )
  1375  001344  504D               	movf	sprintf@width,w,c
  1376  001346  104E               	iorwf	sprintf@width+1,w,c
  1377  001348  B4D8               	btfsc	status,2,c
  1378  00134A  D011               	goto	l382
  1379  00134C                     l1579:
  1380                           
  1381                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1382  00134C  C03D  FFD9         	movff	sprintf@sp,fsr2l
  1383  001350  C03E  FFDA         	movff	sprintf@sp+1,fsr2h
  1384  001354  0E20               	movlw	32
  1385  001356  6EDF               	movwf	indf2,c
  1386  001358  4A3D               	infsnz	sprintf@sp,f,c
  1387  00135A  2A3E               	incf	sprintf@sp+1,f,c
  1388                           
  1389                           ;doprnt.c: 1431: while(--width);
  1390  00135C  064D               	decf	sprintf@width,f,c
  1391  00135E  A0D8               	btfss	status,0,c
  1392  001360  064E               	decf	sprintf@width+1,f,c
  1393  001362  504D               	movf	sprintf@width,w,c
  1394  001364  104E               	iorwf	sprintf@width+1,w,c
  1395  001366  B4D8               	btfsc	status,2,c
  1396  001368  D002               	goto	l382
  1397  00136A  D7F0               	goto	l1579
  1398  00136C  D000               	goto	l382
  1399  00136E                     l382:
  1400                           
  1401                           ;doprnt.c: 1469: }
  1402                           ;doprnt.c: 1472: prec = c;
  1403  00136E  C04F  F04C         	movff	sprintf@c,sprintf@prec
  1404                           
  1405                           ;doprnt.c: 1474: while(prec--) {
  1406  001372  D02A               	goto	l1591
  1407  001374                     l1585:
  1408                           
  1409                           ;doprnt.c: 1478: {
  1410                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1411  001374  504C               	movf	sprintf@prec,w,c
  1412  001376  0D02               	mullw	2
  1413  001378  0E01               	movlw	low _dpowers
  1414  00137A  24F3               	addwf	prodl,w,c
  1415  00137C  6EF6               	movwf	tblptrl,c
  1416  00137E  0E0F               	movlw	high _dpowers
  1417  001380  20F4               	addwfc	prodh,w,c
  1418  001382  6EF7               	movwf	tblptrh,c
  1419  001384                     	if	0	;There are less than 3 active tblptr bytes
  1420  001384                     	endif
  1421  001384  0009               	tblrd		*+
  1422  001386  CFF5 F033          	movff	tablat,___lwdiv@divisor
  1423  00138A  000A               	tblrd		*-
  1424  00138C  CFF5 F034          	movff	tablat,___lwdiv@divisor+1
  1425  001390  C04A  F031         	movff	sprintf@val,___lwdiv@dividend
  1426  001394  C04B  F032         	movff	sprintf@val+1,___lwdiv@dividend+1
  1427  001398  EC7A  F00A         	call	___lwdiv	;wreg free
  1428  00139C  C031  F038         	movff	?___lwdiv,___lwmod@dividend
  1429  0013A0  C032  F039         	movff	?___lwdiv+1,___lwmod@dividend+1
  1430  0013A4  0E00               	movlw	0
  1431  0013A6  6E3B               	movwf	___lwmod@divisor+1,c
  1432  0013A8  0E0A               	movlw	10
  1433  0013AA  6E3A               	movwf	___lwmod@divisor,c
  1434  0013AC  ECA8  F00A         	call	___lwmod	;wreg free
  1435  0013B0  5038               	movf	?___lwmod,w,c
  1436  0013B2  0F30               	addlw	48
  1437  0013B4  6E4F               	movwf	sprintf@c,c
  1438                           
  1439                           ;doprnt.c: 1523: }
  1440                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1441  0013B6  C03D  FFD9         	movff	sprintf@sp,fsr2l
  1442  0013BA  C03E  FFDA         	movff	sprintf@sp+1,fsr2h
  1443  0013BE  C04F  FFDF         	movff	sprintf@c,indf2
  1444  0013C2  4A3D               	infsnz	sprintf@sp,f,c
  1445  0013C4  2A3E               	incf	sprintf@sp+1,f,c
  1446  0013C6  D000               	goto	l1591
  1447  0013C8                     l1591:
  1448  0013C8  064C               	decf	sprintf@prec,f,c
  1449  0013CA  284C               	incf	sprintf@prec,w,c
  1450  0013CC  B4D8               	btfsc	status,2,c
  1451  0013CE  D002               	goto	l1593
  1452  0013D0  D7D1               	goto	l1585
  1453  0013D2  D000               	goto	l1593
  1454  0013D4                     l1593:
  1455  0013D4  C03F  FFF6         	movff	sprintf@f,tblptrl
  1456  0013D8  C040  FFF7         	movff	sprintf@f+1,tblptrh
  1457  0013DC  4A3F               	infsnz	sprintf@f,f,c
  1458  0013DE  2A40               	incf	sprintf@f+1,f,c
  1459  0013E0                     	if	0	;tblptru may be non-zero
  1460  0013E0                     	endif
  1461  0013E0                     	if	0	;tblptru may be non-zero
  1462  0013E0                     	endif
  1463  0013E0  0008               	tblrd		*
  1464  0013E2  CFF5 F04F          	movff	tablat,sprintf@c
  1465  0013E6  504F               	movf	sprintf@c,w,c
  1466  0013E8  B4D8               	btfsc	status,2,c
  1467  0013EA  D002               	goto	l1595
  1468  0013EC  D6DC               	goto	l1511
  1469  0013EE  D000               	goto	l1595
  1470  0013F0                     l1595:
  1471                           
  1472                           ;doprnt.c: 1538: *sp = 0;
  1473  0013F0  C03D  FFD9         	movff	sprintf@sp,fsr2l
  1474  0013F4  C03E  FFDA         	movff	sprintf@sp+1,fsr2h
  1475  0013F8  0E00               	movlw	0
  1476  0013FA  6EDF               	movwf	indf2,c
  1477  0013FC  0012               	return	
  1478                           
  1479                           ;doprnt.c: 1540: return 0;
  1480                           ;	Return value of _sprintf is never used
  1481  0013FE  0012               	return		;funcret
  1482  001400                     __end_of_sprintf:
  1483                           	opt stack 0
  1484                           tblptru	equ	0xFF8
  1485                           tblptrh	equ	0xFF7
  1486                           tblptrl	equ	0xFF6
  1487                           tablat	equ	0xFF5
  1488                           prodh	equ	0xFF4
  1489                           prodl	equ	0xFF3
  1490                           postinc0	equ	0xFEE
  1491                           wreg	equ	0xFE8
  1492                           postdec1	equ	0xFE5
  1493                           fsr1l	equ	0xFE1
  1494                           indf2	equ	0xFDF
  1495                           postinc2	equ	0xFDE
  1496                           postdec2	equ	0xFDD
  1497                           fsr2h	equ	0xFDA
  1498                           fsr2l	equ	0xFD9
  1499                           status	equ	0xFD8
  1500                           
  1501 ;; *************** function _isdigit *****************
  1502 ;; Defined at:
  1503 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\isdigit.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  c               1    wreg     unsigned char 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  c               1    2[COMRAM] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;		None               void
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1519 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1520 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1521 ;;Total ram usage:        3 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_sprintf
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text3
  1531  001704                     __ptext3:
  1532                           	opt stack 0
  1533  001704                     _isdigit:
  1534                           	opt stack 28
  1535                           
  1536                           ;incstack = 0
  1537                           ;isdigit@c stored from wreg
  1538  001704  6E33               	movwf	isdigit@c,c
  1539  001706  0E00               	movlw	0
  1540  001708  6E32               	movwf	_isdigit$1296,c
  1541  00170A  0E3A               	movlw	58
  1542  00170C  6033               	cpfslt	isdigit@c,c
  1543  00170E  D006               	goto	l1453
  1544  001710  0E2F               	movlw	47
  1545  001712  6433               	cpfsgt	isdigit@c,c
  1546  001714  D003               	goto	l1453
  1547  001716  0E01               	movlw	1
  1548  001718  6E32               	movwf	_isdigit$1296,c
  1549  00171A  D000               	goto	l1453
  1550  00171C                     l1453:
  1551  00171C  C032  F031         	movff	_isdigit$1296,??_isdigit
  1552  001720  3031               	rrcf	??_isdigit,w,c
  1553  001722  0012               	return	
  1554  001724  0012               	return		;funcret
  1555  001726                     __end_of_isdigit:
  1556                           	opt stack 0
  1557                           tblptru	equ	0xFF8
  1558                           tblptrh	equ	0xFF7
  1559                           tblptrl	equ	0xFF6
  1560                           tablat	equ	0xFF5
  1561                           prodh	equ	0xFF4
  1562                           prodl	equ	0xFF3
  1563                           postinc0	equ	0xFEE
  1564                           wreg	equ	0xFE8
  1565                           postdec1	equ	0xFE5
  1566                           fsr1l	equ	0xFE1
  1567                           indf2	equ	0xFDF
  1568                           postinc2	equ	0xFDE
  1569                           postdec2	equ	0xFDD
  1570                           fsr2h	equ	0xFDA
  1571                           fsr2l	equ	0xFD9
  1572                           status	equ	0xFD8
  1573                           
  1574 ;; *************** function ___wmul *****************
  1575 ;; Defined at:
  1576 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  multiplier      2    0[COMRAM] unsigned int 
  1579 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  product         2    4[COMRAM] unsigned int 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  2    0[COMRAM] unsigned int 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0, prodl, prodh
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1594 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1595 ;;Total ram usage:        6 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_sprintf
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text4
  1605  001692                     __ptext4:
  1606                           	opt stack 0
  1607  001692                     ___wmul:
  1608                           	opt stack 28
  1609                           
  1610                           ;incstack = 0
  1611  001692  5031               	movf	___wmul@multiplier,w,c
  1612  001694  0233               	mulwf	___wmul@multiplicand,c
  1613  001696  CFF3 F035          	movff	prodl,___wmul@product
  1614  00169A  CFF4 F036          	movff	prodh,___wmul@product+1
  1615  00169E  5031               	movf	___wmul@multiplier,w,c
  1616  0016A0  0234               	mulwf	___wmul@multiplicand+1,c
  1617  0016A2  50F3               	movf	prodl,w,c
  1618  0016A4  2636               	addwf	___wmul@product+1,f,c
  1619  0016A6  5032               	movf	___wmul@multiplier+1,w,c
  1620  0016A8  0233               	mulwf	___wmul@multiplicand,c
  1621  0016AA  50F3               	movf	prodl,w,c
  1622  0016AC  2636               	addwf	___wmul@product+1,f,c
  1623  0016AE  C035  F031         	movff	___wmul@product,?___wmul
  1624  0016B2  C036  F032         	movff	___wmul@product+1,?___wmul+1
  1625  0016B6  0012               	return	
  1626  0016B8  0012               	return		;funcret
  1627  0016BA                     __end_of___wmul:
  1628                           	opt stack 0
  1629                           tblptru	equ	0xFF8
  1630                           tblptrh	equ	0xFF7
  1631                           tblptrl	equ	0xFF6
  1632                           tablat	equ	0xFF5
  1633                           prodh	equ	0xFF4
  1634                           prodl	equ	0xFF3
  1635                           postinc0	equ	0xFEE
  1636                           wreg	equ	0xFE8
  1637                           postdec1	equ	0xFE5
  1638                           fsr1l	equ	0xFE1
  1639                           indf2	equ	0xFDF
  1640                           postinc2	equ	0xFDE
  1641                           postdec2	equ	0xFDD
  1642                           fsr2h	equ	0xFDA
  1643                           fsr2l	equ	0xFD9
  1644                           status	equ	0xFD8
  1645                           
  1646 ;; *************** function ___lwmod *****************
  1647 ;; Defined at:
  1648 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  dividend        2    7[COMRAM] unsigned int 
  1651 ;;  divisor         2    9[COMRAM] unsigned int 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  counter         1   11[COMRAM] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  2    7[COMRAM] unsigned int 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1666 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1667 ;;Total ram usage:        5 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_sprintf
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text5
  1677  001550                     __ptext5:
  1678                           	opt stack 0
  1679  001550                     ___lwmod:
  1680                           	opt stack 28
  1681                           
  1682                           ;incstack = 0
  1683  001550  503A               	movf	___lwmod@divisor,w,c
  1684  001552  103B               	iorwf	___lwmod@divisor+1,w,c
  1685  001554  B4D8               	btfsc	status,2,c
  1686  001556  D01D               	goto	l940
  1687  001558  0E01               	movlw	1
  1688  00155A  6E3C               	movwf	___lwmod@counter,c
  1689  00155C  D005               	goto	l1491
  1690  00155E                     l1489:
  1691  00155E  90D8               	bcf	status,0,c
  1692  001560  363A               	rlcf	___lwmod@divisor,f,c
  1693  001562  363B               	rlcf	___lwmod@divisor+1,f,c
  1694  001564  2A3C               	incf	___lwmod@counter,f,c
  1695  001566  D000               	goto	l1491
  1696  001568                     l1491:
  1697  001568  BE3B               	btfsc	___lwmod@divisor+1,7,c
  1698  00156A  D002               	goto	l1493
  1699  00156C  D7F8               	goto	l1489
  1700  00156E  D000               	goto	l1493
  1701  001570                     l1493:
  1702  001570  503A               	movf	___lwmod@divisor,w,c
  1703  001572  5C38               	subwf	___lwmod@dividend,w,c
  1704  001574  503B               	movf	___lwmod@divisor+1,w,c
  1705  001576  5839               	subwfb	___lwmod@dividend+1,w,c
  1706  001578  A0D8               	btfss	status,0,c
  1707  00157A  D005               	goto	l1497
  1708  00157C  503A               	movf	___lwmod@divisor,w,c
  1709  00157E  5E38               	subwf	___lwmod@dividend,f,c
  1710  001580  503B               	movf	___lwmod@divisor+1,w,c
  1711  001582  5A39               	subwfb	___lwmod@dividend+1,f,c
  1712  001584  D000               	goto	l1497
  1713  001586                     l1497:
  1714  001586  90D8               	bcf	status,0,c
  1715  001588  323B               	rrcf	___lwmod@divisor+1,f,c
  1716  00158A  323A               	rrcf	___lwmod@divisor,f,c
  1717  00158C  2E3C               	decfsz	___lwmod@counter,f,c
  1718  00158E  D7F0               	goto	l1493
  1719  001590  D000               	goto	l940
  1720  001592                     l940:
  1721  001592  C038  F038         	movff	___lwmod@dividend,?___lwmod
  1722  001596  C039  F039         	movff	___lwmod@dividend+1,?___lwmod+1
  1723  00159A  0012               	return		;funcret
  1724  00159C                     __end_of___lwmod:
  1725                           	opt stack 0
  1726                           tblptru	equ	0xFF8
  1727                           tblptrh	equ	0xFF7
  1728                           tblptrl	equ	0xFF6
  1729                           tablat	equ	0xFF5
  1730                           prodh	equ	0xFF4
  1731                           prodl	equ	0xFF3
  1732                           postinc0	equ	0xFEE
  1733                           wreg	equ	0xFE8
  1734                           postdec1	equ	0xFE5
  1735                           fsr1l	equ	0xFE1
  1736                           indf2	equ	0xFDF
  1737                           postinc2	equ	0xFDE
  1738                           postdec2	equ	0xFDD
  1739                           fsr2h	equ	0xFDA
  1740                           fsr2l	equ	0xFD9
  1741                           status	equ	0xFD8
  1742                           
  1743 ;; *************** function ___lwdiv *****************
  1744 ;; Defined at:
  1745 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  dividend        2    0[COMRAM] unsigned int 
  1748 ;;  divisor         2    2[COMRAM] unsigned int 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  quotient        2    4[COMRAM] unsigned int 
  1751 ;;  counter         1    6[COMRAM] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  2    0[COMRAM] unsigned int 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1762 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1764 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1765 ;;Total ram usage:        7 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_sprintf
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text6
  1775  0014F4                     __ptext6:
  1776                           	opt stack 0
  1777  0014F4                     ___lwdiv:
  1778                           	opt stack 28
  1779                           
  1780                           ;incstack = 0
  1781  0014F4  0E00               	movlw	0
  1782  0014F6  6E36               	movwf	___lwdiv@quotient+1,c
  1783  0014F8  0E00               	movlw	0
  1784  0014FA  6E35               	movwf	___lwdiv@quotient,c
  1785  0014FC  5033               	movf	___lwdiv@divisor,w,c
  1786  0014FE  1034               	iorwf	___lwdiv@divisor+1,w,c
  1787  001500  B4D8               	btfsc	status,2,c
  1788  001502  D021               	goto	l930
  1789  001504  0E01               	movlw	1
  1790  001506  6E37               	movwf	___lwdiv@counter,c
  1791  001508  D005               	goto	l1471
  1792  00150A                     l1469:
  1793  00150A  90D8               	bcf	status,0,c
  1794  00150C  3633               	rlcf	___lwdiv@divisor,f,c
  1795  00150E  3634               	rlcf	___lwdiv@divisor+1,f,c
  1796  001510  2A37               	incf	___lwdiv@counter,f,c
  1797  001512  D000               	goto	l1471
  1798  001514                     l1471:
  1799  001514  BE34               	btfsc	___lwdiv@divisor+1,7,c
  1800  001516  D002               	goto	l1473
  1801  001518  D7F8               	goto	l1469
  1802  00151A  D000               	goto	l1473
  1803  00151C                     l1473:
  1804  00151C  90D8               	bcf	status,0,c
  1805  00151E  3635               	rlcf	___lwdiv@quotient,f,c
  1806  001520  3636               	rlcf	___lwdiv@quotient+1,f,c
  1807  001522  5033               	movf	___lwdiv@divisor,w,c
  1808  001524  5C31               	subwf	___lwdiv@dividend,w,c
  1809  001526  5034               	movf	___lwdiv@divisor+1,w,c
  1810  001528  5832               	subwfb	___lwdiv@dividend+1,w,c
  1811  00152A  A0D8               	btfss	status,0,c
  1812  00152C  D006               	goto	l1481
  1813  00152E  5033               	movf	___lwdiv@divisor,w,c
  1814  001530  5E31               	subwf	___lwdiv@dividend,f,c
  1815  001532  5034               	movf	___lwdiv@divisor+1,w,c
  1816  001534  5A32               	subwfb	___lwdiv@dividend+1,f,c
  1817  001536  8035               	bsf	___lwdiv@quotient,0,c
  1818  001538  D000               	goto	l1481
  1819  00153A                     l1481:
  1820  00153A  90D8               	bcf	status,0,c
  1821  00153C  3234               	rrcf	___lwdiv@divisor+1,f,c
  1822  00153E  3233               	rrcf	___lwdiv@divisor,f,c
  1823  001540  2E37               	decfsz	___lwdiv@counter,f,c
  1824  001542  D7EC               	goto	l1473
  1825  001544  D000               	goto	l930
  1826  001546                     l930:
  1827  001546  C035  F031         	movff	___lwdiv@quotient,?___lwdiv
  1828  00154A  C036  F032         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1829  00154E  0012               	return		;funcret
  1830  001550                     __end_of___lwdiv:
  1831                           	opt stack 0
  1832                           tblptru	equ	0xFF8
  1833                           tblptrh	equ	0xFF7
  1834                           tblptrl	equ	0xFF6
  1835                           tablat	equ	0xFF5
  1836                           prodh	equ	0xFF4
  1837                           prodl	equ	0xFF3
  1838                           postinc0	equ	0xFEE
  1839                           wreg	equ	0xFE8
  1840                           postdec1	equ	0xFE5
  1841                           fsr1l	equ	0xFE1
  1842                           indf2	equ	0xFDF
  1843                           postinc2	equ	0xFDE
  1844                           postdec2	equ	0xFDD
  1845                           fsr2h	equ	0xFDA
  1846                           fsr2l	equ	0xFD9
  1847                           status	equ	0xFD8
  1848                           
  1849 ;; *************** function _lcd_putrs *****************
  1850 ;; Defined at:
  1851 ;;		line 221 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  1854 ;;		 -> buffer2(20), 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;		None               void
  1859 ;; Registers used:
  1860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1870 ;;Total ram usage:        2 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    4
  1873 ;; This function calls:
  1874 ;;		_lcd_putc
  1875 ;; This function is called by:
  1876 ;;		_read_keyboard
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text7
  1881  0016BA                     __ptext7:
  1882                           	opt stack 0
  1883  0016BA                     _lcd_putrs:
  1884                           	opt stack 25
  1885                           
  1886                           ;unmc_lcd_216.c: 223: while(*ptr){
  1887                           
  1888                           ;incstack = 0
  1889  0016BA  D00A               	goto	l1507
  1890  0016BC                     l1503:
  1891                           
  1892                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  1893  0016BC  C039  FFD9         	movff	lcd_putrs@ptr,fsr2l
  1894  0016C0  C03A  FFDA         	movff	lcd_putrs@ptr+1,fsr2h
  1895  0016C4  50DF               	movf	indf2,w,c
  1896  0016C6  ECCE  F00A         	call	_lcd_putc
  1897  0016CA  4A39               	infsnz	lcd_putrs@ptr,f,c
  1898  0016CC  2A3A               	incf	lcd_putrs@ptr+1,f,c
  1899  0016CE  D000               	goto	l1507
  1900  0016D0                     l1507:
  1901  0016D0  C039  FFD9         	movff	lcd_putrs@ptr,fsr2l
  1902  0016D4  C03A  FFDA         	movff	lcd_putrs@ptr+1,fsr2h
  1903  0016D8  50DF               	movf	indf2,w,c
  1904  0016DA  A4D8               	btfss	status,2,c
  1905  0016DC  D7EF               	goto	l1503
  1906  0016DE  0012               	return		;funcret
  1907  0016E0                     __end_of_lcd_putrs:
  1908                           	opt stack 0
  1909                           tblptru	equ	0xFF8
  1910                           tblptrh	equ	0xFF7
  1911                           tblptrl	equ	0xFF6
  1912                           tablat	equ	0xFF5
  1913                           prodh	equ	0xFF4
  1914                           prodl	equ	0xFF3
  1915                           postinc0	equ	0xFEE
  1916                           wreg	equ	0xFE8
  1917                           postdec1	equ	0xFE5
  1918                           fsr1l	equ	0xFE1
  1919                           indf2	equ	0xFDF
  1920                           postinc2	equ	0xFDE
  1921                           postdec2	equ	0xFDD
  1922                           fsr2h	equ	0xFDA
  1923                           fsr2l	equ	0xFD9
  1924                           status	equ	0xFD8
  1925                           
  1926 ;; *************** function _lcd_putc *****************
  1927 ;; Defined at:
  1928 ;;		line 172 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  c               1    wreg     unsigned char 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  c               1    7[COMRAM] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;		None               void
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1946 ;;Total ram usage:        1 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    3
  1949 ;; This function calls:
  1950 ;;		_lcd_gotoxy
  1951 ;;		_lcd_send_byte
  1952 ;; This function is called by:
  1953 ;;		_lcd_putrs
  1954 ;;		_lcd_puts
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text8
  1959  00159C                     __ptext8:
  1960                           	opt stack 0
  1961  00159C                     _lcd_putc:
  1962                           	opt stack 25
  1963                           
  1964                           ;incstack = 0
  1965                           ;lcd_putc@c stored from wreg
  1966  00159C  6E38               	movwf	lcd_putc@c,c
  1967                           
  1968                           ;unmc_lcd_216.c: 173: switch(c){
  1969  00159E  D018               	goto	l1443
  1970  0015A0                     l1433:
  1971                           
  1972                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  1973  0015A0  0E01               	movlw	1
  1974  0015A2  6E33               	movwf	lcd_send_byte@n,c
  1975  0015A4  0E00               	movlw	0
  1976  0015A6  EC30  F00B         	call	_lcd_send_byte
  1977                           
  1978                           ;unmc_lcd_216.c: 176: break;
  1979  0015AA  0012               	return	
  1980  0015AC                     l1435:
  1981                           
  1982                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  1983  0015AC  0E02               	movlw	2
  1984  0015AE  6E35               	movwf	lcd_gotoxy@y,c
  1985  0015B0  0E01               	movlw	1
  1986  0015B2  EC70  F00B         	call	_lcd_gotoxy
  1987                           
  1988                           ;unmc_lcd_216.c: 179: break;
  1989  0015B6  0012               	return	
  1990  0015B8                     l1437:
  1991                           
  1992                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  1993  0015B8  0E10               	movlw	16
  1994  0015BA  6E33               	movwf	lcd_send_byte@n,c
  1995  0015BC  0E00               	movlw	0
  1996  0015BE  EC30  F00B         	call	_lcd_send_byte
  1997                           
  1998                           ;unmc_lcd_216.c: 182: break;
  1999  0015C2  0012               	return	
  2000  0015C4                     l1439:
  2001                           
  2002                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  2003  0015C4  C038  F033         	movff	lcd_putc@c,lcd_send_byte@n
  2004  0015C8  0E01               	movlw	1
  2005  0015CA  EC30  F00B         	call	_lcd_send_byte
  2006                           
  2007                           ;unmc_lcd_216.c: 186: }
  2008                           
  2009                           ;unmc_lcd_216.c: 185: break;
  2010  0015CE  0012               	return	
  2011  0015D0                     l1443:
  2012  0015D0  5038               	movf	lcd_putc@c,w,c
  2013                           
  2014                           ; Switch size 1, requested type "space"
  2015                           ; Number of cases is 3, Range of values is 8 to 12
  2016                           ; switch strategies available:
  2017                           ; Name         Instructions Cycles
  2018                           ; simple_byte           10     6 (average)
  2019                           ;	Chosen strategy is simple_byte
  2020  0015D2  0A08               	xorlw	8	; case 8
  2021  0015D4  B4D8               	btfsc	status,2,c
  2022  0015D6  D7F0               	goto	l1437
  2023  0015D8  0A02               	xorlw	2	; case 10
  2024  0015DA  B4D8               	btfsc	status,2,c
  2025  0015DC  D7E7               	goto	l1435
  2026  0015DE  0A06               	xorlw	6	; case 12
  2027  0015E0  B4D8               	btfsc	status,2,c
  2028  0015E2  D7DE               	goto	l1433
  2029  0015E4  D7EF               	goto	l1439
  2030  0015E6  0012               	return		;funcret
  2031  0015E8                     __end_of_lcd_putc:
  2032                           	opt stack 0
  2033                           tblptru	equ	0xFF8
  2034                           tblptrh	equ	0xFF7
  2035                           tblptrl	equ	0xFF6
  2036                           tablat	equ	0xFF5
  2037                           prodh	equ	0xFF4
  2038                           prodl	equ	0xFF3
  2039                           postinc0	equ	0xFEE
  2040                           wreg	equ	0xFE8
  2041                           postdec1	equ	0xFE5
  2042                           fsr1l	equ	0xFE1
  2043                           indf2	equ	0xFDF
  2044                           postinc2	equ	0xFDE
  2045                           postdec2	equ	0xFDD
  2046                           fsr2h	equ	0xFDA
  2047                           fsr2l	equ	0xFD9
  2048                           status	equ	0xFD8
  2049                           
  2050 ;; *************** function _lcd_gotoxy *****************
  2051 ;; Defined at:
  2052 ;;		line 158 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  x               1    wreg     unsigned char 
  2055 ;;  y               1    4[COMRAM] unsigned char 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  x               1    5[COMRAM] unsigned char 
  2058 ;;  address         1    6[COMRAM] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;		None               void
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2068 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2071 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2072 ;;Total ram usage:        3 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    2
  2075 ;; This function calls:
  2076 ;;		_lcd_send_byte
  2077 ;; This function is called by:
  2078 ;;		_lcd_putc
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text9
  2083  0016E0                     __ptext9:
  2084                           	opt stack 0
  2085  0016E0                     _lcd_gotoxy:
  2086                           	opt stack 25
  2087                           
  2088                           ;incstack = 0
  2089                           ;lcd_gotoxy@x stored from wreg
  2090  0016E0  6E36               	movwf	lcd_gotoxy@x,c
  2091                           
  2092                           ;unmc_lcd_216.c: 159: int8 address;
  2093                           ;unmc_lcd_216.c: 161: if(y != 1)
  2094  0016E2  0435               	decf	lcd_gotoxy@y,w,c
  2095  0016E4  B4D8               	btfsc	status,2,c
  2096  0016E6  D002               	goto	l1425
  2097                           
  2098                           ;unmc_lcd_216.c: 162: address = 0x40;
  2099  0016E8  0E40               	movlw	64
  2100  0016EA  D001               	goto	L1
  2101  0016EC                     l1425:
  2102                           
  2103                           ;unmc_lcd_216.c: 163: else
  2104                           ;unmc_lcd_216.c: 164: address=0;
  2105  0016EC  0E00               	movlw	0
  2106  0016EE                     L1:
  2107  0016EE  6E37               	movwf	lcd_gotoxy@address,c
  2108  0016F0  D000               	goto	l1427
  2109  0016F2                     l1427:
  2110                           
  2111                           ;unmc_lcd_216.c: 166: address += x-1;
  2112  0016F2  0436               	decf	lcd_gotoxy@x,w,c
  2113  0016F4  2637               	addwf	lcd_gotoxy@address,f,c
  2114                           
  2115                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  2116  0016F6  5037               	movf	lcd_gotoxy@address,w,c
  2117  0016F8  0980               	iorlw	128
  2118  0016FA  6E33               	movwf	lcd_send_byte@n,c
  2119  0016FC  0E00               	movlw	0
  2120  0016FE  EC30  F00B         	call	_lcd_send_byte
  2121  001702  0012               	return		;funcret
  2122  001704                     __end_of_lcd_gotoxy:
  2123                           	opt stack 0
  2124                           tblptru	equ	0xFF8
  2125                           tblptrh	equ	0xFF7
  2126                           tblptrl	equ	0xFF6
  2127                           tablat	equ	0xFF5
  2128                           prodh	equ	0xFF4
  2129                           prodl	equ	0xFF3
  2130                           postinc0	equ	0xFEE
  2131                           wreg	equ	0xFE8
  2132                           postdec1	equ	0xFE5
  2133                           fsr1l	equ	0xFE1
  2134                           indf2	equ	0xFDF
  2135                           postinc2	equ	0xFDE
  2136                           postdec2	equ	0xFDD
  2137                           fsr2h	equ	0xFDA
  2138                           fsr2l	equ	0xFD9
  2139                           status	equ	0xFD8
  2140                           
  2141 ;; *************** function _lcd_send_byte *****************
  2142 ;; Defined at:
  2143 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  address         1    wreg     unsigned char 
  2146 ;;  n               1    2[COMRAM] unsigned char 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  address         1    3[COMRAM] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;		None               void
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2158 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;Total ram usage:        2 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    1
  2165 ;; This function calls:
  2166 ;;		_Delay100TCYx
  2167 ;;		_lcd_send_nibble
  2168 ;; This function is called by:
  2169 ;;		_lcd_gotoxy
  2170 ;;		_lcd_putc
  2171 ;;		_lcd_init
  2172 ;;		_lcd_comand
  2173 ;;		_lcd_setcursor_vb
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text10
  2178  001660                     __ptext10:
  2179                           	opt stack 0
  2180  001660                     _lcd_send_byte:
  2181                           	opt stack 26
  2182                           
  2183                           ;incstack = 0
  2184                           ;lcd_send_byte@address stored from wreg
  2185  001660  6E34               	movwf	lcd_send_byte@address,c
  2186                           
  2187                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  2188  001662  968A               	bcf	3978,3,c	;volatile
  2189                           
  2190                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  2191  001664  0E02               	movlw	2
  2192  001666  EC9D  F00B         	call	_Delay100TCYx
  2193                           
  2194                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  2195  00166A  9893               	bcf	3987,4,c	;volatile
  2196                           
  2197                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  2198  00166C  9A93               	bcf	3987,5,c	;volatile
  2199                           
  2200                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  2201  00166E  9C93               	bcf	3987,6,c	;volatile
  2202                           
  2203                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  2204  001670  9E93               	bcf	3987,7,c	;volatile
  2205                           
  2206                           ;unmc_lcd_216.c: 101: if(address)
  2207  001672  5034               	movf	lcd_send_byte@address,w,c
  2208  001674  B4D8               	btfsc	status,2,c
  2209  001676  D002               	goto	l141
  2210                           
  2211                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  2212  001678  868A               	bsf	3978,3,c	;volatile
  2213  00167A  D001               	goto	l142
  2214  00167C                     l141:
  2215                           
  2216                           ;unmc_lcd_216.c: 103: else
  2217                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  2218  00167C  968A               	bcf	3978,3,c	;volatile
  2219  00167E                     l142:
  2220                           
  2221                           ;unmc_lcd_216.c: 106: __nop();
  2222  00167E  F000               	nop	
  2223                           
  2224                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  2225  001680  3833               	swapf	lcd_send_byte@n,w,c
  2226  001682  0B0F               	andlw	15
  2227  001684  EC3F  F00A         	call	_lcd_send_nibble
  2228                           
  2229                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  2230  001688  5033               	movf	lcd_send_byte@n,w,c
  2231  00168A  0B0F               	andlw	15
  2232  00168C  EC3F  F00A         	call	_lcd_send_nibble
  2233  001690  0012               	return		;funcret
  2234  001692                     __end_of_lcd_send_byte:
  2235                           	opt stack 0
  2236                           tblptru	equ	0xFF8
  2237                           tblptrh	equ	0xFF7
  2238                           tblptrl	equ	0xFF6
  2239                           tablat	equ	0xFF5
  2240                           prodh	equ	0xFF4
  2241                           prodl	equ	0xFF3
  2242                           postinc0	equ	0xFEE
  2243                           wreg	equ	0xFE8
  2244                           postdec1	equ	0xFE5
  2245                           fsr1l	equ	0xFE1
  2246                           indf2	equ	0xFDF
  2247                           postinc2	equ	0xFDE
  2248                           postdec2	equ	0xFDD
  2249                           fsr2h	equ	0xFDA
  2250                           fsr2l	equ	0xFD9
  2251                           status	equ	0xFD8
  2252                           
  2253 ;; *************** function _lcd_send_nibble *****************
  2254 ;; Defined at:
  2255 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  nibble          1    wreg     unsigned char 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  nibble          1    1[COMRAM] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;		None               void
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2271 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2272 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2273 ;;Total ram usage:        2 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_lcd_send_byte
  2279 ;;		_lcd_init
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text11
  2284  00147E                     __ptext11:
  2285                           	opt stack 0
  2286  00147E                     _lcd_send_nibble:
  2287                           	opt stack 26
  2288                           
  2289                           ;incstack = 0
  2290                           ;lcd_send_nibble@nibble stored from wreg
  2291  00147E  6E32               	movwf	lcd_send_nibble@nibble,c
  2292                           
  2293                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  2294  001480  A032               	btfss	lcd_send_nibble@nibble,0,c
  2295  001482  D003               	goto	u740
  2296  001484  6A31               	clrf	??_lcd_send_nibble& (0+255),c
  2297  001486  2A31               	incf	??_lcd_send_nibble& (0+255),f,c
  2298  001488  D001               	goto	u758
  2299  00148A                     u740:
  2300  00148A  6A31               	clrf	??_lcd_send_nibble& (0+255),c
  2301  00148C                     u758:
  2302  00148C  3A31               	swapf	??_lcd_send_nibble,f,c
  2303  00148E  508A               	movf	3978,w,c	;volatile
  2304  001490  1831               	xorwf	??_lcd_send_nibble,w,c
  2305  001492  0BEF               	andlw	-17
  2306  001494  1831               	xorwf	??_lcd_send_nibble,w,c
  2307  001496  6E8A               	movwf	3978,c	;volatile
  2308                           
  2309                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  2310  001498  A232               	btfss	lcd_send_nibble@nibble,1,c
  2311  00149A  D003               	goto	u760
  2312  00149C  6A31               	clrf	??_lcd_send_nibble& (0+255),c
  2313  00149E  2A31               	incf	??_lcd_send_nibble& (0+255),f,c
  2314  0014A0  D001               	goto	u778
  2315  0014A2                     u760:
  2316  0014A2  6A31               	clrf	??_lcd_send_nibble& (0+255),c
  2317  0014A4                     u778:
  2318  0014A4  3A31               	swapf	??_lcd_send_nibble,f,c
  2319  0014A6  4631               	rlncf	??_lcd_send_nibble,f,c
  2320  0014A8  508A               	movf	3978,w,c	;volatile
  2321  0014AA  1831               	xorwf	??_lcd_send_nibble,w,c
  2322  0014AC  0BDF               	andlw	-33
  2323  0014AE  1831               	xorwf	??_lcd_send_nibble,w,c
  2324  0014B0  6E8A               	movwf	3978,c	;volatile
  2325                           
  2326                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  2327  0014B2  A432               	btfss	lcd_send_nibble@nibble,2,c
  2328  0014B4  D003               	goto	u780
  2329  0014B6  6A31               	clrf	??_lcd_send_nibble& (0+255),c
  2330  0014B8  2A31               	incf	??_lcd_send_nibble& (0+255),f,c
  2331  0014BA  D001               	goto	u798
  2332  0014BC                     u780:
  2333  0014BC  6A31               	clrf	??_lcd_send_nibble& (0+255),c
  2334  0014BE                     u798:
  2335  0014BE  3A31               	swapf	??_lcd_send_nibble,f,c
  2336  0014C0  4631               	rlncf	??_lcd_send_nibble,f,c
  2337  0014C2  4631               	rlncf	??_lcd_send_nibble,f,c
  2338  0014C4  508A               	movf	3978,w,c	;volatile
  2339  0014C6  1831               	xorwf	??_lcd_send_nibble,w,c
  2340  0014C8  0BBF               	andlw	-65
  2341  0014CA  1831               	xorwf	??_lcd_send_nibble,w,c
  2342  0014CC  6E8A               	movwf	3978,c	;volatile
  2343                           
  2344                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  2345  0014CE  A632               	btfss	lcd_send_nibble@nibble,3,c
  2346  0014D0  D003               	goto	u800
  2347  0014D2  6A31               	clrf	??_lcd_send_nibble& (0+255),c
  2348  0014D4  2A31               	incf	??_lcd_send_nibble& (0+255),f,c
  2349  0014D6  D001               	goto	u818
  2350  0014D8                     u800:
  2351  0014D8  6A31               	clrf	??_lcd_send_nibble& (0+255),c
  2352  0014DA                     u818:
  2353  0014DA  3231               	rrcf	??_lcd_send_nibble,f,c
  2354  0014DC  3231               	rrcf	??_lcd_send_nibble,f,c
  2355  0014DE  508A               	movf	3978,w,c	;volatile
  2356  0014E0  1831               	xorwf	??_lcd_send_nibble,w,c
  2357  0014E2  0B7F               	andlw	-129
  2358  0014E4  1831               	xorwf	??_lcd_send_nibble,w,c
  2359  0014E6  6E8A               	movwf	3978,c	;volatile
  2360                           
  2361                           ;unmc_lcd_216.c: 32: __nop();
  2362  0014E8  F000               	nop	
  2363                           
  2364                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  2365  0014EA  848A               	bsf	3978,2,c	;volatile
  2366                           
  2367                           ;unmc_lcd_216.c: 34: __nop();__nop();
  2368  0014EC  F000               	nop	
  2369  0014EE  F000               	nop	
  2370                           
  2371                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  2372  0014F0  948A               	bcf	3978,2,c	;volatile
  2373  0014F2  0012               	return		;funcret
  2374  0014F4                     __end_of_lcd_send_nibble:
  2375                           	opt stack 0
  2376                           tblptru	equ	0xFF8
  2377                           tblptrh	equ	0xFF7
  2378                           tblptrl	equ	0xFF6
  2379                           tablat	equ	0xFF5
  2380                           prodh	equ	0xFF4
  2381                           prodl	equ	0xFF3
  2382                           postinc0	equ	0xFEE
  2383                           wreg	equ	0xFE8
  2384                           postdec1	equ	0xFE5
  2385                           fsr1l	equ	0xFE1
  2386                           indf2	equ	0xFDF
  2387                           postinc2	equ	0xFDE
  2388                           postdec2	equ	0xFDD
  2389                           fsr2h	equ	0xFDA
  2390                           fsr2l	equ	0xFD9
  2391                           status	equ	0xFD8
  2392                           
  2393 ;; *************** function _Delay100TCYx *****************
  2394 ;; Defined at:
  2395 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  unit            1    wreg     unsigned char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  unit            1    0[COMRAM] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;		None               void
  2402 ;; Registers used:
  2403 ;;		wreg
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2412 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2413 ;;Total ram usage:        1 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_lcd_send_byte
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text12
  2423  00173A                     __ptext12:
  2424                           	opt stack 0
  2425  00173A                     _Delay100TCYx:
  2426                           	opt stack 26
  2427                           
  2428                           ;incstack = 0
  2429                           ;Delay100TCYx@unit stored from wreg
  2430  00173A  6E31               	movwf	Delay100TCYx@unit,c
  2431  00173C  0E21               	movlw	33
  2432  00173E                     u1447:
  2433  00173E  2EE8               	decfsz	wreg,f,c
  2434  001740  D7FE               	goto	u1447
  2435  001742  F000               	nop	
  2436  001744  2E31               	decfsz	Delay100TCYx@unit,f,c
  2437  001746  D7FA               	goto	l1399
  2438  001748  0012               	return	
  2439  00174A  0012               	return		;funcret
  2440  00174C                     __end_of_Delay100TCYx:
  2441                           	opt stack 0
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           prodh	equ	0xFF4
  2447                           prodl	equ	0xFF3
  2448                           postinc0	equ	0xFEE
  2449                           wreg	equ	0xFE8
  2450                           postdec1	equ	0xFE5
  2451                           fsr1l	equ	0xFE1
  2452                           indf2	equ	0xFDF
  2453                           postinc2	equ	0xFDE
  2454                           postdec2	equ	0xFDD
  2455                           fsr2h	equ	0xFDA
  2456                           fsr2l	equ	0xFD9
  2457                           status	equ	0xFD8
  2458                           
  2459 ;; *************** function _on_led *****************
  2460 ;; Defined at:
  2461 ;;		line 72 in file "main.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  key             1    wreg     unsigned char 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  key             1    2[COMRAM] unsigned char 
  2466 ;;  i               2    5[COMRAM] int 
  2467 ;;  intensity       2    3[COMRAM] short 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  2  111[None  ] int 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2478 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2479 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2480 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2481 ;;Total ram usage:        7 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_main
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text13
  2491  001400                     __ptext13:
  2492                           	opt stack 0
  2493  001400                     _on_led:
  2494                           	opt stack 30
  2495                           
  2496                           ;incstack = 0
  2497                           ;on_led@key stored from wreg
  2498  001400  6E33               	movwf	on_led@key,c
  2499                           
  2500                           ;main.c: 73: int i = 0;
  2501  001402  0E00               	movlw	0
  2502  001404  6E37               	movwf	on_led@i+1,c
  2503  001406  0E00               	movlw	0
  2504  001408  6E36               	movwf	on_led@i,c
  2505                           
  2506                           ;main.c: 74: short intensity = (short)key * 2 - 1;
  2507  00140A  5033               	movf	on_led@key,w,c
  2508  00140C  6E31               	movwf	??_on_led& (0+255),c
  2509  00140E  6A32               	clrf	(??_on_led+1)& (0+255),c
  2510  001410  90D8               	bcf	status,0,c
  2511  001412  3631               	rlcf	??_on_led,f,c
  2512  001414  3632               	rlcf	??_on_led+1,f,c
  2513  001416  0EFF               	movlw	255
  2514  001418  2431               	addwf	??_on_led,w,c
  2515  00141A  6E34               	movwf	on_led@intensity,c
  2516  00141C  0EFF               	movlw	255
  2517  00141E  2032               	addwfc	??_on_led+1,w,c
  2518  001420  6E35               	movwf	on_led@intensity+1,c
  2519                           
  2520                           ;main.c: 76: for(i = 0; i < intensity; i++){
  2521  001422  0E00               	movlw	0
  2522  001424  6E37               	movwf	on_led@i+1,c
  2523  001426  0E00               	movlw	0
  2524  001428  6E36               	movwf	on_led@i,c
  2525  00142A  D007               	goto	l112
  2526  00142C                     l113:
  2527                           
  2528                           ;main.c: 77: LATBbits.LATB2 = 1;;
  2529  00142C  848A               	bsf	3978,2,c	;volatile
  2530                           
  2531                           ;main.c: 78: _delay((unsigned long)((500)*(8000000/4000000.0)));
  2532  00142E  0EFA               	movlw	250
  2533  001430                     u1457:
  2534  001430  F000               	nop	
  2535  001432  2EE8               	decfsz	wreg,f,c
  2536  001434  D7FD               	goto	u1457
  2537  001436  4A36               	infsnz	on_led@i,f,c
  2538  001438  2A37               	incf	on_led@i+1,f,c
  2539  00143A                     l112:
  2540  00143A  5034               	movf	on_led@intensity,w,c
  2541  00143C  5C36               	subwf	on_led@i,w,c
  2542  00143E  5037               	movf	on_led@i+1,w,c
  2543  001440  0A80               	xorlw	128
  2544  001442  6E31               	movwf	??_on_led& (0+255),c
  2545  001444  5035               	movf	on_led@intensity+1,w,c
  2546  001446  0A80               	xorlw	128
  2547  001448  5831               	subwfb	??_on_led& (0+255),w,c
  2548  00144A  A0D8               	btfss	status,0,c
  2549  00144C  D7EF               	goto	l113
  2550                           
  2551                           ;main.c: 79: }
  2552                           ;main.c: 81: for(i = intensity; i < 32; i++){
  2553  00144E  C034  F036         	movff	on_led@intensity,on_led@i
  2554  001452  C035  F037         	movff	on_led@intensity+1,on_led@i+1
  2555  001456                     l1249:
  2556  001456  BE37               	btfsc	on_led@i+1,7,c
  2557  001458  D008               	goto	l115
  2558  00145A  5037               	movf	on_led@i+1,w,c
  2559  00145C  E10F               	bnz	l117
  2560  00145E  0E20               	movlw	32
  2561  001460  5C36               	subwf	on_led@i,w,c
  2562  001462  B0D8               	btfsc	status,0,c
  2563  001464  0012               	return	
  2564  001466  D001               	goto	l115
  2565  001468  0012               	return	
  2566  00146A                     l115:
  2567                           
  2568                           ;main.c: 82: LATBbits.LATB2 = 0;;
  2569  00146A  948A               	bcf	3978,2,c	;volatile
  2570                           
  2571                           ;main.c: 83: _delay((unsigned long)((500)*(8000000/4000000.0)));
  2572  00146C  0EFA               	movlw	250
  2573  00146E                     u1467:
  2574  00146E  F000               	nop	
  2575  001470  2EE8               	decfsz	wreg,f,c
  2576  001472  D7FD               	goto	u1467
  2577  001474  4A36               	infsnz	on_led@i,f,c
  2578  001476  2A37               	incf	on_led@i+1,f,c
  2579  001478  D7EE               	goto	l1249
  2580  00147A  0012               	return	
  2581  00147C                     l117:
  2582  00147C  0012               	return		;funcret
  2583  00147E                     __end_of_on_led:
  2584                           	opt stack 0
  2585                           tblptru	equ	0xFF8
  2586                           tblptrh	equ	0xFF7
  2587                           tblptrl	equ	0xFF6
  2588                           tablat	equ	0xFF5
  2589                           prodh	equ	0xFF4
  2590                           prodl	equ	0xFF3
  2591                           postinc0	equ	0xFEE
  2592                           wreg	equ	0xFE8
  2593                           postdec1	equ	0xFE5
  2594                           fsr1l	equ	0xFE1
  2595                           indf2	equ	0xFDF
  2596                           postinc2	equ	0xFDE
  2597                           postdec2	equ	0xFDD
  2598                           fsr2h	equ	0xFDA
  2599                           fsr2l	equ	0xFD9
  2600                           status	equ	0xFD8
  2601                           
  2602 ;; *************** function _Setup *****************
  2603 ;; Defined at:
  2604 ;;		line 37 in file "main.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;		None
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;		None               void
  2611 ;; Registers used:
  2612 ;;		wreg, status,2
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2622 ;;Total ram usage:        0 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_main
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text14
  2632  00162C                     __ptext14:
  2633                           	opt stack 0
  2634  00162C                     _Setup:
  2635                           	opt stack 30
  2636                           
  2637                           ;main.c: 39: OSCTUNEbits.INTSRC=1;
  2638                           
  2639                           ;incstack = 0
  2640  00162C  8E9B               	bsf	3995,7,c	;volatile
  2641                           
  2642                           ;main.c: 40: OSCTUNEbits.PLLEN=0;
  2643  00162E  9C9B               	bcf	3995,6,c	;volatile
  2644                           
  2645                           ;main.c: 41: OSCCONbits.IRCF0=1;
  2646  001630  88D3               	bsf	4051,4,c	;volatile
  2647                           
  2648                           ;main.c: 42: OSCCONbits.IRCF1=1;
  2649  001632  8AD3               	bsf	4051,5,c	;volatile
  2650                           
  2651                           ;main.c: 43: OSCCONbits.IRCF2=1;
  2652  001634  8CD3               	bsf	4051,6,c	;volatile
  2653                           
  2654                           ;main.c: 44: OSCCONbits.SCS0=0;
  2655  001636  90D3               	bcf	4051,0,c	;volatile
  2656                           
  2657                           ;main.c: 45: OSCCONbits.SCS1=0;
  2658  001638  92D3               	bcf	4051,1,c	;volatile
  2659                           
  2660                           ;main.c: 46: TRISA = 0b11110000;
  2661  00163A  0EF0               	movlw	240
  2662  00163C  6E92               	movwf	3986,c	;volatile
  2663                           
  2664                           ;main.c: 47: TRISB = 0;
  2665  00163E  0E00               	movlw	0
  2666  001640  6E93               	movwf	3987,c	;volatile
  2667                           
  2668                           ;main.c: 48: TRISC = 0b00000111;
  2669  001642  0E07               	movlw	7
  2670  001644  6E94               	movwf	3988,c	;volatile
  2671                           
  2672                           ;main.c: 52: ANCON0=0b11111111;
  2673  001646  010F               	movlb	15	; () banked
  2674  001648  6948               	setf	72,b	;volatile
  2675                           
  2676                           ; BSR set to: 15
  2677                           ;main.c: 54: ANCON1=0b11111111;
  2678  00164A  010F               	movlb	15	; () banked
  2679  00164C  6949               	setf	73,b	;volatile
  2680                           
  2681                           ; BSR set to: 15
  2682                           ;main.c: 57: RTCCFGbits.RTCEN=1;
  2683  00164E  010F               	movlb	15	; () banked
  2684  001650  8F3F               	bsf	63,7,b	;volatile
  2685                           
  2686                           ; BSR set to: 15
  2687                           ;main.c: 58: RTCCFGbits.RTCWREN=1;
  2688  001652  010F               	movlb	15	; () banked
  2689  001654  8B3F               	bsf	63,5,b	;volatile
  2690                           
  2691                           ; BSR set to: 15
  2692                           ;main.c: 59: T1CONbits.T1OSCEN=1;
  2693  001656  86CD               	bsf	4045,3,c	;volatile
  2694                           
  2695                           ; BSR set to: 15
  2696                           ;main.c: 61: LATBbits.LATB2 = 0;;
  2697  001658  948A               	bcf	3978,2,c	;volatile
  2698                           
  2699                           ; BSR set to: 15
  2700                           ;main.c: 62: LATBbits.LATB1 = 0;;
  2701  00165A  928A               	bcf	3978,1,c	;volatile
  2702                           
  2703                           ; BSR set to: 15
  2704                           ;main.c: 63: LATBbits.LATB0 = 0;;
  2705  00165C  908A               	bcf	3978,0,c	;volatile
  2706                           
  2707                           ; BSR set to: 15
  2708  00165E  0012               	return		;funcret
  2709  001660                     __end_of_Setup:
  2710                           	opt stack 0
  2711                           tblptru	equ	0xFF8
  2712                           tblptrh	equ	0xFF7
  2713                           tblptrl	equ	0xFF6
  2714                           tablat	equ	0xFF5
  2715                           prodh	equ	0xFF4
  2716                           prodl	equ	0xFF3
  2717                           postinc0	equ	0xFEE
  2718                           wreg	equ	0xFE8
  2719                           postdec1	equ	0xFE5
  2720                           fsr1l	equ	0xFE1
  2721                           indf2	equ	0xFDF
  2722                           postinc2	equ	0xFDE
  2723                           postdec2	equ	0xFDD
  2724                           fsr2h	equ	0xFDA
  2725                           fsr2l	equ	0xFD9
  2726                           status	equ	0xFD8
  2727                           tblptru	equ	0xFF8
  2728                           tblptrh	equ	0xFF7
  2729                           tblptrl	equ	0xFF6
  2730                           tablat	equ	0xFF5
  2731                           prodh	equ	0xFF4
  2732                           prodl	equ	0xFF3
  2733                           postinc0	equ	0xFEE
  2734                           wreg	equ	0xFE8
  2735                           postdec1	equ	0xFE5
  2736                           fsr1l	equ	0xFE1
  2737                           indf2	equ	0xFDF
  2738                           postinc2	equ	0xFDE
  2739                           postdec2	equ	0xFDD
  2740                           fsr2h	equ	0xFDA
  2741                           fsr2l	equ	0xFD9
  2742                           status	equ	0xFD8
  2743                           
  2744                           	psect	rparam
  2745  0000                     tblptru	equ	0xFF8
  2746                           tblptrh	equ	0xFF7
  2747                           tblptrl	equ	0xFF6
  2748                           tablat	equ	0xFF5
  2749                           prodh	equ	0xFF4
  2750                           prodl	equ	0xFF3
  2751                           postinc0	equ	0xFEE
  2752                           wreg	equ	0xFE8
  2753                           postdec1	equ	0xFE5
  2754                           fsr1l	equ	0xFE1
  2755                           indf2	equ	0xFDF
  2756                           postinc2	equ	0xFDE
  2757                           postdec2	equ	0xFDD
  2758                           fsr2h	equ	0xFDA
  2759                           fsr2l	equ	0xFD9
  2760                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    14
    Data        14
    BSS         92
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      94
    BANK0           160      0      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 


Critical Paths under _main in COMRAM

    _read_keyboard->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5140
                              _Setup
                             _on_led
                      _read_keyboard
 ---------------------------------------------------------------------------------
 (1) _read_keyboard                                        0     0      0    5050
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             28    22      6    2940
                                             12 COMRAM    19    13      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcd_putrs                                            2     0      2    2110
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             1     1      0    1425
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_gotoxy                                           3     2      1     757
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (5) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _on_led                                               7     7      0      90
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _on_led
   _read_keyboard
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      2C       5       27.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     1F      5E       1       98.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8A       6        0.0%
DATA                 0      0      8A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Oct 25 18:50:04 2016

                       _a 000D                         _b 000F                         _c 0011  
                       _i 0017                         _j 0019                         _k 001B  
             _state_alarm 005D            ?_lcd_send_byte 0033       ___wmul@multiplicand 0033  
            __CFG_CP0$OFF 000000                       l112 143A                       l113 142C  
                     l115 146A                       l300 1038                       l117 147C  
                     l141 167C                       l301 1034                       l142 167E  
                     l320 111E                       l312 10B6                       l304 106C  
                     l321 111A                       l313 10B2                       l305 1068  
                     l332 1176                       l324 112C                       l316 10EA  
                     l308 107A                       l341 118E                       l333 1172  
                     l325 1128                       l317 10E6                       l309 1076  
                     l336 1184                       l328 1142                       l280 0F52  
                     l337 1180                       l329 113E                       l281 0F4E  
                     l292 0FC8                       l284 0F86                       l293 0FC4  
                     l285 0F82                       l382 136E                       l296 1004  
                     l288 0FBA                       l297 1000                       l289 0FB6  
                     l930 1546                       l940 1592                       u800 14D8  
                     u740 148A                       u760 14A2                       u818 14DA  
                     u780 14BC                       u758 148C                       u778 14A4  
                     u798 14BE                       _dia 0052                       _key 005C  
                     _mes 0058                       wreg 000FE8               lcd_gotoxy@x 0036  
             lcd_gotoxy@y 0035                      l1503 16BC                      l1511 11A6  
                    l1249 1456                      l1425 16EC                      l1433 15A0  
                    l1427 16F2                      l1435 15AC                      l1443 15D0  
                    l1507 16D0                      l1523 11D8                      l1437 15B8  
                    l1453 171C                      l1541 1276                      l1525 11EE  
                    l1517 11C0                      l1439 15C4                      l1471 1514  
                    l1543 1298                      l1519 11CE                      l1481 153A  
                    l1473 151C                      l1561 12E8                      l1553 12C0  
                    l1537 1270                      l1529 120C                      l1491 1568  
                    l1571 1322                      l1469 150A                      l1493 1570  
                    l1565 130C                      l1557 12E4                      l1549 12B4  
                    l1399 173C                      l1591 13C8                      l1567 1316  
                    l1497 1586                      l1489 155E                      l1585 1374  
                    l1577 1344                      l1593 13D4                      l1673 1196  
                    l1579 134C                      l1595 13F0                      l1679 172C  
                    STR_1 0F0F                      STR_2 0F0F                      STR_3 0F0F  
                    STR_4 0F0F                      STR_5 0F0F                      STR_6 0F0F  
                    STR_7 0F0F                      STR_8 0F0F                      STR_9 0F0F  
                    u1447 173E                      u1457 1430                      u1467 146E  
        ?_lcd_send_nibble 0031                      _anio 0050                      _flag 02F0  
                    _main 1726                      _hora 0056                      fsr2h 000FDA  
                    fsr1l 000FE1                      indf2 000FDF                      fsr2l 000FD9  
           __CFG_T1DIG$ON 000000                      prodh 000FF4                      prodl 000FF3  
                    start 0000             __CFG_IESO$OFF 000000              ___param_bank 000010  
           __CFG_PLLDIV$1 000000                     ?_main 0031                     STR_10 0F0F  
   __size_of_Delay100TCYx 0012           __end_of___lwdiv 1550           __end_of___lwmod 159C  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISC 000F94  
          __CFG_FCMEN$OFF 000000                     _Setup 162C           __end_of_dpowers 0F0B  
                   _mes_d 002A                     _mes_u 002B           __end_of_isdigit 1726  
          __pbitbssCOMRAM 02F0                     tablat 000FF5              lcd_putrs@ptr 0039  
                   status 000FD8           __end_of_sprintf 1400   __CFG_DSWDTOSC$INTOSCREF 000000  
         __initialization 15E8              _Delay100TCYx 173A              __end_of_main 173A  
         ??_lcd_send_byte 0034                    ??_main 0050             __activetblptr 000002  
                  ?_Setup 0031                    _ANCON0 000F48                    _ANCON1 000F49  
          __CFG_WDTEN$OFF 000000            __CFG_WPCFG$OFF 000000            __CFG_WPDIS$OFF 000000  
          __CFG_XINST$OFF 000000          __end_of_lcd_putc 15E8                    ___wmul 1692  
          __CFG_STVREN$ON 000000                    _diasem 0054                    _anio_d 0023  
                  _anio_u 0024                 ??___lwdiv 0035                 ??___lwmod 003C  
                  _hora_d 0028                    _hora_u 0029           _sensorDisparado 0030  
                  clear_0 15EE                    clear_1 15FC                    _on_led 1400  
                  _minuto 005A              __pdataCOMRAM 0050                 ??_isdigit 0031  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                 ??_sprintf 0043    __size_of_read_keyboard 0286  
              __accesstop 0060   __end_of__initialization 1622             ___rparam_used 000001  
          __pcstackCOMRAM 0031             __end_of_Setup 1660           __CFG_DSWDTPS$G2 000000  
              _diaDisparo 0013           __CFG_OSC$INTOSC 000000                   ??_Setup 0031  
       lcd_gotoxy@address 0037        __size_of_lcd_putrs 0026              sprintf@width 004D  
              __pbssBANK0 0060                _dia_semana 0025            lcd_send_byte@n 0033  
                 ?___wmul 0031             _read_keyboard 0F16                   ?_on_led 0031  
              _lcd_gotoxy 16E0                 ?_lcd_putc 0031                _mesDisparo 001D  
              _minDisparo 001F                   __Hparam 0000                   __Lparam 0000  
__size_of_lcd_send_nibble 0076         __end_of_lcd_putrs 16E0            ?_read_keyboard 0031  
         __size_of___wmul 0028                   ___lwdiv 14F4                   ___lwmod 1550  
            __psmallconst 0F00               _RtccTimeVal 0009                   _fecha_d 0026  
                 __pcinit 15E8                   _fecha_u 0027                   __ramtop 0F00  
         __size_of_on_led 007E                   __ptext0 1726                   __ptext1 0F16  
                 __ptext2 119C                   __ptext3 1704                   __ptext4 1692  
                 __ptext5 1550                   __ptext6 14F4                   __ptext7 16BA  
                 __ptext8 159C                   __ptext9 16E0                   _buffer2 0078  
               _T1CONbits 000FCD                   _dpowers 0F01                   _isdigit 1704  
                 _segundo 0021                   _sprintf 119C                ??_lcd_putc 0038  
    end_of_initialization 1622      lcd_send_byte@address 0034             __Lmediumconst 0000  
                 on_led@i 0036                   postdec1 000FE5                   postdec2 000FDD  
                 postinc0 000FEE                   postinc2 000FDE     __end_of_lcd_send_byte 1692  
               _PORTAbits 000F80                 _PORTCbits 000F82          __CFG_DSBOREN$OFF 000000  
        __CFG_CPUDIV$OSC1 000000                 _TRISBbits 000F93               ?_lcd_gotoxy 0035  
         _LCD_INIT_STRING 0F0B          __CFG_IOL1WAY$OFF 000000       __CFG_MSSP7B_EN$MSK7 000000  
         ??_read_keyboard 0050          Delay100TCYx@unit 0031            __end_of___wmul 16BA  
           __pidataCOMRAM 174C         ??_lcd_send_nibble 0031            __end_of_on_led 147E  
        __CFG_DSWDTEN$OFF 000000       start_initialization 15E8       __size_of_lcd_gotoxy 0024  
                ??___wmul 0035          __CFG_LPT1OSC$OFF 000000                  ??_on_led 0031  
 __end_of_LCD_INIT_STRING 0F0F               __pbssCOMRAM 0001              _isdigit$1296 0032  
             sprintf@flag 0049         __size_of_lcd_putc 004C               sprintf@prec 004C  
         on_led@intensity 0034          ___lwdiv@dividend 0031             ?_Delay100TCYx 0031  
                ?___lwdiv 0031                  ?___lwmod 0038                 _lcd_putrs 16BA  
             __smallconst 0F00                  ?_isdigit 0031      __CFG_RTCOSC$T1OSCREF 000000  
          __size_of_Setup 0034          ___lwdiv@quotient 0035                  ?_sprintf 003D  
        _RtccAlrmTimeDate 0060            ___wmul@product 0035                  _LATAbits 000F89  
                _LATBbits 000F8A                 _segundo_d 002E            ??_Delay100TCYx 0031  
               _segundo_u 002F          __CFG_WDTPS$32768 000000        _Rtcc_read_TimeDate 0070  
              ?_lcd_putrs 0039         ___wmul@multiplier 0031                 lcd_putc@c 0038  
            ??_lcd_gotoxy 0036                 copy_data0 1616               _horaDisparo 0015  
         _lcd_send_nibble 147E                  __Hrparam 0000                  _RtccDate 0001  
                __Lrparam 0000                  _RtccTime 0005        __end_of_lcd_gotoxy 1704  
        __size_of___lwdiv 005C          __size_of___lwmod 004C                 on_led@key 0033  
            _RtccTimeDate 0068                sprintf@val 004A          __size_of_isdigit 0022  
         ___lwdiv@divisor 0033           ___lwdiv@counter 0037                  __ptext10 1660  
                __ptext11 147E                  __ptext12 173A                  __ptext13 1400  
                __ptext14 162C                  _lcd_putc 159C          __size_of_sprintf 0264  
  __size_of_lcd_send_byte 0032             __size_of_main 0014                  _minuto_d 002C  
                _minuto_u 002D     __end_of_read_keyboard 119C               ??_lcd_putrs 003B  
             _OSCTUNEbits 000F9B      __end_of_Delay100TCYx 174C                  isdigit@c 0033  
               sprintf@ap 0047   __end_of_lcd_send_nibble 14F4                 sprintf@sp 003D  
        ___lwmod@dividend 0038                _OSCCONbits 000FD3             _lcd_send_byte 1660  
              _RTCCFGbits 000F3F                  sprintf@c 004F                  sprintf@f 003F  
         ___lwmod@divisor 003A           ___lwmod@counter 003C     lcd_send_nibble@nibble 0032  

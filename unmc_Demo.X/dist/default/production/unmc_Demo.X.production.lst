

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Nov 01 19:54:24 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           	psect	idataCOMRAM
    29  00151A                     __pidataCOMRAM:
    30                           	opt stack 0
    31                           
    32                           ;initializer for _anio
    33  00151A  000F               	dw	15
    34                           
    35                           ;initializer for _dia
    36  00151C  0008               	dw	8
    37                           
    38                           ;initializer for _diasem
    39  00151E  0003               	dw	3
    40                           
    41                           ;initializer for _hora
    42  001520  0012               	dw	18
    43                           
    44                           ;initializer for _key
    45  001522  0012               	dw	18
    46                           
    47                           ;initializer for _mes
    48  001524  0009               	dw	9
    49                           
    50                           ;initializer for _minuto
    51  001526  001E               	dw	30
    52                           
    53                           ;initializer for _state_alarm
    54  001528  01                 	db	1
    55                           
    56                           	psect	smallconst
    57  000F00                     __psmallconst:
    58                           	opt stack 0
    59  000F00  00                 	db	0
    60  000F01                     _LCD_INIT_STRING:
    61                           	opt stack 0
    62  000F01  28                 	db	40
    63  000F02  0C                 	db	12
    64  000F03  01                 	db	1
    65  000F04  06                 	db	6
    66  000F05                     __end_of_LCD_INIT_STRING:
    67                           	opt stack 0
    68  0000                     _ANCON0	set	3912
    69  0000                     _ANCON1	set	3913
    70  0000                     _RTCCFGbits	set	3903
    71  0000                     _LATAbits	set	3977
    72  0000                     _LATBbits	set	3978
    73  0000                     _OSCCONbits	set	4051
    74  0000                     _OSCTUNEbits	set	3995
    75  0000                     _PORTBbits	set	3969
    76  0000                     _T1CONbits	set	4045
    77  0000                     _TRISA	set	3986
    78  0000                     _TRISB	set	3987
    79  0000                     _TRISBbits	set	3987
    80  0000                     _TRISC	set	3988
    81                           
    82                           ; #config settings
    83  000F05  00                 	db	0	; dummy byte at the end
    84  0000                     
    85                           	psect	cinit
    86  00142A                     __pcinit:
    87                           	opt stack 0
    88  00142A                     start_initialization:
    89                           	opt stack 0
    90  00142A                     __initialization:
    91                           	opt stack 0
    92                           
    93                           ; Clear objects allocated to BANK0 (64 bytes)
    94  00142A  EE00  F060         	lfsr	0,__pbssBANK0
    95  00142E  0E40               	movlw	64
    96  001430                     clear_0:
    97  001430  6AEE               	clrf	postinc0,c
    98  001432  06E8               	decf	wreg,f,c
    99  001434  E1FD               	bnz	clear_0
   100                           
   101                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   102  001436  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   103                           
   104                           ; Clear objects allocated to COMRAM (28 bytes)
   105  001438  EE00  F033         	lfsr	0,__pbssCOMRAM
   106  00143C  0E1C               	movlw	28
   107  00143E                     clear_1:
   108  00143E  6AEE               	clrf	postinc0,c
   109  001440  06E8               	decf	wreg,f,c
   110  001442  E1FD               	bnz	clear_1
   111                           
   112                           ; Initialize objects allocated to COMRAM (15 bytes)
   113                           ; load TBLPTR registers with __pidataCOMRAM
   114  001444  0E1A               	movlw	low __pidataCOMRAM
   115  001446  6EF6               	movwf	tblptrl,c
   116  001448  0E15               	movlw	high __pidataCOMRAM
   117  00144A  6EF7               	movwf	tblptrh,c
   118  00144C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   119  00144E  6EF8               	movwf	tblptru,c
   120  001450  EE00  F04F         	lfsr	0,__pdataCOMRAM
   121  001454  EE10 F00F          	lfsr	1,15
   122  001458                     copy_data0:
   123  001458  0009               	tblrd		*+
   124  00145A  CFF5 FFEE          	movff	tablat,postinc0
   125  00145E  50E5               	movf	postdec1,w,c
   126  001460  50E1               	movf	fsr1l,w,c
   127  001462  E1FA               	bnz	copy_data0
   128  001464                     end_of_initialization:
   129                           	opt stack 0
   130  001464                     __end_of__initialization:
   131                           	opt stack 0
   132  001464  0E00               	movlw	low (__Lmediumconst shr (0+16))
   133  001466  6EF8               	movwf	tblptru,c
   134  001468  0100               	movlb	0
   135  00146A  EF80  F00A         	goto	_main	;jump to C main() function
   136                           tblptru	equ	0xFF8
   137                           tblptrh	equ	0xFF7
   138                           tblptrl	equ	0xFF6
   139                           tablat	equ	0xFF5
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           postdec1	equ	0xFE5
   143                           fsr1l	equ	0xFE1
   144                           
   145                           	psect	bitbssCOMRAM
   146  0002F0                     __pbitbssCOMRAM:
   147                           	opt stack 0
   148  0002F0                     _flag:
   149                           	opt stack 0
   150  0002F0                     	ds	1
   151                           tblptru	equ	0xFF8
   152                           tblptrh	equ	0xFF7
   153                           tblptrl	equ	0xFF6
   154                           tablat	equ	0xFF5
   155                           postinc0	equ	0xFEE
   156                           wreg	equ	0xFE8
   157                           postdec1	equ	0xFE5
   158                           fsr1l	equ	0xFE1
   159                           
   160                           	psect	bssCOMRAM
   161  000033                     __pbssCOMRAM:
   162                           	opt stack 0
   163  000033                     _a:
   164                           	opt stack 0
   165  000033                     	ds	2
   166  000035                     _b:
   167                           	opt stack 0
   168  000035                     	ds	2
   169  000037                     _c:
   170                           	opt stack 0
   171  000037                     	ds	2
   172  000039                     _i:
   173                           	opt stack 0
   174  000039                     	ds	2
   175  00003B                     _j:
   176                           	opt stack 0
   177  00003B                     	ds	2
   178  00003D                     _k:
   179                           	opt stack 0
   180  00003D                     	ds	2
   181  00003F                     _segundo:
   182                           	opt stack 0
   183  00003F                     	ds	2
   184  000041                     _anio_d:
   185                           	opt stack 0
   186  000041                     	ds	1
   187  000042                     _anio_u:
   188                           	opt stack 0
   189  000042                     	ds	1
   190  000043                     _dia_semana:
   191                           	opt stack 0
   192  000043                     	ds	1
   193  000044                     _fecha_d:
   194                           	opt stack 0
   195  000044                     	ds	1
   196  000045                     _fecha_u:
   197                           	opt stack 0
   198  000045                     	ds	1
   199  000046                     _hora_d:
   200                           	opt stack 0
   201  000046                     	ds	1
   202  000047                     _hora_u:
   203                           	opt stack 0
   204  000047                     	ds	1
   205  000048                     _mes_d:
   206                           	opt stack 0
   207  000048                     	ds	1
   208  000049                     _mes_u:
   209                           	opt stack 0
   210  000049                     	ds	1
   211  00004A                     _minuto_d:
   212                           	opt stack 0
   213  00004A                     	ds	1
   214  00004B                     _minuto_u:
   215                           	opt stack 0
   216  00004B                     	ds	1
   217  00004C                     _segundo_d:
   218                           	opt stack 0
   219  00004C                     	ds	1
   220  00004D                     _segundo_u:
   221                           	opt stack 0
   222  00004D                     	ds	1
   223  00004E                     _sensorDisparado:
   224                           	opt stack 0
   225  00004E                     	ds	1
   226                           tblptru	equ	0xFF8
   227                           tblptrh	equ	0xFF7
   228                           tblptrl	equ	0xFF6
   229                           tablat	equ	0xFF5
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           postdec1	equ	0xFE5
   233                           fsr1l	equ	0xFE1
   234                           
   235                           	psect	dataCOMRAM
   236  00004F                     __pdataCOMRAM:
   237                           	opt stack 0
   238  00004F                     _anio:
   239                           	opt stack 0
   240  00004F                     	ds	2
   241  000051                     _dia:
   242                           	opt stack 0
   243  000051                     	ds	2
   244  000053                     _diasem:
   245                           	opt stack 0
   246  000053                     	ds	2
   247  000055                     _hora:
   248                           	opt stack 0
   249  000055                     	ds	2
   250  000057                     _key:
   251                           	opt stack 0
   252  000057                     	ds	2
   253  000059                     _mes:
   254                           	opt stack 0
   255  000059                     	ds	2
   256  00005B                     _minuto:
   257                           	opt stack 0
   258  00005B                     	ds	2
   259  00005D                     _state_alarm:
   260                           	opt stack 0
   261  00005D                     	ds	1
   262                           tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           tblptrl	equ	0xFF6
   265                           tablat	equ	0xFF5
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           postdec1	equ	0xFE5
   269                           fsr1l	equ	0xFE1
   270                           
   271                           	psect	bssBANK0
   272  000060                     __pbssBANK0:
   273                           	opt stack 0
   274  000060                     _buffer2:
   275                           	opt stack 0
   276  000060                     	ds	20
   277  000074                     _RtccAlrmTimeDate:
   278                           	opt stack 0
   279  000074                     	ds	8
   280  00007C                     _RtccTimeDate:
   281                           	opt stack 0
   282  00007C                     	ds	8
   283  000084                     _Rtcc_read_TimeDate:
   284                           	opt stack 0
   285  000084                     	ds	8
   286  00008C                     _RtccDate:
   287                           	opt stack 0
   288  00008C                     	ds	4
   289  000090                     _RtccTime:
   290                           	opt stack 0
   291  000090                     	ds	4
   292  000094                     _RtccTimeVal:
   293                           	opt stack 0
   294  000094                     	ds	4
   295  000098                     _diaDisparo:
   296                           	opt stack 0
   297  000098                     	ds	2
   298  00009A                     _horaDisparo:
   299                           	opt stack 0
   300  00009A                     	ds	2
   301  00009C                     _mesDisparo:
   302                           	opt stack 0
   303  00009C                     	ds	2
   304  00009E                     _minDisparo:
   305                           	opt stack 0
   306  00009E                     	ds	2
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	cstackCOMRAM
   317  000001                     __pcstackCOMRAM:
   318                           	opt stack 0
   319  000001                     ?_read_keyboard:
   320                           	opt stack 0
   321  000001                     ?___wmul:
   322                           	opt stack 0
   323  000001                     ?___ftpack:
   324                           	opt stack 0
   325  000001                     select_color@value:
   326                           	opt stack 0
   327  000001                     ___wmul@multiplier:
   328                           	opt stack 0
   329  000001                     ___ftpack@arg:
   330                           	opt stack 0
   331                           
   332                           ; 3 bytes @ 0x0
   333  000001                     	ds	2
   334  000003                     ??_read_keyboard:
   335  000003                     ___wmul@multiplicand:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x2
   339  000003                     	ds	1
   340  000004                     ___ftpack@exp:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x3
   344  000004                     	ds	1
   345  000005                     ___ftpack@sign:
   346                           	opt stack 0
   347  000005                     ___wmul@product:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x4
   351  000005                     	ds	1
   352  000006                     ??___ftpack:
   353                           
   354                           ; 0 bytes @ 0x5
   355  000006                     	ds	1
   356  000007                     on@value:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x6
   360  000007                     	ds	2
   361  000009                     ?___awtoft:
   362                           	opt stack 0
   363  000009                     on@intensity:
   364                           	opt stack 0
   365  000009                     ___awtoft@c:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x8
   369  000009                     	ds	2
   370  00000B                     ??_on:
   371                           
   372                           ; 0 bytes @ 0xA
   373  00000B                     	ds	1
   374  00000C                     ___awtoft@sign:
   375                           	opt stack 0
   376  00000C                     on@i:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0xB
   380  00000C                     	ds	1
   381  00000D                     ?___ftdiv:
   382                           	opt stack 0
   383  00000D                     ___ftdiv@f1:
   384                           	opt stack 0
   385                           
   386                           ; 3 bytes @ 0xC
   387  00000D                     	ds	3
   388  000010                     ___ftdiv@f2:
   389                           	opt stack 0
   390                           
   391                           ; 3 bytes @ 0xF
   392  000010                     	ds	3
   393  000013                     ??___ftdiv:
   394                           
   395                           ; 0 bytes @ 0x12
   396  000013                     	ds	3
   397  000016                     ___ftdiv@cntr:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x15
   401  000016                     	ds	1
   402  000017                     ___ftdiv@f3:
   403                           	opt stack 0
   404                           
   405                           ; 3 bytes @ 0x16
   406  000017                     	ds	3
   407  00001A                     ___ftdiv@exp:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x19
   411  00001A                     	ds	1
   412  00001B                     ___ftdiv@sign:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x1A
   416  00001B                     	ds	1
   417  00001C                     ?___fttol:
   418                           	opt stack 0
   419  00001C                     ___fttol@f1:
   420                           	opt stack 0
   421                           
   422                           ; 3 bytes @ 0x1B
   423  00001C                     	ds	4
   424  000020                     ??___fttol:
   425                           
   426                           ; 0 bytes @ 0x1F
   427  000020                     	ds	5
   428  000025                     ___fttol@sign1:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x24
   432  000025                     	ds	1
   433  000026                     ___fttol@lval:
   434                           	opt stack 0
   435                           
   436                           ; 4 bytes @ 0x25
   437  000026                     	ds	4
   438  00002A                     ___fttol@exp1:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x29
   442  00002A                     	ds	1
   443  00002B                     on_led@row_detector:
   444                           	opt stack 0
   445                           
   446                           ; 3 bytes @ 0x2A
   447  00002B                     	ds	3
   448  00002E                     on_led@intensity:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x2D
   452  00002E                     	ds	2
   453  000030                     on_led@pressed_key:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0x2F
   457  000030                     	ds	1
   458  000031                     on_led@value:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x30
   462  000031                     	ds	2
   463  000033                     tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           postdec1	equ	0xFE5
   470                           fsr1l	equ	0xFE1
   471                           
   472                           ; 0 bytes @ 0x32
   473 ;;
   474 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   475 ;;
   476 ;; *************** function _main *****************
   477 ;; Defined at:
   478 ;;		line 67 in file "main.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  2  111[None  ] int 
   485 ;; Registers used:
   486 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   496 ;;Total ram usage:        0 bytes
   497 ;; Hardware stack levels required when called:    3
   498 ;; This function calls:
   499 ;;		_Setup
   500 ;;		_on_led
   501 ;;		_read_keyboard
   502 ;;		_shutdown
   503 ;; This function is called by:
   504 ;;		Startup code after reset
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text0
   509  001500                     __ptext0:
   510                           	opt stack 0
   511  001500                     _main:
   512                           	opt stack 28
   513                           
   514                           ;main.c: 68: Setup();
   515                           
   516                           ; BSR set to: 15
   517                           ;incstack = 0
   518  001500  EC55  F00A         	call	_Setup	;wreg free
   519                           
   520                           ;main.c: 69: shutdown();
   521  001504  EC95  F00A         	call	_shutdown	;wreg free
   522  001508  D000               	goto	l1534
   523  00150A                     l1534:
   524                           
   525                           ;main.c: 79: on_led(read_keyboard());
   526  00150A  EC83  F007         	call	_read_keyboard	;wreg free
   527  00150E  5001               	movf	?_read_keyboard,w,c
   528  001510  ECAD  F009         	call	_on_led
   529  001514  D7FA               	goto	l1534
   530                           
   531                           ;main.c: 80: }
   532                           ;main.c: 81: return 0;
   533                           ;	Return value of _main is never used
   534  001516  EF00  F000         	goto	start
   535  00151A                     __end_of_main:
   536                           	opt stack 0
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           postdec1	equ	0xFE5
   544                           fsr1l	equ	0xFE1
   545                           
   546 ;; *************** function _read_keyboard *****************
   547 ;; Defined at:
   548 ;;		line 9 in file "keyboard.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;		None
   553 ;; Return value:  Size  Location     Type
   554 ;;                  2    0[COMRAM] int 
   555 ;; Registers used:
   556 ;;		wreg, status,2
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   565 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   566 ;;Total ram usage:        3 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		_main
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	text1
   576  000F06                     __ptext1:
   577                           	opt stack 0
   578  000F06                     _read_keyboard:
   579                           	opt stack 30
   580                           
   581                           ;keyboard.c: 10: LATBbits.LATB1=1;LATBbits.LATB2=0;LATBbits.LATB3=0;LATBbits.LATB4=0;
   582                           
   583                           ;incstack = 0
   584  000F06  828A               	bsf	3978,1,c	;volatile
   585  000F08  948A               	bcf	3978,2,c	;volatile
   586  000F0A  968A               	bcf	3978,3,c	;volatile
   587  000F0C  988A               	bcf	3978,4,c	;volatile
   588                           
   589                           ;keyboard.c: 11: {
   590                           ;keyboard.c: 12: if (PORTBbits.RB5==1){key=1;while(PORTBbits.RB5==1){};}
   591  000F0E  AA81               	btfss	3969,5,c	;volatile
   592  000F10  D007               	goto	l300
   593  000F12  0E00               	movlw	0
   594  000F14  6E58               	movwf	_key+1,c
   595  000F16  0E01               	movlw	1
   596  000F18  6E57               	movwf	_key,c
   597  000F1A  D000               	goto	l301
   598  000F1C                     l301:
   599  000F1C  BA81               	btfsc	3969,5,c	;volatile
   600  000F1E  D7FE               	goto	l301
   601  000F20                     l300:
   602                           
   603                           ;keyboard.c: 13: if (PORTBbits.RB7==1){key=2;while(PORTBbits.RB7==1){};}
   604  000F20  AE81               	btfss	3969,7,c	;volatile
   605  000F22  D007               	goto	l304
   606  000F24  0E00               	movlw	0
   607  000F26  6E58               	movwf	_key+1,c
   608  000F28  0E02               	movlw	2
   609  000F2A  6E57               	movwf	_key,c
   610  000F2C  D000               	goto	l305
   611  000F2E                     l305:
   612  000F2E  BE81               	btfsc	3969,7,c	;volatile
   613  000F30  D7FE               	goto	l305
   614  000F32                     l304:
   615                           
   616                           ;keyboard.c: 14: if (PORTBbits.RB6==1){key=3;while(PORTBbits.RB6==1){};}
   617  000F32  AC81               	btfss	3969,6,c	;volatile
   618  000F34  D007               	goto	l308
   619  000F36  0E00               	movlw	0
   620  000F38  6E58               	movwf	_key+1,c
   621  000F3A  0E03               	movlw	3
   622  000F3C  6E57               	movwf	_key,c
   623  000F3E  D000               	goto	l309
   624  000F40                     l309:
   625  000F40  BC81               	btfsc	3969,6,c	;volatile
   626  000F42  D7FE               	goto	l309
   627  000F44                     l308:
   628                           
   629                           ;keyboard.c: 16: }
   630                           ;keyboard.c: 17: LATBbits.LATB1=0;LATBbits.LATB2=1;LATBbits.LATB3=0;LATBbits.LATB4=0;
   631  000F44  928A               	bcf	3978,1,c	;volatile
   632  000F46  848A               	bsf	3978,2,c	;volatile
   633  000F48  968A               	bcf	3978,3,c	;volatile
   634  000F4A  988A               	bcf	3978,4,c	;volatile
   635                           
   636                           ;keyboard.c: 18: {
   637                           ;keyboard.c: 19: if (PORTBbits.RB5==1){key=4;while(PORTBbits.RB5==1){};}
   638  000F4C  AA81               	btfss	3969,5,c	;volatile
   639  000F4E  D007               	goto	l312
   640  000F50  0E00               	movlw	0
   641  000F52  6E58               	movwf	_key+1,c
   642  000F54  0E04               	movlw	4
   643  000F56  6E57               	movwf	_key,c
   644  000F58  D000               	goto	l313
   645  000F5A                     l313:
   646  000F5A  BA81               	btfsc	3969,5,c	;volatile
   647  000F5C  D7FE               	goto	l313
   648  000F5E                     l312:
   649                           
   650                           ;keyboard.c: 20: if (PORTBbits.RB7==1){key=5;while(PORTBbits.RB7==1){};}
   651  000F5E  AE81               	btfss	3969,7,c	;volatile
   652  000F60  D007               	goto	l316
   653  000F62  0E00               	movlw	0
   654  000F64  6E58               	movwf	_key+1,c
   655  000F66  0E05               	movlw	5
   656  000F68  6E57               	movwf	_key,c
   657  000F6A  D000               	goto	l317
   658  000F6C                     l317:
   659  000F6C  BE81               	btfsc	3969,7,c	;volatile
   660  000F6E  D7FE               	goto	l317
   661  000F70                     l316:
   662                           
   663                           ;keyboard.c: 21: if (PORTBbits.RB6==1){key=6;while(PORTBbits.RB6==1){};}
   664  000F70  AC81               	btfss	3969,6,c	;volatile
   665  000F72  D007               	goto	l320
   666  000F74  0E00               	movlw	0
   667  000F76  6E58               	movwf	_key+1,c
   668  000F78  0E06               	movlw	6
   669  000F7A  6E57               	movwf	_key,c
   670  000F7C  D000               	goto	l321
   671  000F7E                     l321:
   672  000F7E  BC81               	btfsc	3969,6,c	;volatile
   673  000F80  D7FE               	goto	l321
   674  000F82                     l320:
   675                           
   676                           ;keyboard.c: 23: }
   677                           ;keyboard.c: 24: LATBbits.LATB1=0;LATBbits.LATB2=0;LATBbits.LATB3=1;LATBbits.LATB4=0;
   678  000F82  928A               	bcf	3978,1,c	;volatile
   679  000F84  948A               	bcf	3978,2,c	;volatile
   680  000F86  868A               	bsf	3978,3,c	;volatile
   681  000F88  988A               	bcf	3978,4,c	;volatile
   682                           
   683                           ;keyboard.c: 25: {
   684                           ;keyboard.c: 26: if (PORTBbits.RB5==1){key=7;while(PORTBbits.RB5==1){};}
   685  000F8A  AA81               	btfss	3969,5,c	;volatile
   686  000F8C  D007               	goto	l324
   687  000F8E  0E00               	movlw	0
   688  000F90  6E58               	movwf	_key+1,c
   689  000F92  0E07               	movlw	7
   690  000F94  6E57               	movwf	_key,c
   691  000F96  D000               	goto	l325
   692  000F98                     l325:
   693  000F98  BA81               	btfsc	3969,5,c	;volatile
   694  000F9A  D7FE               	goto	l325
   695  000F9C                     l324:
   696                           
   697                           ;keyboard.c: 27: if (PORTBbits.RB7==1){key=8;while(PORTBbits.RB7==1){};}
   698  000F9C  AE81               	btfss	3969,7,c	;volatile
   699  000F9E  D007               	goto	l328
   700  000FA0  0E00               	movlw	0
   701  000FA2  6E58               	movwf	_key+1,c
   702  000FA4  0E08               	movlw	8
   703  000FA6  6E57               	movwf	_key,c
   704  000FA8  D000               	goto	l329
   705  000FAA                     l329:
   706  000FAA  BE81               	btfsc	3969,7,c	;volatile
   707  000FAC  D7FE               	goto	l329
   708  000FAE                     l328:
   709                           
   710                           ;keyboard.c: 28: if (PORTBbits.RB6==1){key=9;while(PORTBbits.RB6==1){};}
   711  000FAE  AC81               	btfss	3969,6,c	;volatile
   712  000FB0  D007               	goto	l332
   713  000FB2  0E00               	movlw	0
   714  000FB4  6E58               	movwf	_key+1,c
   715  000FB6  0E09               	movlw	9
   716  000FB8  6E57               	movwf	_key,c
   717  000FBA  D000               	goto	l333
   718  000FBC                     l333:
   719  000FBC  BC81               	btfsc	3969,6,c	;volatile
   720  000FBE  D7FE               	goto	l333
   721  000FC0                     l332:
   722                           
   723                           ;keyboard.c: 30: }
   724                           ;keyboard.c: 31: LATBbits.LATB1=0;LATBbits.LATB2=0;LATBbits.LATB3=0;LATBbits.LATB4=1;
   725  000FC0  928A               	bcf	3978,1,c	;volatile
   726  000FC2  948A               	bcf	3978,2,c	;volatile
   727  000FC4  968A               	bcf	3978,3,c	;volatile
   728  000FC6  888A               	bsf	3978,4,c	;volatile
   729                           
   730                           ;keyboard.c: 32: {
   731                           ;keyboard.c: 33: if (PORTBbits.RB5==1){key=14;while(PORTBbits.RB5==1){};}
   732  000FC8  AA81               	btfss	3969,5,c	;volatile
   733  000FCA  D007               	goto	l336
   734  000FCC  0E00               	movlw	0
   735  000FCE  6E58               	movwf	_key+1,c
   736  000FD0  0E0E               	movlw	14
   737  000FD2  6E57               	movwf	_key,c
   738  000FD4  D000               	goto	l337
   739  000FD6                     l337:
   740  000FD6  BA81               	btfsc	3969,5,c	;volatile
   741  000FD8  D7FE               	goto	l337
   742  000FDA                     l336:
   743                           
   744                           ;keyboard.c: 34: if (PORTBbits.RB7==1){key=0;while(PORTBbits.RB7==1){};}
   745  000FDA  AE81               	btfss	3969,7,c	;volatile
   746  000FDC  D007               	goto	l340
   747  000FDE  0E00               	movlw	0
   748  000FE0  6E58               	movwf	_key+1,c
   749  000FE2  0E00               	movlw	0
   750  000FE4  6E57               	movwf	_key,c
   751  000FE6  D000               	goto	l341
   752  000FE8                     l341:
   753  000FE8  BE81               	btfsc	3969,7,c	;volatile
   754  000FEA  D7FE               	goto	l341
   755  000FEC                     l340:
   756                           
   757                           ;keyboard.c: 35: if (PORTBbits.RB6==1){key=15;while(PORTBbits.RB6==1){};}
   758  000FEC  AC81               	btfss	3969,6,c	;volatile
   759  000FEE  D009               	goto	l1516
   760  000FF0  0E00               	movlw	0
   761  000FF2  6E58               	movwf	_key+1,c
   762  000FF4  0E0F               	movlw	15
   763  000FF6  6E57               	movwf	_key,c
   764  000FF8  D000               	goto	l345
   765  000FFA                     l345:
   766  000FFA  AC81               	btfss	3969,6,c	;volatile
   767  000FFC  D002               	goto	l1516
   768  000FFE  D7FD               	goto	l345
   769  001000  D000               	goto	l1516
   770  001002                     l1516:
   771                           
   772                           ;keyboard.c: 37: }
   773                           ;keyboard.c: 38: _delay((unsigned long)((1)*(8000000/4000.0)));
   774  001002  0E03               	movlw	3
   775  001004  6E03               	movwf	??_read_keyboard& (0+255),c
   776  001006  0E98               	movlw	152
   777  001008                     u1337:
   778  001008  2EE8               	decfsz	wreg,f,c
   779  00100A  D7FE               	goto	u1337
   780  00100C  2E03               	decfsz	??_read_keyboard& (0+255),f,c
   781  00100E  D7FC               	goto	u1337
   782                           
   783                           ;keyboard.c: 41: return key;
   784  001010  C057  F001         	movff	_key,?_read_keyboard
   785  001014  C058  F002         	movff	_key+1,?_read_keyboard+1
   786  001018  0012               	return	
   787  00101A  0012               	return		;funcret
   788  00101C                     __end_of_read_keyboard:
   789                           	opt stack 0
   790                           tblptru	equ	0xFF8
   791                           tblptrh	equ	0xFF7
   792                           tblptrl	equ	0xFF6
   793                           tablat	equ	0xFF5
   794                           postinc0	equ	0xFEE
   795                           wreg	equ	0xFE8
   796                           postdec1	equ	0xFE5
   797                           fsr1l	equ	0xFE1
   798                           
   799 ;; *************** function _on_led *****************
   800 ;; Defined at:
   801 ;;		line 50 in file "leds.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  pressed_key     1    wreg     unsigned char 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  pressed_key     1   47[COMRAM] unsigned char 
   806 ;;  row_detector    3   42[COMRAM] float 
   807 ;;  value           2   48[COMRAM] int 
   808 ;;  intensity       2   45[COMRAM] short 
   809 ;; Return value:  Size  Location     Type
   810 ;;		None               void
   811 ;; Registers used:
   812 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   819 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   821 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   822 ;;Total ram usage:        8 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    2
   825 ;; This function calls:
   826 ;;		___awtoft
   827 ;;		___ftdiv
   828 ;;		___fttol
   829 ;;		_on
   830 ;; This function is called by:
   831 ;;		_main
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text2
   836  00135A                     __ptext2:
   837                           	opt stack 0
   838  00135A                     _on_led:
   839                           	opt stack 28
   840                           
   841                           ;incstack = 0
   842                           ;on_led@pressed_key stored from wreg
   843  00135A  6E30               	movwf	on_led@pressed_key,c
   844                           
   845                           ;leds.c: 51: float row_detector = 3.5;
   846  00135C  0E00               	movlw	0
   847  00135E  6E2B               	movwf	on_led@row_detector,c
   848  001360  0E60               	movlw	96
   849  001362  6E2C               	movwf	on_led@row_detector+1,c
   850  001364  0E40               	movlw	64
   851  001366  6E2D               	movwf	on_led@row_detector+2,c
   852                           
   853                           ;leds.c: 52: int value = (int)pressed_key;
   854  001368  C030  F031         	movff	on_led@pressed_key,on_led@value
   855  00136C  6A32               	clrf	on_led@value+1,c
   856                           
   857                           ;leds.c: 53: short intensity = value / row_detector;
   858  00136E  C02B  F010         	movff	on_led@row_detector,___ftdiv@f2
   859  001372  C02C  F011         	movff	on_led@row_detector+1,___ftdiv@f2+1
   860  001376  C02D  F012         	movff	on_led@row_detector+2,___ftdiv@f2+2
   861  00137A  C031  F009         	movff	on_led@value,___awtoft@c
   862  00137E  C032  F00A         	movff	on_led@value+1,___awtoft@c+1
   863  001382  EC37  F00A         	call	___awtoft	;wreg free
   864  001386  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   865  00138A  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   866  00138E  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   867  001392  EC8F  F008         	call	___ftdiv	;wreg free
   868  001396  C00D  F01C         	movff	?___ftdiv,___fttol@f1
   869  00139A  C00E  F01D         	movff	?___ftdiv+1,___fttol@f1+1
   870  00139E  C00F  F01E         	movff	?___ftdiv+2,___fttol@f1+2
   871  0013A2  EC0E  F008         	call	___fttol	;wreg free
   872  0013A6  C01C  F02E         	movff	?___fttol,on_led@intensity
   873  0013AA  C01D  F02F         	movff	?___fttol+1,on_led@intensity+1
   874                           
   875                           ;leds.c: 54: on(value, intensity);
   876  0013AE  C031  F007         	movff	on_led@value,on@value
   877  0013B2  C032  F008         	movff	on_led@value+1,on@value+1
   878  0013B6  C02E  F009         	movff	on_led@intensity,on@intensity
   879  0013BA  C02F  F00A         	movff	on_led@intensity+1,on@intensity+1
   880  0013BE  EC68  F009         	call	_on	;wreg free
   881  0013C2  0012               	return		;funcret
   882  0013C4                     __end_of_on_led:
   883                           	opt stack 0
   884                           tblptru	equ	0xFF8
   885                           tblptrh	equ	0xFF7
   886                           tblptrl	equ	0xFF6
   887                           tablat	equ	0xFF5
   888                           postinc0	equ	0xFEE
   889                           wreg	equ	0xFE8
   890                           postdec1	equ	0xFE5
   891                           fsr1l	equ	0xFE1
   892                           
   893 ;; *************** function _on *****************
   894 ;; Defined at:
   895 ;;		line 34 in file "leds.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;  value           2    6[COMRAM] int 
   898 ;;  intensity       2    8[COMRAM] short 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  i               2   11[COMRAM] int 
   901 ;; Return value:  Size  Location     Type
   902 ;;		None               void
   903 ;; Registers used:
   904 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   913 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   914 ;;Total ram usage:        7 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    1
   917 ;; This function calls:
   918 ;;		___wmul
   919 ;;		_select_color
   920 ;;		_shutdown
   921 ;; This function is called by:
   922 ;;		_on_led
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text3
   927  0012D0                     __ptext3:
   928                           	opt stack 0
   929  0012D0                     _on:
   930                           	opt stack 28
   931                           
   932                           ;leds.c: 35: intensity = (intensity + 1) * 10;
   933                           
   934                           ;incstack = 0
   935  0012D0  0E01               	movlw	1
   936  0012D2  2409               	addwf	on@intensity,w,c
   937  0012D4  6E01               	movwf	___wmul@multiplier,c
   938  0012D6  0E00               	movlw	0
   939  0012D8  200A               	addwfc	on@intensity+1,w,c
   940  0012DA  6E02               	movwf	___wmul@multiplier+1,c
   941  0012DC  0E00               	movlw	0
   942  0012DE  6E04               	movwf	___wmul@multiplicand+1,c
   943  0012E0  0E0A               	movlw	10
   944  0012E2  6E03               	movwf	___wmul@multiplicand,c
   945  0012E4  EC6C  F00A         	call	___wmul	;wreg free
   946  0012E8  C001  F009         	movff	?___wmul,on@intensity
   947  0012EC  C002  F00A         	movff	?___wmul+1,on@intensity+1
   948                           
   949                           ;leds.c: 36: int i;
   950                           ;leds.c: 38: for(i = 0; i < intensity; i++){
   951  0012F0  0E00               	movlw	0
   952  0012F2  6E0D               	movwf	on@i+1,c
   953  0012F4  0E00               	movlw	0
   954  0012F6  6E0C               	movwf	on@i,c
   955  0012F8  D00D               	goto	l1372
   956  0012FA                     l1366:
   957                           
   958                           ;leds.c: 39: select_color(value);
   959  0012FA  C007  F001         	movff	on@value,select_color@value
   960  0012FE  C008  F002         	movff	on@value+1,select_color@value+1
   961  001302  ECE2  F009         	call	_select_color	;wreg free
   962                           
   963                           ;leds.c: 40: _delay((unsigned long)((500)*(8000000/4000000.0)));
   964  001306  0EFA               	movlw	250
   965  001308                     u1347:
   966  001308  F000               	nop	
   967  00130A  2EE8               	decfsz	wreg,f,c
   968  00130C  D7FD               	goto	u1347
   969  00130E  4A0C               	infsnz	on@i,f,c
   970  001310  2A0D               	incf	on@i+1,f,c
   971  001312  D000               	goto	l1372
   972  001314                     l1372:
   973  001314  5009               	movf	on@intensity,w,c
   974  001316  5C0C               	subwf	on@i,w,c
   975  001318  500D               	movf	on@i+1,w,c
   976  00131A  0A80               	xorlw	128
   977  00131C  6E0B               	movwf	??_on& (0+255),c
   978  00131E  500A               	movf	on@intensity+1,w,c
   979  001320  0A80               	xorlw	128
   980  001322  580B               	subwfb	??_on& (0+255),w,c
   981  001324  A0D8               	btfss	status,0,c
   982  001326  D7E9               	goto	l1366
   983                           
   984                           ;leds.c: 41: }
   985                           ;leds.c: 43: for(i = intensity; i < 32; i++){
   986  001328  C009  F00C         	movff	on@intensity,on@i
   987  00132C  C00A  F00D         	movff	on@intensity+1,on@i+1
   988  001330                     l1374:
   989  001330  BE0D               	btfsc	on@i+1,7,c
   990  001332  D008               	goto	l1378
   991  001334  500D               	movf	on@i+1,w,c
   992  001336  E110               	bnz	l203
   993  001338  0E20               	movlw	32
   994  00133A  5C0C               	subwf	on@i,w,c
   995  00133C  B0D8               	btfsc	status,0,c
   996  00133E  0012               	return	
   997  001340  D001               	goto	l1378
   998  001342  0012               	return	
   999  001344                     l1378:
  1000                           
  1001                           ;leds.c: 44: shutdown();
  1002  001344  EC95  F00A         	call	_shutdown	;wreg free
  1003                           
  1004                           ;leds.c: 45: _delay((unsigned long)((500)*(8000000/4000000.0)));
  1005  001348  0EFA               	movlw	250
  1006  00134A                     u1357:
  1007  00134A  F000               	nop	
  1008  00134C  2EE8               	decfsz	wreg,f,c
  1009  00134E  D7FD               	goto	u1357
  1010  001350  4A0C               	infsnz	on@i,f,c
  1011  001352  2A0D               	incf	on@i+1,f,c
  1012  001354  D7ED               	goto	l1374
  1013  001356  0012               	return	
  1014  001358                     l203:
  1015  001358  0012               	return		;funcret
  1016  00135A                     __end_of_on:
  1017                           	opt stack 0
  1018                           tblptru	equ	0xFF8
  1019                           tblptrh	equ	0xFF7
  1020                           tblptrl	equ	0xFF6
  1021                           tablat	equ	0xFF5
  1022                           postinc0	equ	0xFEE
  1023                           wreg	equ	0xFE8
  1024                           postdec1	equ	0xFE5
  1025                           fsr1l	equ	0xFE1
  1026                           status	equ	0xFD8
  1027                           
  1028 ;; *************** function _shutdown *****************
  1029 ;; Defined at:
  1030 ;;		line 27 in file "leds.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;		None
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;		None
  1035 ;; Return value:  Size  Location     Type
  1036 ;;		None               void
  1037 ;; Registers used:
  1038 ;;		None
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1048 ;;Total ram usage:        0 bytes
  1049 ;; Hardware stack levels used:    1
  1050 ;; This function calls:
  1051 ;;		Nothing
  1052 ;; This function is called by:
  1053 ;;		_main
  1054 ;;		_on
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text4
  1059  00152A                     __ptext4:
  1060                           	opt stack 0
  1061  00152A                     _shutdown:
  1062                           	opt stack 30
  1063                           
  1064                           ;leds.c: 28: LATAbits.LATA7 = 1;
  1065                           
  1066                           ;incstack = 0
  1067  00152A  8E89               	bsf	3977,7,c	;volatile
  1068                           
  1069                           ;leds.c: 29: LATAbits.LATA5 = 1;
  1070  00152C  8A89               	bsf	3977,5,c	;volatile
  1071                           
  1072                           ;leds.c: 30: LATAbits.LATA3 = 1;
  1073  00152E  8689               	bsf	3977,3,c	;volatile
  1074  001530  0012               	return		;funcret
  1075  001532                     __end_of_shutdown:
  1076                           	opt stack 0
  1077                           tblptru	equ	0xFF8
  1078                           tblptrh	equ	0xFF7
  1079                           tblptrl	equ	0xFF6
  1080                           tablat	equ	0xFF5
  1081                           postinc0	equ	0xFEE
  1082                           wreg	equ	0xFE8
  1083                           postdec1	equ	0xFE5
  1084                           fsr1l	equ	0xFE1
  1085                           status	equ	0xFD8
  1086                           
  1087 ;; *************** function _select_color *****************
  1088 ;; Defined at:
  1089 ;;		line 12 in file "leds.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  value           2    0[COMRAM] int 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;		None               void
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, status,0
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1107 ;;Total ram usage:        2 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_on
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text5
  1117  0013C4                     __ptext5:
  1118                           	opt stack 0
  1119  0013C4                     _select_color:
  1120                           	opt stack 28
  1121                           
  1122                           ;leds.c: 13: if(value == 1 || value == 4 || value ==7){
  1123                           
  1124                           ;incstack = 0
  1125  0013C4  0401               	decf	select_color@value,w,c
  1126  0013C6  1002               	iorwf	select_color@value+1,w,c
  1127  0013C8  B4D8               	btfsc	status,2,c
  1128  0013CA  D00A               	goto	l185
  1129  0013CC  0E04               	movlw	4
  1130  0013CE  1801               	xorwf	select_color@value,w,c
  1131  0013D0  1002               	iorwf	select_color@value+1,w,c
  1132  0013D2  B4D8               	btfsc	status,2,c
  1133  0013D4  D005               	goto	l185
  1134  0013D6  0E07               	movlw	7
  1135  0013D8  1801               	xorwf	select_color@value,w,c
  1136  0013DA  1002               	iorwf	select_color@value+1,w,c
  1137  0013DC  A4D8               	btfss	status,2,c
  1138  0013DE  D002               	goto	l1308
  1139  0013E0                     l185:
  1140                           
  1141                           ;leds.c: 14: LATAbits.LATA3 = 0;
  1142  0013E0  9689               	bcf	3977,3,c	;volatile
  1143  0013E2  D000               	goto	l1308
  1144  0013E4                     l1308:
  1145                           
  1146                           ;leds.c: 15: }
  1147                           ;leds.c: 17: if(value == 2 || value == 5 || value ==8){
  1148  0013E4  0E02               	movlw	2
  1149  0013E6  1801               	xorwf	select_color@value,w,c
  1150  0013E8  1002               	iorwf	select_color@value+1,w,c
  1151  0013EA  B4D8               	btfsc	status,2,c
  1152  0013EC  D00A               	goto	l188
  1153  0013EE  0E05               	movlw	5
  1154  0013F0  1801               	xorwf	select_color@value,w,c
  1155  0013F2  1002               	iorwf	select_color@value+1,w,c
  1156  0013F4  B4D8               	btfsc	status,2,c
  1157  0013F6  D005               	goto	l188
  1158  0013F8  0E08               	movlw	8
  1159  0013FA  1801               	xorwf	select_color@value,w,c
  1160  0013FC  1002               	iorwf	select_color@value+1,w,c
  1161  0013FE  A4D8               	btfss	status,2,c
  1162  001400  D002               	goto	l1314
  1163  001402                     l188:
  1164                           
  1165                           ;leds.c: 18: LATAbits.LATA5 = 0;
  1166  001402  9A89               	bcf	3977,5,c	;volatile
  1167  001404  D000               	goto	l1314
  1168  001406                     l1314:
  1169                           
  1170                           ;leds.c: 19: }
  1171                           ;leds.c: 21: if(value == 3 || value == 6 || value ==9){
  1172  001406  0E03               	movlw	3
  1173  001408  1801               	xorwf	select_color@value,w,c
  1174  00140A  1002               	iorwf	select_color@value+1,w,c
  1175  00140C  B4D8               	btfsc	status,2,c
  1176  00140E  D00A               	goto	l191
  1177  001410  0E06               	movlw	6
  1178  001412  1801               	xorwf	select_color@value,w,c
  1179  001414  1002               	iorwf	select_color@value+1,w,c
  1180  001416  B4D8               	btfsc	status,2,c
  1181  001418  D005               	goto	l191
  1182  00141A  0E09               	movlw	9
  1183  00141C  1801               	xorwf	select_color@value,w,c
  1184  00141E  1002               	iorwf	select_color@value+1,w,c
  1185  001420  A4D8               	btfss	status,2,c
  1186  001422  0012               	return	
  1187  001424                     l191:
  1188                           
  1189                           ;leds.c: 22: LATAbits.LATA7 = 0;
  1190  001424  9E89               	bcf	3977,7,c	;volatile
  1191  001426  0012               	return	
  1192  001428  0012               	return		;funcret
  1193  00142A                     __end_of_select_color:
  1194                           	opt stack 0
  1195                           tblptru	equ	0xFF8
  1196                           tblptrh	equ	0xFF7
  1197                           tblptrl	equ	0xFF6
  1198                           tablat	equ	0xFF5
  1199                           postinc0	equ	0xFEE
  1200                           wreg	equ	0xFE8
  1201                           postdec1	equ	0xFE5
  1202                           fsr1l	equ	0xFE1
  1203                           status	equ	0xFD8
  1204                           
  1205 ;; *************** function ___wmul *****************
  1206 ;; Defined at:
  1207 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  multiplier      2    0[COMRAM] unsigned int 
  1210 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  product         2    4[COMRAM] unsigned int 
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  2    0[COMRAM] unsigned int 
  1215 ;; Registers used:
  1216 ;;		wreg, status,2, status,0, prodl, prodh
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1222 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1225 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1226 ;;Total ram usage:        6 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_on
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text6
  1236  0014D8                     __ptext6:
  1237                           	opt stack 0
  1238  0014D8                     ___wmul:
  1239                           	opt stack 28
  1240                           
  1241                           ;incstack = 0
  1242  0014D8  5001               	movf	___wmul@multiplier,w,c
  1243  0014DA  0203               	mulwf	___wmul@multiplicand,c
  1244  0014DC  CFF3 F005          	movff	prodl,___wmul@product
  1245  0014E0  CFF4 F006          	movff	prodh,___wmul@product+1
  1246  0014E4  5001               	movf	___wmul@multiplier,w,c
  1247  0014E6  0204               	mulwf	___wmul@multiplicand+1,c
  1248  0014E8  50F3               	movf	prodl,w,c
  1249  0014EA  2606               	addwf	___wmul@product+1,f,c
  1250  0014EC  5002               	movf	___wmul@multiplier+1,w,c
  1251  0014EE  0203               	mulwf	___wmul@multiplicand,c
  1252  0014F0  50F3               	movf	prodl,w,c
  1253  0014F2  2606               	addwf	___wmul@product+1,f,c
  1254  0014F4  C005  F001         	movff	___wmul@product,?___wmul
  1255  0014F8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1256  0014FC  0012               	return	
  1257  0014FE  0012               	return		;funcret
  1258  001500                     __end_of___wmul:
  1259                           	opt stack 0
  1260                           tblptru	equ	0xFF8
  1261                           tblptrh	equ	0xFF7
  1262                           tblptrl	equ	0xFF6
  1263                           tablat	equ	0xFF5
  1264                           prodh	equ	0xFF4
  1265                           prodl	equ	0xFF3
  1266                           postinc0	equ	0xFEE
  1267                           wreg	equ	0xFE8
  1268                           postdec1	equ	0xFE5
  1269                           fsr1l	equ	0xFE1
  1270                           status	equ	0xFD8
  1271                           
  1272 ;; *************** function ___fttol *****************
  1273 ;; Defined at:
  1274 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\fttol.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  f1              3   27[COMRAM] float 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  lval            4   37[COMRAM] unsigned long 
  1279 ;;  exp1            1   41[COMRAM] unsigned char 
  1280 ;;  sign1           1   36[COMRAM] unsigned char 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  4   27[COMRAM] long 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2, status,0
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1291 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1292 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1293 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1294 ;;Total ram usage:       15 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_on_led
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text7
  1304  00101C                     __ptext7:
  1305                           	opt stack 0
  1306  00101C                     ___fttol:
  1307                           	opt stack 29
  1308                           
  1309                           ;incstack = 0
  1310  00101C  C01E  F020         	movff	___fttol@f1+2,??___fttol
  1311  001020  6A21               	clrf	(??___fttol+1)& (0+255),c
  1312  001022  6A22               	clrf	(??___fttol+2)& (0+255),c
  1313  001024  341D               	rlcf	___fttol@f1+1,w,c
  1314  001026  3620               	rlcf	??___fttol& (0+255),f,c
  1315  001028  E301               	bnc	u1011
  1316  00102A  8021               	bsf	(??___fttol+1)& (0+255),0,c
  1317  00102C                     u1011:
  1318  00102C  5020               	movf	??___fttol,w,c
  1319  00102E  6E2A               	movwf	___fttol@exp1,c
  1320  001030  502A               	movf	___fttol@exp1,w,c
  1321  001032  A4D8               	btfss	status,2,c
  1322  001034  D009               	goto	l1450
  1323  001036  0E00               	movlw	0
  1324  001038  6E1C               	movwf	?___fttol,c
  1325  00103A  0E00               	movlw	0
  1326  00103C  6E1D               	movwf	?___fttol+1,c
  1327  00103E  0E00               	movlw	0
  1328  001040  6E1E               	movwf	?___fttol+2,c
  1329  001042  0E00               	movlw	0
  1330  001044  6E1F               	movwf	?___fttol+3,c
  1331  001046  0012               	return	
  1332  001048                     l1450:
  1333  001048  0E17               	movlw	23
  1334  00104A  6E20               	movwf	??___fttol& (0+255),c
  1335  00104C  C01C  F021         	movff	___fttol@f1,??___fttol+1
  1336  001050  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  1337  001054  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  1338  001058  2820               	incf	??___fttol,w,c
  1339  00105A  6E24               	movwf	(??___fttol+4)& (0+255),c
  1340  00105C  D004               	goto	u1030
  1341  00105E                     u1035:
  1342  00105E  90D8               	bcf	status,0,c
  1343  001060  3223               	rrcf	??___fttol+3,f,c
  1344  001062  3222               	rrcf	??___fttol+2,f,c
  1345  001064  3221               	rrcf	??___fttol+1,f,c
  1346  001066                     u1030:
  1347  001066  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
  1348  001068  D7FA               	goto	u1035
  1349  00106A  5021               	movf	??___fttol+1,w,c
  1350  00106C  6E25               	movwf	___fttol@sign1,c
  1351  00106E  8E1D               	bsf	___fttol@f1+1,7,c
  1352  001070  0EFF               	movlw	255
  1353  001072  161C               	andwf	___fttol@f1,f,c
  1354  001074  0EFF               	movlw	255
  1355  001076  161D               	andwf	___fttol@f1+1,f,c
  1356  001078  0E00               	movlw	0
  1357  00107A  161E               	andwf	___fttol@f1+2,f,c
  1358  00107C  501C               	movf	___fttol@f1,w,c
  1359  00107E  6E26               	movwf	___fttol@lval,c
  1360  001080  501D               	movf	___fttol@f1+1,w,c
  1361  001082  6E27               	movwf	___fttol@lval+1,c
  1362  001084  501E               	movf	___fttol@f1+2,w,c
  1363  001086  6E28               	movwf	___fttol@lval+2,c
  1364  001088  6A29               	clrf	___fttol@lval+3,c
  1365  00108A  0E8E               	movlw	142
  1366  00108C  5E2A               	subwf	___fttol@exp1,f,c
  1367  00108E  AE2A               	btfss	___fttol@exp1,7,c
  1368  001090  D017               	goto	l1472
  1369  001092  502A               	movf	___fttol@exp1,w,c
  1370  001094  0A80               	xorlw	128
  1371  001096  0F8F               	addlw	143
  1372  001098  B0D8               	btfsc	status,0,c
  1373  00109A  D00A               	goto	l1468
  1374  00109C  0E00               	movlw	0
  1375  00109E  6E1C               	movwf	?___fttol,c
  1376  0010A0  0E00               	movlw	0
  1377  0010A2  6E1D               	movwf	?___fttol+1,c
  1378  0010A4  0E00               	movlw	0
  1379  0010A6  6E1E               	movwf	?___fttol+2,c
  1380  0010A8  0E00               	movlw	0
  1381  0010AA  6E1F               	movwf	?___fttol+3,c
  1382  0010AC  0012               	return	
  1383  0010AE  D000               	goto	l1468
  1384  0010B0                     l1468:
  1385  0010B0  90D8               	bcf	status,0,c
  1386  0010B2  3229               	rrcf	___fttol@lval+3,f,c
  1387  0010B4  3228               	rrcf	___fttol@lval+2,f,c
  1388  0010B6  3227               	rrcf	___fttol@lval+1,f,c
  1389  0010B8  3226               	rrcf	___fttol@lval,f,c
  1390  0010BA  3E2A               	incfsz	___fttol@exp1,f,c
  1391  0010BC  D7F9               	goto	l1468
  1392  0010BE  D019               	goto	l1482
  1393  0010C0                     l1472:
  1394  0010C0  0E17               	movlw	23
  1395  0010C2  642A               	cpfsgt	___fttol@exp1,c
  1396  0010C4  D011               	goto	l1480
  1397  0010C6  0E00               	movlw	0
  1398  0010C8  6E1C               	movwf	?___fttol,c
  1399  0010CA  0E00               	movlw	0
  1400  0010CC  6E1D               	movwf	?___fttol+1,c
  1401  0010CE  0E00               	movlw	0
  1402  0010D0  6E1E               	movwf	?___fttol+2,c
  1403  0010D2  0E00               	movlw	0
  1404  0010D4  6E1F               	movwf	?___fttol+3,c
  1405  0010D6  0012               	return	
  1406  0010D8  D007               	goto	l1480
  1407  0010DA                     l1478:
  1408  0010DA  90D8               	bcf	status,0,c
  1409  0010DC  3626               	rlcf	___fttol@lval,f,c
  1410  0010DE  3627               	rlcf	___fttol@lval+1,f,c
  1411  0010E0  3628               	rlcf	___fttol@lval+2,f,c
  1412  0010E2  3629               	rlcf	___fttol@lval+3,f,c
  1413  0010E4  062A               	decf	___fttol@exp1,f,c
  1414  0010E6  D000               	goto	l1480
  1415  0010E8                     l1480:
  1416  0010E8  502A               	movf	___fttol@exp1,w,c
  1417  0010EA  B4D8               	btfsc	status,2,c
  1418  0010EC  D002               	goto	l1482
  1419  0010EE  D7F5               	goto	l1478
  1420  0010F0  D000               	goto	l1482
  1421  0010F2                     l1482:
  1422  0010F2  5025               	movf	___fttol@sign1,w,c
  1423  0010F4  B4D8               	btfsc	status,2,c
  1424  0010F6  D009               	goto	l1486
  1425  0010F8  1E29               	comf	___fttol@lval+3,f,c
  1426  0010FA  1E28               	comf	___fttol@lval+2,f,c
  1427  0010FC  1E27               	comf	___fttol@lval+1,f,c
  1428  0010FE  6C26               	negf	___fttol@lval,c
  1429  001100  0E00               	movlw	0
  1430  001102  2227               	addwfc	___fttol@lval+1,f,c
  1431  001104  2228               	addwfc	___fttol@lval+2,f,c
  1432  001106  2229               	addwfc	___fttol@lval+3,f,c
  1433  001108  D000               	goto	l1486
  1434  00110A                     l1486:
  1435  00110A  C026  F01C         	movff	___fttol@lval,?___fttol
  1436  00110E  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  1437  001112  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  1438  001116  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  1439  00111A  0012               	return	
  1440  00111C  0012               	return		;funcret
  1441  00111E                     __end_of___fttol:
  1442                           	opt stack 0
  1443                           tblptru	equ	0xFF8
  1444                           tblptrh	equ	0xFF7
  1445                           tblptrl	equ	0xFF6
  1446                           tablat	equ	0xFF5
  1447                           prodh	equ	0xFF4
  1448                           prodl	equ	0xFF3
  1449                           postinc0	equ	0xFEE
  1450                           wreg	equ	0xFE8
  1451                           postdec1	equ	0xFE5
  1452                           fsr1l	equ	0xFE1
  1453                           status	equ	0xFD8
  1454                           
  1455 ;; *************** function ___ftdiv *****************
  1456 ;; Defined at:
  1457 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  f1              3   12[COMRAM] float 
  1460 ;;  f2              3   15[COMRAM] float 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  f3              3   22[COMRAM] float 
  1463 ;;  sign            1   26[COMRAM] unsigned char 
  1464 ;;  exp             1   25[COMRAM] unsigned char 
  1465 ;;  cntr            1   21[COMRAM] unsigned char 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  3   12[COMRAM] float 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2, status,0, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1475 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1476 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1477 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1478 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1479 ;;Total ram usage:       15 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    1
  1482 ;; This function calls:
  1483 ;;		___ftpack
  1484 ;; This function is called by:
  1485 ;;		_on_led
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text8
  1490  00111E                     __ptext8:
  1491                           	opt stack 0
  1492  00111E                     ___ftdiv:
  1493                           	opt stack 28
  1494                           
  1495                           ;incstack = 0
  1496  00111E  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  1497  001122  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  1498  001124  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  1499  001126  340E               	rlcf	___ftdiv@f1+1,w,c
  1500  001128  3613               	rlcf	??___ftdiv& (0+255),f,c
  1501  00112A  E301               	bnc	u951
  1502  00112C  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  1503  00112E                     u951:
  1504  00112E  5013               	movf	??___ftdiv,w,c
  1505  001130  6E1A               	movwf	___ftdiv@exp,c
  1506  001132  501A               	movf	___ftdiv@exp,w,c
  1507  001134  A4D8               	btfss	status,2,c
  1508  001136  D007               	goto	l1392
  1509  001138  0E00               	movlw	0
  1510  00113A  6E0D               	movwf	?___ftdiv,c
  1511  00113C  0E00               	movlw	0
  1512  00113E  6E0E               	movwf	?___ftdiv+1,c
  1513  001140  0E00               	movlw	0
  1514  001142  6E0F               	movwf	?___ftdiv+2,c
  1515  001144  0012               	return	
  1516  001146                     l1392:
  1517  001146  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  1518  00114A  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  1519  00114C  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  1520  00114E  3411               	rlcf	___ftdiv@f2+1,w,c
  1521  001150  3613               	rlcf	??___ftdiv& (0+255),f,c
  1522  001152  E301               	bnc	u971
  1523  001154  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  1524  001156                     u971:
  1525  001156  5013               	movf	??___ftdiv,w,c
  1526  001158  6E1B               	movwf	___ftdiv@sign,c
  1527  00115A  501B               	movf	___ftdiv@sign,w,c
  1528  00115C  A4D8               	btfss	status,2,c
  1529  00115E  D007               	goto	l1398
  1530  001160  0E00               	movlw	0
  1531  001162  6E0D               	movwf	?___ftdiv,c
  1532  001164  0E00               	movlw	0
  1533  001166  6E0E               	movwf	?___ftdiv+1,c
  1534  001168  0E00               	movlw	0
  1535  00116A  6E0F               	movwf	?___ftdiv+2,c
  1536  00116C  0012               	return	
  1537  00116E                     l1398:
  1538  00116E  0E00               	movlw	0
  1539  001170  6E17               	movwf	___ftdiv@f3,c
  1540  001172  0E00               	movlw	0
  1541  001174  6E18               	movwf	___ftdiv@f3+1,c
  1542  001176  0E00               	movlw	0
  1543  001178  6E19               	movwf	___ftdiv@f3+2,c
  1544  00117A  501B               	movf	___ftdiv@sign,w,c
  1545  00117C  0F89               	addlw	137
  1546  00117E  5E1A               	subwf	___ftdiv@exp,f,c
  1547  001180  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  1548  001184  5012               	movf	___ftdiv@f2+2,w,c
  1549  001186  1A1B               	xorwf	___ftdiv@sign,f,c
  1550  001188  0E80               	movlw	128
  1551  00118A  161B               	andwf	___ftdiv@sign,f,c
  1552  00118C  8E0E               	bsf	___ftdiv@f1+1,7,c
  1553  00118E  0EFF               	movlw	255
  1554  001190  160D               	andwf	___ftdiv@f1,f,c
  1555  001192  0EFF               	movlw	255
  1556  001194  160E               	andwf	___ftdiv@f1+1,f,c
  1557  001196  0E00               	movlw	0
  1558  001198  160F               	andwf	___ftdiv@f1+2,f,c
  1559  00119A  8E11               	bsf	___ftdiv@f2+1,7,c
  1560  00119C  0EFF               	movlw	255
  1561  00119E  1610               	andwf	___ftdiv@f2,f,c
  1562  0011A0  0EFF               	movlw	255
  1563  0011A2  1611               	andwf	___ftdiv@f2+1,f,c
  1564  0011A4  0E00               	movlw	0
  1565  0011A6  1612               	andwf	___ftdiv@f2+2,f,c
  1566  0011A8  0E18               	movlw	24
  1567  0011AA  6E16               	movwf	___ftdiv@cntr,c
  1568  0011AC  D000               	goto	l1418
  1569  0011AE                     l1418:
  1570  0011AE  90D8               	bcf	status,0,c
  1571  0011B0  3617               	rlcf	___ftdiv@f3,f,c
  1572  0011B2  3618               	rlcf	___ftdiv@f3+1,f,c
  1573  0011B4  3619               	rlcf	___ftdiv@f3+2,f,c
  1574  0011B6  5010               	movf	___ftdiv@f2,w,c
  1575  0011B8  5C0D               	subwf	___ftdiv@f1,w,c
  1576  0011BA  5011               	movf	___ftdiv@f2+1,w,c
  1577  0011BC  580E               	subwfb	___ftdiv@f1+1,w,c
  1578  0011BE  5012               	movf	___ftdiv@f2+2,w,c
  1579  0011C0  580F               	subwfb	___ftdiv@f1+2,w,c
  1580  0011C2  A0D8               	btfss	status,0,c
  1581  0011C4  D007               	goto	l748
  1582  0011C6  5010               	movf	___ftdiv@f2,w,c
  1583  0011C8  5E0D               	subwf	___ftdiv@f1,f,c
  1584  0011CA  5011               	movf	___ftdiv@f2+1,w,c
  1585  0011CC  5A0E               	subwfb	___ftdiv@f1+1,f,c
  1586  0011CE  5012               	movf	___ftdiv@f2+2,w,c
  1587  0011D0  5A0F               	subwfb	___ftdiv@f1+2,f,c
  1588  0011D2  8017               	bsf	___ftdiv@f3,0,c
  1589  0011D4                     l748:
  1590  0011D4  90D8               	bcf	status,0,c
  1591  0011D6  360D               	rlcf	___ftdiv@f1,f,c
  1592  0011D8  360E               	rlcf	___ftdiv@f1+1,f,c
  1593  0011DA  360F               	rlcf	___ftdiv@f1+2,f,c
  1594  0011DC  2E16               	decfsz	___ftdiv@cntr,f,c
  1595  0011DE  D7E7               	goto	l1418
  1596  0011E0  D000               	goto	l1428
  1597  0011E2                     l1428:
  1598  0011E2  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  1599  0011E6  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1600  0011EA  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1601  0011EE  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  1602  0011F2  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  1603  0011F6  EC05  F009         	call	___ftpack	;wreg free
  1604  0011FA  C001  F00D         	movff	?___ftpack,?___ftdiv
  1605  0011FE  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  1606  001202  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  1607  001206  0012               	return	
  1608  001208  0012               	return		;funcret
  1609  00120A                     __end_of___ftdiv:
  1610                           	opt stack 0
  1611                           tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           prodh	equ	0xFF4
  1616                           prodl	equ	0xFF3
  1617                           postinc0	equ	0xFEE
  1618                           wreg	equ	0xFE8
  1619                           postdec1	equ	0xFE5
  1620                           fsr1l	equ	0xFE1
  1621                           status	equ	0xFD8
  1622                           
  1623 ;; *************** function ___awtoft *****************
  1624 ;; Defined at:
  1625 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\awtoft.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  c               2    8[COMRAM] int 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  sign            1   11[COMRAM] unsigned char 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  3    8[COMRAM] float 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2, status,0, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1639 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1642 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1643 ;;Total ram usage:        4 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    1
  1646 ;; This function calls:
  1647 ;;		___ftpack
  1648 ;; This function is called by:
  1649 ;;		_on_led
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text9
  1654  00146E                     __ptext9:
  1655                           	opt stack 0
  1656  00146E                     ___awtoft:
  1657                           	opt stack 28
  1658                           
  1659                           ;incstack = 0
  1660  00146E  0E00               	movlw	0
  1661  001470  6E0C               	movwf	___awtoft@sign,c
  1662  001472  AE0A               	btfss	___awtoft@c+1,7,c
  1663  001474  D007               	goto	l1440
  1664  001476  6C09               	negf	___awtoft@c,c
  1665  001478  1E0A               	comf	___awtoft@c+1,f,c
  1666  00147A  B0D8               	btfsc	status,0,c
  1667  00147C  2A0A               	incf	___awtoft@c+1,f,c
  1668  00147E  0E01               	movlw	1
  1669  001480  6E0C               	movwf	___awtoft@sign,c
  1670  001482  D000               	goto	l1440
  1671  001484                     l1440:
  1672  001484  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1673  001488  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1674  00148C  6A03               	clrf	___ftpack@arg+2,c
  1675  00148E  0E8E               	movlw	142
  1676  001490  6E04               	movwf	___ftpack@exp,c
  1677  001492  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1678  001496  EC05  F009         	call	___ftpack	;wreg free
  1679  00149A  C001  F009         	movff	?___ftpack,?___awtoft
  1680  00149E  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1681  0014A2  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1682  0014A6  0012               	return	
  1683  0014A8  0012               	return		;funcret
  1684  0014AA                     __end_of___awtoft:
  1685                           	opt stack 0
  1686                           tblptru	equ	0xFF8
  1687                           tblptrh	equ	0xFF7
  1688                           tblptrl	equ	0xFF6
  1689                           tablat	equ	0xFF5
  1690                           prodh	equ	0xFF4
  1691                           prodl	equ	0xFF3
  1692                           postinc0	equ	0xFEE
  1693                           wreg	equ	0xFE8
  1694                           postdec1	equ	0xFE5
  1695                           fsr1l	equ	0xFE1
  1696                           status	equ	0xFD8
  1697                           
  1698 ;; *************** function ___ftpack *****************
  1699 ;; Defined at:
  1700 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\float.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  arg             3    0[COMRAM] unsigned um
  1703 ;;  exp             1    3[COMRAM] unsigned char 
  1704 ;;  sign            1    4[COMRAM] unsigned char 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  3    0[COMRAM] float 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1716 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1718 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1719 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1720 ;;Total ram usage:        8 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		___awtoft
  1726 ;;		___ftdiv
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text10
  1731  00120A                     __ptext10:
  1732                           	opt stack 0
  1733  00120A                     ___ftpack:
  1734                           	opt stack 28
  1735                           
  1736                           ;incstack = 0
  1737  00120A  5004               	movf	___ftpack@exp,w,c
  1738  00120C  B4D8               	btfsc	status,2,c
  1739  00120E  D005               	goto	l1330
  1740  001210  5001               	movf	___ftpack@arg,w,c
  1741  001212  1002               	iorwf	___ftpack@arg+1,w,c
  1742  001214  1003               	iorwf	___ftpack@arg+2,w,c
  1743  001216  A4D8               	btfss	status,2,c
  1744  001218  D00E               	goto	l1336
  1745  00121A                     l1330:
  1746  00121A  0E00               	movlw	0
  1747  00121C  6E01               	movwf	?___ftpack,c
  1748  00121E  0E00               	movlw	0
  1749  001220  6E02               	movwf	?___ftpack+1,c
  1750  001222  0E00               	movlw	0
  1751  001224  6E03               	movwf	?___ftpack+2,c
  1752  001226  0012               	return	
  1753  001228  D006               	goto	l1336
  1754  00122A                     l1334:
  1755  00122A  2A04               	incf	___ftpack@exp,f,c
  1756  00122C  90D8               	bcf	status,0,c
  1757  00122E  3203               	rrcf	___ftpack@arg+2,f,c
  1758  001230  3202               	rrcf	___ftpack@arg+1,f,c
  1759  001232  3201               	rrcf	___ftpack@arg,f,c
  1760  001234  D000               	goto	l1336
  1761  001236                     l1336:
  1762  001236  0E00               	movlw	0
  1763  001238  1401               	andwf	___ftpack@arg,w,c
  1764  00123A  6E06               	movwf	??___ftpack& (0+255),c
  1765  00123C  0E00               	movlw	0
  1766  00123E  1402               	andwf	___ftpack@arg+1,w,c
  1767  001240  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1768  001242  0EFE               	movlw	254
  1769  001244  1403               	andwf	___ftpack@arg+2,w,c
  1770  001246  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1771  001248  5006               	movf	??___ftpack,w,c
  1772  00124A  1007               	iorwf	??___ftpack+1,w,c
  1773  00124C  1008               	iorwf	??___ftpack+2,w,c
  1774  00124E  B4D8               	btfsc	status,2,c
  1775  001250  D00E               	goto	l1342
  1776  001252  D7EB               	goto	l1334
  1777  001254  D00C               	goto	l1342
  1778  001256                     l1338:
  1779  001256  2A04               	incf	___ftpack@exp,f,c
  1780  001258  0E01               	movlw	1
  1781  00125A  2601               	addwf	___ftpack@arg,f,c
  1782  00125C  0E00               	movlw	0
  1783  00125E  2202               	addwfc	___ftpack@arg+1,f,c
  1784  001260  0E00               	movlw	0
  1785  001262  2203               	addwfc	___ftpack@arg+2,f,c
  1786  001264  90D8               	bcf	status,0,c
  1787  001266  3203               	rrcf	___ftpack@arg+2,f,c
  1788  001268  3202               	rrcf	___ftpack@arg+1,f,c
  1789  00126A  3201               	rrcf	___ftpack@arg,f,c
  1790  00126C  D000               	goto	l1342
  1791  00126E                     l1342:
  1792  00126E  0E00               	movlw	0
  1793  001270  1401               	andwf	___ftpack@arg,w,c
  1794  001272  6E06               	movwf	??___ftpack& (0+255),c
  1795  001274  0E00               	movlw	0
  1796  001276  1402               	andwf	___ftpack@arg+1,w,c
  1797  001278  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1798  00127A  0EFF               	movlw	255
  1799  00127C  1403               	andwf	___ftpack@arg+2,w,c
  1800  00127E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1801  001280  5006               	movf	??___ftpack,w,c
  1802  001282  1007               	iorwf	??___ftpack+1,w,c
  1803  001284  1008               	iorwf	??___ftpack+2,w,c
  1804  001286  B4D8               	btfsc	status,2,c
  1805  001288  D008               	goto	l1346
  1806  00128A  D7E5               	goto	l1338
  1807  00128C  D006               	goto	l1346
  1808  00128E                     l1344:
  1809  00128E  0604               	decf	___ftpack@exp,f,c
  1810  001290  90D8               	bcf	status,0,c
  1811  001292  3601               	rlcf	___ftpack@arg,f,c
  1812  001294  3602               	rlcf	___ftpack@arg+1,f,c
  1813  001296  3603               	rlcf	___ftpack@arg+2,f,c
  1814  001298  D000               	goto	l1346
  1815  00129A                     l1346:
  1816  00129A  BE02               	btfsc	___ftpack@arg+1,7,c
  1817  00129C  D004               	goto	l684
  1818  00129E  0E02               	movlw	2
  1819  0012A0  6004               	cpfslt	___ftpack@exp,c
  1820  0012A2  D7F5               	goto	l1344
  1821  0012A4  D000               	goto	l684
  1822  0012A6                     l684:
  1823  0012A6  B004               	btfsc	___ftpack@exp,0,c
  1824  0012A8  D002               	goto	l1352
  1825  0012AA  9E02               	bcf	___ftpack@arg+1,7,c
  1826  0012AC  D000               	goto	l1352
  1827  0012AE                     l1352:
  1828  0012AE  90D8               	bcf	status,0,c
  1829  0012B0  3204               	rrcf	___ftpack@exp,f,c
  1830  0012B2  5004               	movf	___ftpack@exp,w,c
  1831  0012B4  1203               	iorwf	___ftpack@arg+2,f,c
  1832  0012B6  5005               	movf	___ftpack@sign,w,c
  1833  0012B8  B4D8               	btfsc	status,2,c
  1834  0012BA  D002               	goto	l1358
  1835  0012BC  8E03               	bsf	___ftpack@arg+2,7,c
  1836  0012BE  D000               	goto	l1358
  1837  0012C0                     l1358:
  1838  0012C0  C001  F001         	movff	___ftpack@arg,?___ftpack
  1839  0012C4  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1840  0012C8  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1841  0012CC  0012               	return	
  1842  0012CE  0012               	return		;funcret
  1843  0012D0                     __end_of___ftpack:
  1844                           	opt stack 0
  1845                           tblptru	equ	0xFF8
  1846                           tblptrh	equ	0xFF7
  1847                           tblptrl	equ	0xFF6
  1848                           tablat	equ	0xFF5
  1849                           prodh	equ	0xFF4
  1850                           prodl	equ	0xFF3
  1851                           postinc0	equ	0xFEE
  1852                           wreg	equ	0xFE8
  1853                           postdec1	equ	0xFE5
  1854                           fsr1l	equ	0xFE1
  1855                           status	equ	0xFD8
  1856                           
  1857 ;; *************** function _Setup *****************
  1858 ;; Defined at:
  1859 ;;		line 33 in file "main.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;		None               void
  1866 ;; Registers used:
  1867 ;;		wreg, status,2
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1877 ;;Total ram usage:        0 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_main
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text11
  1887  0014AA                     __ptext11:
  1888                           	opt stack 0
  1889  0014AA                     _Setup:
  1890                           	opt stack 30
  1891                           
  1892                           ;main.c: 35: OSCTUNEbits.INTSRC=1;
  1893                           
  1894                           ;incstack = 0
  1895  0014AA  8E9B               	bsf	3995,7,c	;volatile
  1896                           
  1897                           ;main.c: 36: OSCTUNEbits.PLLEN=0;
  1898  0014AC  9C9B               	bcf	3995,6,c	;volatile
  1899                           
  1900                           ;main.c: 37: OSCCONbits.IRCF0=1;
  1901  0014AE  88D3               	bsf	4051,4,c	;volatile
  1902                           
  1903                           ;main.c: 38: OSCCONbits.IRCF1=1;
  1904  0014B0  8AD3               	bsf	4051,5,c	;volatile
  1905                           
  1906                           ;main.c: 39: OSCCONbits.IRCF2=1;
  1907  0014B2  8CD3               	bsf	4051,6,c	;volatile
  1908                           
  1909                           ;main.c: 40: OSCCONbits.SCS0=0;
  1910  0014B4  90D3               	bcf	4051,0,c	;volatile
  1911                           
  1912                           ;main.c: 41: OSCCONbits.SCS1=0;
  1913  0014B6  92D3               	bcf	4051,1,c	;volatile
  1914                           
  1915                           ;main.c: 42: TRISA = 0b01010111;
  1916  0014B8  0E57               	movlw	87
  1917  0014BA  6E92               	movwf	3986,c	;volatile
  1918                           
  1919                           ;main.c: 43: TRISB = 0b11100000;
  1920  0014BC  0EE0               	movlw	224
  1921  0014BE  6E93               	movwf	3987,c	;volatile
  1922                           
  1923                           ;main.c: 44: TRISC = 0;
  1924  0014C0  0E00               	movlw	0
  1925  0014C2  6E94               	movwf	3988,c	;volatile
  1926                           
  1927                           ;main.c: 48: ANCON0=0b11111111;
  1928  0014C4  010F               	movlb	15	; () banked
  1929  0014C6  6948               	setf	72,b	;volatile
  1930                           
  1931                           ; BSR set to: 15
  1932                           ;main.c: 50: ANCON1=0b11111111;
  1933  0014C8  010F               	movlb	15	; () banked
  1934  0014CA  6949               	setf	73,b	;volatile
  1935                           
  1936                           ; BSR set to: 15
  1937                           ;main.c: 53: RTCCFGbits.RTCEN=1;
  1938  0014CC  010F               	movlb	15	; () banked
  1939  0014CE  8F3F               	bsf	63,7,b	;volatile
  1940                           
  1941                           ; BSR set to: 15
  1942                           ;main.c: 54: RTCCFGbits.RTCWREN=1;
  1943  0014D0  010F               	movlb	15	; () banked
  1944  0014D2  8B3F               	bsf	63,5,b	;volatile
  1945                           
  1946                           ; BSR set to: 15
  1947                           ;main.c: 55: T1CONbits.T1OSCEN=1;
  1948  0014D4  86CD               	bsf	4045,3,c	;volatile
  1949                           
  1950                           ; BSR set to: 15
  1951  0014D6  0012               	return		;funcret
  1952  0014D8                     __end_of_Setup:
  1953                           	opt stack 0
  1954                           tblptru	equ	0xFF8
  1955                           tblptrh	equ	0xFF7
  1956                           tblptrl	equ	0xFF6
  1957                           tablat	equ	0xFF5
  1958                           prodh	equ	0xFF4
  1959                           prodl	equ	0xFF3
  1960                           postinc0	equ	0xFEE
  1961                           wreg	equ	0xFE8
  1962                           postdec1	equ	0xFE5
  1963                           fsr1l	equ	0xFE1
  1964                           status	equ	0xFD8
  1965                           tblptru	equ	0xFF8
  1966                           tblptrh	equ	0xFF7
  1967                           tblptrl	equ	0xFF6
  1968                           tablat	equ	0xFF5
  1969                           prodh	equ	0xFF4
  1970                           prodl	equ	0xFF3
  1971                           postinc0	equ	0xFEE
  1972                           wreg	equ	0xFE8
  1973                           postdec1	equ	0xFE5
  1974                           fsr1l	equ	0xFE1
  1975                           status	equ	0xFD8
  1976                           
  1977                           	psect	rparam
  1978  0000                     tblptru	equ	0xFF8
  1979                           tblptrh	equ	0xFF7
  1980                           tblptrl	equ	0xFF6
  1981                           tablat	equ	0xFF5
  1982                           prodh	equ	0xFF4
  1983                           prodl	equ	0xFF3
  1984                           postinc0	equ	0xFEE
  1985                           wreg	equ	0xFE8
  1986                           postdec1	equ	0xFE5
  1987                           fsr1l	equ	0xFE1
  1988                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    4
    Data        15
    BSS         92
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      94
    BANK0           160      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_on_led
    _on_led->___fttol
    _on->___wmul
    ___fttol->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4297
                              _Setup
                             _on_led
                      _read_keyboard
                           _shutdown
 ---------------------------------------------------------------------------------
 (1) _read_keyboard                                        3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _on_led                                               8     8      0    4297
                                             42 COMRAM     8     8      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
                                 _on
 ---------------------------------------------------------------------------------
 (2) _on                                                   7     3      4     731
                                              6 COMRAM     7     3      4
                             ___wmul
                       _select_color
                           _shutdown
 ---------------------------------------------------------------------------------
 (1) _shutdown                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _select_color                                         2     0      2     241
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     245
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     295
                                             27 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    1725
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    1433
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1299
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _on_led
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _on
       ___wmul
       _select_color
       _shutdown
   _read_keyboard
   _shutdown

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      40       5       40.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     32      5E       1       98.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E       6        0.0%
DATA                 0      0      9E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Nov 01 19:54:24 2016

                      _a 0033                        _b 0035                        _c 0037  
                      _i 0039                        _j 003B                        _k 003D  
            _state_alarm 005D                       _on 12D0      ___wmul@multiplicand 0003  
           __CFG_CP0$OFF 000000                      l203 1358                      l300 0F20  
                    l301 0F1C                      l320 0F82                      l312 0F5E  
                    l304 0F32                      ?_on 0007                      l321 0F7E  
                    l313 0F5A                      l305 0F2E                      l340 0FEC  
                    l332 0FC0                      l324 0F9C                      l316 0F70  
                    l308 0F44                      l341 0FE8                      l333 0FBC  
                    l325 0F98                      l317 0F6C                      l309 0F40  
                    l191 1424                      l336 0FDA                      l328 0FAE  
                    l185 13E0                      l345 0FFA                      l337 0FD6  
                    l329 0FAA                      l188 1402                      l684 12A6  
                    l748 11D4                      u951 112E                      u971 1156  
                    _dia 0051                      _key 0057                      _mes 0059  
                    on@i 000C                      wreg 000FE8                     ??_on 000B  
           ___ftdiv@cntr 0016             ___ftdiv@sign 001B                     l1330 121A  
                   l1314 1406                     l1308 13E4                     l1342 126E  
                   l1334 122A                     l1352 12AE                     l1344 128E  
                   l1336 1236                     l1440 1484                     l1346 129A  
                   l1338 1256                     l1418 11AE                     l1450 1048  
                   l1428 11E2                     l1372 1314                     l1516 1002  
                   l1358 12C0                     l1374 1330                     l1366 12FA  
                   l1534 150A                     l1392 1146                     l1480 10E8  
                   l1472 10C0                     l1482 10F2                     l1378 1344  
                   l1468 10B0                     l1398 116E                     l1486 110A  
                   l1478 10DA                     u1011 102C                     u1030 1066  
                   u1035 105E                     u1337 1008                     u1347 1308  
                   u1357 134A                     _anio 004F                     _flag 02F0  
                   _main 1500                     _hora 0055             ___ftpack@arg 0001  
           ___ftpack@exp 0004                     fsr1l 000FE1            __CFG_T1DIG$ON 000000  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000             ___param_bank 000010              on@intensity 0009  
           ___fttol@exp1 002A             ___fttol@lval 0026            __CFG_PLLDIV$1 000000  
                  ?_main 0001          __end_of___ftdiv 120A          __end_of___fttol 111E  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
         __CFG_FCMEN$OFF 000000                    _Setup 14AA            ___awtoft@sign 000C  
                  _mes_d 0048                    _mes_u 0049            ___ftpack@sign 0005  
         __pbitbssCOMRAM 02F0                    tablat 000FF5                    status 000FD8  
__CFG_DSWDTOSC$INTOSCREF 000000          __initialization 142A             __end_of_main 151A  
                 ??_main 0033            ___fttol@sign1 0025            __activetblptr 000002  
                 ?_Setup 0001                   _ANCON0 000F48                   _ANCON1 000F49  
       __end_of___awtoft 14AA         __end_of___ftpack 12D0           __CFG_WDTEN$OFF 000000  
         __CFG_WPCFG$OFF 000000           __CFG_WPDIS$OFF 000000           __CFG_XINST$OFF 000000  
                 ___wmul 14D8           __CFG_STVREN$ON 000000                ??___ftdiv 0013  
                 _diasem 0053                   _anio_d 0041                ??___fttol 0020  
                 _anio_u 0042                   _hora_d 0046                   _hora_u 0047  
        _sensorDisparado 004E                   clear_0 1430                   clear_1 143E  
                 _on_led 135A                   _minuto 005B             __pdataCOMRAM 004F  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8         __end_of_shutdown 1532   __size_of_read_keyboard 0116  
             __accesstop 0060  __end_of__initialization 1464            ___rparam_used 000001  
             ___ftdiv@f1 000D               ___ftdiv@f2 0010               ___ftdiv@f3 0017  
             ___awtoft@c 0009               ___fttol@f1 001C           __pcstackCOMRAM 0001  
          __end_of_Setup 14D8          __CFG_DSWDTPS$G2 000000               __end_of_on 135A  
             _diaDisparo 0098              on_led@value 0031          __CFG_OSC$INTOSC 000000  
                ??_Setup 0001               __pbssBANK0 0060               _dia_semana 0043  
                ?___wmul 0001            _read_keyboard 0F06            ?_select_color 0001  
                ?_on_led 0001                ?___awtoft 0009                ?___ftpack 0001  
             _mesDisparo 009C               _minDisparo 009E                  __Hparam 0000  
                __Lparam 0000                  ___ftdiv 111E           ?_read_keyboard 0001  
        __size_of___wmul 0028                  ___fttol 101C                ?_shutdown 0001  
         ??_select_color 0003             __psmallconst 0F00              _RtccTimeVal 0094  
                _fecha_d 0044                  __pcinit 142A                  _fecha_u 0045  
             ??___awtoft 000C               ??___ftpack 0006                  __ramtop 0F00  
        __size_of_on_led 006A                  __ptext0 1500                  __ptext1 0F06  
                __ptext2 135A                  __ptext3 12D0                  __ptext4 152A  
                __ptext5 13C4                  __ptext6 14D8                  __ptext7 101C  
                __ptext8 111E                  __ptext9 146E                  _buffer2 0060  
              _T1CONbits 000FCD                  _segundo 003F                  on@value 0007  
   end_of_initialization 1464        select_color@value 0001            __Lmediumconst 0000  
                postdec1 000FE5                  postinc0 000FEE               ??_shutdown 0001  
              _PORTBbits 000F81         __CFG_DSBOREN$OFF 000000         __CFG_CPUDIV$OSC1 000000  
              _TRISBbits 000F93          _LCD_INIT_STRING 0F01              ___ftdiv@exp 001A  
       __CFG_IOL1WAY$OFF 000000      __CFG_MSSP7B_EN$MSK7 000000          ??_read_keyboard 0003  
         __end_of___wmul 1500            __pidataCOMRAM 151A           __end_of_on_led 13C4  
       __CFG_DSWDTEN$OFF 000000      start_initialization 142A     __end_of_select_color 142A  
     on_led@row_detector 002B                 ??___wmul 0005         __CFG_LPT1OSC$OFF 000000  
               ??_on_led 002B  __end_of_LCD_INIT_STRING 0F05        __size_of___awtoft 003C  
      __size_of___ftpack 00C6              __pbssCOMRAM 0033          on_led@intensity 002E  
               ?___ftdiv 000D                 ?___fttol 001C        __size_of_shutdown 0008  
            __smallconst 0F00     __CFG_RTCOSC$T1OSCREF 000000           __size_of_Setup 002E  
            __size_of_on 008A         _RtccAlrmTimeDate 0074           ___wmul@product 0005  
               _LATAbits 000F89                 _LATBbits 000F8A                _segundo_d 004C  
              _segundo_u 004D         __CFG_WDTPS$32768 000000       _Rtcc_read_TimeDate 0084  
      ___wmul@multiplier 0001        on_led@pressed_key 0030    __size_of_select_color 0066  
              copy_data0 1458              _horaDisparo 009A                 __Hrparam 0000  
               _RtccDate 008C                 __Lrparam 0000                 _RtccTime 0090  
       __size_of___ftdiv 00EC         __size_of___fttol 0102             _select_color 13C4  
               ___awtoft 146E                 ___ftpack 120A             _RtccTimeDate 007C  
               __ptext10 120A                 __ptext11 14AA            __size_of_main 001A  
               _minuto_d 004A                 _minuto_u 004B    __end_of_read_keyboard 101C  
               _shutdown 152A              _OSCTUNEbits 000F9B               _OSCCONbits 000FD3  
             _RTCCFGbits 000F3F  
